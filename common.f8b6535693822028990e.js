(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{gLp2:function(s,e,t){"use strict";t.d(e,"a",(function(){return r}));var i=t("bwdy"),o=t("ROBh"),a=t("jxfh"),c=t("cJ9h");class r{constructor(s,e){this.uiPromptService=s,this.notificationService=e,this.subscriptions=new i.a}showValidationErrors(){this.form.markAllAsTouched(),Object.keys(this.form.controls).forEach(s=>{this.form.get(s).updateValueAndValidity()})}openUnsavedChangesPrompt(s,e,t,i=!1){const r=this.uiPromptService.prompt(e).afterClosed().pipe(Object(c.a)(e=>e.ok?(i&&this.showValidationErrors(),Object(o.a)({Message:t})):(s.close(),Object(o.a)({Message:"Changes not saved."})))).subscribe(s=>{this.notificationService.show(a.NotificationType.success,"",s.Message,2500)});this.subscriptions.add(r)}OpenUnsavedChangesPromptBottomSheet(s,e,t,i=!1){const r=this.uiPromptService.prompt(e).afterClosed().pipe(Object(c.a)(e=>e.ok?(i&&this.showValidationErrors(),Object(o.a)({Message:t})):(s.dismiss(),Object(o.a)({Message:"Changes not saved."})))).subscribe(s=>{this.notificationService.show(a.NotificationType.success,"",s.Message,2500)});this.subscriptions.add(r)}}}}]);