{"version":3,"sources":["./src/app/features/admin/form-builder/tasks/tasks-routing.module.ts","./src/app/features/admin/form-builder/tasks/tasks.component.ts","./src/app/features/admin/form-builder/tasks/tasks.component.html","./src/app/features/admin/form-builder/tasks/tasks.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEJ;;;AAEnD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE,CAAC,CAAC;AAM1D,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AAClC;AACJ;AACY;AACiB;AAC1B;AACM;AAC3B;AACgE;AACxC;;;;;;;;;;;;ICPnD,yEAAyE;IAAA,yEAAc;IAAA,4DAAK;;;IAC5F,yEACE;IAAA,+EAA+C;IAAA,gEAAK;IAAA,4DAAW;IAC/D,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,wFACF;;;IAoCA,yEAAyE;IAAA,sEAAW;IAAA,4DAAK;;;IACzF,yEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,+FACF;;;IAkBA,oEAA8D;;;;IAC9D,yEACE;IAAA,6EACE;IAD0C,2WAAkC;IAC5E,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IACrC,4DAAS;IACX,4DAAK;;;IAGP,oEAA4D;;;;IAC5D,yEAAyF;IAArF,sVAAuB;IAAyD,4DAAK;;ADxDpF,MAAM,cAAc;IAsBzB,YACS,MAAiB,EAChB,kBAAsC,EACtC,cAA8B,EAC/B,mBAA0C,EACzC,YAAqC;QAJtC,WAAM,GAAN,MAAM,CAAW;QAChB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC/B,wBAAmB,GAAnB,mBAAmB,CAAuB;QACzC,iBAAY,GAAZ,YAAY,CAAyB;QA1B/C,oCAAoC;QACpC,aAAQ,GAAmB,EAAE,CAAC;QAE9B,qBAAgB,GAAa;YAC3B,MAAM;YACN,mBAAmB;YACnB,gBAAgB;YAChB,UAAU;YACV,MAAM;YACN,YAAY;YACZ,QAAQ;SACT,CAAC;QACF,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAOnD,gBAAW,GAAG,IAAI,4CAAO,EAAM,CAAC;IAQ7B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACvF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,WAAW;aAChC,IAAI,CACH,gEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAC3B,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YACnC,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EACF,+DAAQ,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CACzE;aACA,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC;YAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEL,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;QAChE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IACxB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3C,MAAM,OAAO,GAAiB;YAC5B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU;YACvC,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;YAC/B,IAAI,EAAE,WAAW,GAAG,SAAS;YAC7B,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;SACxB,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClE,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,qDAAqD;IACvD,CAAC;IAED,QAAQ,CAAC,IAAkB;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mEAAyB,EAAE;YAC5D,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;gBACV,aAAa,EAAE,MAAM;aACtB;YACD,UAAU,EAAE,kBAAkB;SAC/B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC7D,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAkB,EAAE,KAAY;QACzC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,0DAAgB,CAAC,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;IAC7F,CAAC;;4EArHU,cAAc;8FAAd,cAAc;kEAiBd,8DAAO;;;;;QCjCpB,2EACE;QAAA,2EACE;QAAA,wGAAyE;QACzE,wGACE;QAGJ,qEAAe;QAkCf,2EACE;QAAA,wGAAyE;QACzE,wGACE;QAEJ,qEAAe;QAgBf,2EACE;QAAA,wGAAyD;QACzD,wGACE;QAIJ,qEAAe;QAEf,0GAAuD;QACvD,0GAAoF;QACtF,4DAAQ;QAER,0EACE;QAAA,8EAAoE;QAApB,uIAAS,aAAS,IAAC;QAAC,4EAAU;QAAA,+DAAG;QAAA,4DAAW;QAAC,wEAAW;QAAA,4DAAS;QACnH,4DAAM;;QA7EW,sFAAyB;QAuErB,2DAAmC;QAAnC,iGAAmC;QAClB,0DAA+C;QAA/C,kGAA+C;;6FDxDxE,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;+ZAkBqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;;;;;;;;;;;;;;AEjCpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACa;AACT;AACM;AACF;AACA;AACI;AACA;AACF;AACZ;AACsB;AACN;AACJ;AACE;AACT;;AAqB3C,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAjBb;YACP,4DAAY;YACZ,wEAAkB;YAClB,sEAAc;YACd,oEAAa;YACb,oEAAa;YACb,wEAAe;YACf,wEAAe;YACf,sEAAc;YACd,2DAAW;YACX,iFAAmB;YACnB,2EAAmB;YACnB,uEAAc;YACd,yEAAe;YACf,gEAAqB;SACtB;mIAEU,WAAW,mBAlBP,+DAAc,aAE3B,4DAAY;QACZ,wEAAkB;QAClB,sEAAc;QACd,oEAAa;QACb,oEAAa;QACb,wEAAe;QACf,wEAAe;QACf,sEAAc;QACd,2DAAW;QACX,iFAAmB;QACnB,2EAAmB;QACnB,uEAAc;QACd,yEAAe;QACf,gEAAqB;6FAGZ,WAAW;cAnBvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,+DAAc,CAAC;gBAC9B,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAkB;oBAClB,sEAAc;oBACd,oEAAa;oBACb,oEAAa;oBACb,wEAAe;oBACf,wEAAe;oBACf,sEAAc;oBACd,2DAAW;oBACX,iFAAmB;oBACnB,2EAAmB;oBACnB,uEAAc;oBACd,yEAAe;oBACf,gEAAqB;iBACtB;aACF","file":"features-admin-form-builder-tasks-tasks-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TasksComponent } from './tasks.component';\n\nconst routes: Routes = [{ path: '', component: TasksComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ApiTaskService, FormTemplate, TaskTemplate, User } from '@xenon/api';\nimport { FormBuilderService } from '@xenon/layouts';\nimport { mergeMap, takeUntil, map } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { EditTaskTemplateComponent, NotificationType, UiNotificationService } from '@xenon/ui';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss'],\n})\nexport class TasksComponent implements OnInit, AfterViewInit, OnDestroy {\n  //TODO Remove this and use live data\n  taskList: TaskTemplate[] = [];\n\n  displayedColumns: string[] = [\n    'name',\n    // 'organizations',\n    // 'repetition',\n    // 'time',\n    'desc',\n    // 'copies',\n    'remove',\n  ];\n  dataSource = new MatTableDataSource(this.taskList);\n\n  user: User; //TODO move this to formBuilderService.\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  currentForm: FormTemplate;\n  unsubscribe = new Subject<{}>();\n\n  constructor(\n    public dialog: MatDialog,\n    private formBuilderService: FormBuilderService,\n    private apiTaskService: ApiTaskService,\n    public notificationService: UiNotificationService,\n    private localStorage: UtilLocalStorageService\n  ) {}\n\n  ngOnInit() {\n    this.formBuilderService.currentForm.pipe(takeUntil(this.unsubscribe)).subscribe((form) => {\n      this.currentForm = form;\n    });\n\n    this.formBuilderService.currentForm\n      .pipe(\n        takeUntil(this.unsubscribe),\n        map((form) => {\n          this.currentForm = form;\n          const formId = this.currentForm.ID;\n          return formId;\n        }),\n        mergeMap((formId) => this.apiTaskService.getTasksByFormTemplate(formId))\n      )\n      .subscribe((response) => {\n        this.taskList = response.TaskTemplateList;\n        this.dataSource = new MatTableDataSource(this.taskList);\n      });\n\n    const savedUser = this.localStorage.getItem('user').CurrentUser;\n    this.user = savedUser;\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  addTask() {\n    if (!this.taskList) {\n      this.taskList = [];\n    }\n    const taskCount = this.taskList.length + 1;\n    const newTask: TaskTemplate = {\n      OrgID: this.currentForm.OrgID,\n      LocationID: this.currentForm.LocationID,\n      TaskType: 1,\n      TaskTypeID: this.currentForm.ID,\n      Name: 'New Task ' + taskCount,\n      Description: '',\n      CreatedBy: this.user.ID,\n    };\n\n    this.apiTaskService.addTaskTemplate(newTask).subscribe((response) => {\n      newTask.ID = response.TaskTemplateId;\n      this.taskList.push(newTask);\n      this.dataSource = new MatTableDataSource(this.taskList);\n      this.showTaskNotification();\n    });\n    //TODO add error handling to all these service calls.\n  }\n\n  editTask(task: TaskTemplate) {\n    console.log(task);\n    const dialogRef = this.dialog.open(EditTaskTemplateComponent, {\n      data: {\n        task: task,\n        forceTemplate: 'form',\n      },\n      panelClass: 'full-page-dialog',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.apiTaskService.updateTaskTemplate(result).subscribe((_) => {\n        this.showTaskNotification();\n      });\n    });\n  }\n\n  removeTask(task: TaskTemplate, event: Event) {\n    event.stopPropagation();\n    this.apiTaskService.deleteTaskTemplate(task.ID).subscribe((_) => {\n      const index = this.taskList.indexOf(task);\n      if (index > -1) {\n        this.taskList.splice(index, 1);\n        this.dataSource = new MatTableDataSource(this.taskList);\n      }\n    });\n  }\n\n  showTaskNotification() {\n    this.notificationService.show(NotificationType.success, 'Action done', 'Task saved', 2500);\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" matSort>\n  <ng-container matColumnDef=\"name\">\n    <th class=\"text-body1\" mat-header-cell *matHeaderCellDef mat-sort-header>Recurring Task</th>\n    <td class=\"text-body1\" mat-cell *matCellDef=\"let task\">\n      <mat-icon class=\"task-type-icon color-primary\">event</mat-icon>\n      {{ task.Name }}\n    </td>\n  </ng-container>\n\n  <!-- <ng-container matColumnDef=\"organizations\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Organizations</th>\n    <td mat-cell *matCellDef=\"let task\">\n      <span class=\"task-value\" *ngFor=\"let org of task.organizations\">{{\n        org.Name\n      }}</span>\n    </td>\n  </ng-container> -->\n\n  <!-- <ng-container matColumnDef=\"repetition\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Recurrence</th>\n    <td mat-cell *matCellDef=\"let task\">\n      Every {{ task.recurrenceSettings.RepeatValue }}\n      {{ task.recurrenceSettings.RepeatUnit | timeUnits }}\n      <div *ngIf=\"task.weekdays.length > 0\">\n        <span\n          class=\"task-value\"\n          *ngFor=\"let days of task.weekdays; let index = index\"\n        >\n          {{ days }} <span *ngIf=\"index < task.weekdays.length - 1\">, </span>\n        </span>\n      </div>\n    </td>\n  </ng-container> -->\n\n  <!-- <ng-container matColumnDef=\"time\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Time</th>\n    <td mat-cell *matCellDef=\"let task\">\n      {{ task.recurrenceTime.AvailableDate }}\n    </td>\n  </ng-container> -->\n\n  <ng-container matColumnDef=\"desc\">\n    <th class=\"text-body1\" mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n    <td class=\"text-body1\" mat-cell *matCellDef=\"let task\">\n      {{ task.Description }}\n    </td>\n  </ng-container>\n\n  <!-- <ng-container matColumnDef=\"copies\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Copies</th>\n    <td mat-cell *matCellDef=\"let task\">{{ task.copies }}</td>\n  </ng-container> -->\n\n  <!-- <ng-container matColumnDef=\"edit\">\n    <th class=\"text-body1\" mat-header-cell *matHeaderCellDef></th>\n    <td class=\"text-body1\" mat-cell *matCellDef=\"let task\">\n      <button mat-button aria-label=\"Edit Task\" (click)=\"editTask(task)\">\n        <mat-icon>settings</mat-icon>\n      </button>\n    </td>\n  </ng-container> -->\n\n  <ng-container matColumnDef=\"remove\">\n    <th class=\"text-body1\" mat-header-cell *matHeaderCellDef></th>\n    <td class=\"text-body1\" mat-cell *matCellDef=\"let task\">\n      <button mat-button aria-label=\"Remove Task\" (click)=\"removeTask(task, $event)\">\n        <mat-icon>delete_outline</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr (click)=\"editTask(row)\" mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<div class=\"add-button-container\">\n  <button mat-raised-button aria-label=\"Add Task\" (click)=\"addTask()\"><mat-icon>add</mat-icon> Create Task</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TasksComponent } from './tasks.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { UiTaskTemplatesModule } from '@xenon/ui';\n\n@NgModule({\n  declarations: [TasksComponent],\n  imports: [\n    CommonModule,\n    TasksRoutingModule,\n    MatTableModule,\n    MatSortModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatInputModule,\n    FormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    UiTaskTemplatesModule,\n  ],\n})\nexport class TasksModule {}\n"],"sourceRoot":"webpack:///"}