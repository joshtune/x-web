{"version":3,"sources":["/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/index.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/api.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/environments/base-api.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/interceptors/api-interceptor.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/interceptors/token-interceptor.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/models/billing.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/models/task.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/models/user.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-authentication.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-drive.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-form-template.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-form.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-kpi.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-location.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-organization.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-role.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-task-recurrence.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-task-template.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-task.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/api/src/lib/services/api-user.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/index.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/auth.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/enums/app-list.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/guards/auth.guard.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/guards/permissionsAuth.guard.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/check-your-email-dialog/check-your-email.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/new-account/new-account.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/page-login/page-login.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/page-login/page-login.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/page-not-found/page-not-found.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/password-reset-from-email/password-reset-from-email.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/pick-org-location/pick-org-location.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/reset-password/reset-password.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/pages/terms-and-services/terms-and-services.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/services/app-navigation.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/auth/src/lib/services/permissions-helper.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/index.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/layouts.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/header/header.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/header/header.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/header/switch-organization/edit-organization-logo-dialog/edit-organization-logo-dialog.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/header/switch-organization/edit-organization-name-dialog/edit-organization-name-dialog.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/header/switch-organization/switch-organization-row/switch-organization-row.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/header/switch-organization/switch-organization.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/header/switch-organization/switch-organization.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/main-layout.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/main-layout.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/main-layout/sidebar/sidebar.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/services/current-user-storage.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/sub-layout/enums/tab-types.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/sub-layout/models/form-item.models.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/sub-layout/services/form-builder.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/sub-layout/sub-layout.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/sub-layout/sub-layout.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/layouts/src/lib/sub-layout/sub-layout.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/index.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-calendar-datepicker/ui-calendar-datepicker.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-chart-donut/ui-chart-donut.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-confirmation/ui-confirmation.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-confirmation/ui-confirmation.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-date-range-picker/ui-date-range-picker.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-expanding-input/ui-expanding-input.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-expanding-input/ui-expanding-input.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-fields/ui-fields-assignments/ui-fields-assignments.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-fields/ui-fields-organizations/ui-fields-organizations.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-fields/ui-fields-permissions/ui-fields-permissions.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-fields/ui-fields.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-list-select/ui-list-select.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-list-select/ui-list-select.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-list-select/ui-list-select.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-side-nav-layout/ui-side-nav-layout.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-side-nav-layout/ui-side-nav-layout.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-string-search/ui-string-search.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/edit-task-template/edit-task-template.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/edit-task-template/edit-task-template.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-checklist-template/complete-checklist-template-subtask-list/complete-checklist-template-subtask-list.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-checklist-template/complete-checklist-template.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-checklist-template/complete-checklist-template.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-checklist-template/recurrence/in-x-days.pipe.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-checklist-template/recurrence/recurrence.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-checklist-template/recurrence/recurrence.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-checklist-template/recurrence/recurrence.const.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-form-template/complete-form-template.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/templates/complete-form-template/complete-form-template.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-task-templates/ui-task-templates.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-form/change-password/change-password.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-form/roles/roles.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-form/ui-user-form.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-form/ui-user-form.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-form/ui-user-form.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-form/user-form.data.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-photo/ui-user-photo.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-photo/ui-user-photo.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-terms-document/ui-user-terms-document.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/components/ui-user-terms-document/ui-user-terms-document.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/modules/ui-prompt/components/ui-prompt/ui-prompt.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/modules/ui-prompt/services/ui-prompt.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/modules/ui-prompt/ui-prompt.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/services/ui-notification.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/services/ui-scroll.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-image-upload/ui-form-field-image-upload.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-input/ui-form-field-input.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-select/ui-form-field-select.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-table/ui-form-field-table.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-text-area/ui-form-field-text-area.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-x-email/ui-form-field-x-email.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-x-email/ui-form-field-x-email.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-x-phone/ui-form-field-x-phone.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/components/ui-form-field-x-phone/ui-form-field-x-phone.component.html","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/enums/ui-form-field-type.enum.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/enums/ui-form-field-validator.enum.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/services/ui-form.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui-form/ui-form.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/ui/src/lib/ui.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/index.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/components/unsaved-changes-modal/unsaved-changes-modal.component.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/components/unsaved-changes-modal/unsaved-changes-model.module.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/pipes/util-string-search.pipe.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/unsaved-changes-guard.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/unsaved-changes.modal.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/util-clone.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/util-date-tools.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/util-local-storage.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/util-moment.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/util-string.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/services/util-window-ref.service.ts","/Users/joshtune/workspace/xenon/xenon-web/libs/utils/src/lib/utils.module.ts","/Users/joshtune/workspace/xenon/xenon-web/node_modules/moment/locale sync ^\\.\\/.*$","./$_lazy_route_resource lazy namespace object","./src/app/app-base.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/features/admin/admin-routing.module.ts","./src/app/features/admin/admin.component.ts","./src/app/features/admin/admin.module.ts","./src/app/features/client/drive/add-folder-modal.component.ts","./src/app/features/client/drive/drive-explorer/drive-explorer.component.ts","./src/app/features/client/drive/drive-explorer/rename-drive-item.modal.ts","./src/app/features/client/drive/drive-filter/drive-filter.component.ts","./src/app/features/client/drive/drive-routing.module.ts","./src/app/features/client/drive/drive.component.ts","./src/app/features/client/drive/drive.module.ts","./src/app/features/client/forms/forms-list/forms-list.component.ts","./src/app/features/client/forms/forms-list/forms-list.component.html","./src/app/features/client/forms/forms-routing.module.ts","./src/app/features/client/forms/forms.component.ts","./src/app/features/client/forms/xenon-forms.module.ts","./src/app/features/client/home/home-routing.module.ts","./src/app/features/client/home/home.component.ts","./src/app/features/client/home/home.module.ts","./src/app/features/client/home/locations-select/locations-select.component.ts","./src/app/features/client/home/tasks-summary-donuts/tasks-summary-donuts.component.ts","./src/app/features/client/tasks/task-list-by-date/task-list-by-date.component.ts","./src/app/features/client/tasks/tasks-routing.module.ts","./src/app/features/client/tasks/tasks.component.ts","./src/app/features/client/tasks/tasks.component.html","./src/app/features/client/tasks/tasks.module.ts","./src/app/features/client/team/team-list/team-list.component.ts","./src/app/features/client/team/team-routing.module.ts","./src/app/features/client/team/team.component.ts","./src/app/features/client/team/team.module.ts","./src/app/shared/components/checklist-panel/checklist-panel-subtask-list/checklist-panel-subtask-list.component.ts","./src/app/shared/components/checklist-panel/checklist-panel.component.ts","./src/app/shared/components/checklist-panel/checklist-panel.component.html","./src/app/shared/components/drive-vert-menu/drive-vert-menu.component.ts","./src/app/shared/components/leave-app-dialog/leave-app-dialog.component.ts","./src/app/shared/components/task-by-date/task-by-date.component.ts","./src/app/shared/components/task-by-date/task-by-date.service.ts","./src/app/shared/components/task-list/task-list.component.ts","./src/app/shared/components/tasks-calender-filter/tasks-calender-filter.component.ts","./src/app/shared/components/tasks-filter/tasks-filter.component.ts","./src/app/shared/components/tasks-filter/tasks-filter.component.html","./src/app/shared/components/tasks-search/tasks-search.component.ts","./src/app/shared/components/teams-search/teams-search.component.ts","./src/app/shared/components/text-file/text-file.component.ts","./src/app/shared/customNGXDatetimeAdapter.ts","./src/app/shared/modules/task-form/task-form-base.ts","./src/app/shared/modules/task-form/task-form-field-checkbox/task-form-field-checkbox.component.ts","./src/app/shared/modules/task-form/task-form-field-date-range/task-form-field-date-range.component.ts","./src/app/shared/modules/task-form/task-form-field-date/task-form-field-date.component.ts","./src/app/shared/modules/task-form/task-form-field-datetime-range/task-form-field-datetime-range.component.ts","./src/app/shared/modules/task-form/task-form-field-datetime/task-form-field-datetime.component.ts","./src/app/shared/modules/task-form/task-form-field-file/task-form-field-file.component.ts","./src/app/shared/modules/task-form/task-form-field-input/task-form-field-input.component.ts","./src/app/shared/modules/task-form/task-form-field-number/task-form-field-number.component.ts","./src/app/shared/modules/task-form/task-form-field-radio/task-form-field-radio.component.ts","./src/app/shared/modules/task-form/task-form-field-textbox/task-form-field-textbox.component.ts","./src/app/shared/modules/task-form/task-form-field-time-range/task-form-field-time-range.component.ts","./src/app/shared/modules/task-form/task-form-field-time/task-form-field-time.component.ts","./src/app/shared/modules/task-form/task-form-item-type.ts","./src/app/shared/modules/task-form/task-form.component.ts","./src/app/shared/modules/task-form/task-form.module.ts","./src/app/shared/pipes/days-of-week.pipe.ts","./src/app/shared/pipes/form-item-type-display.pipe.ts","./src/app/shared/pipes/time-units.pipe.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"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erG,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,mBAbX;QACT,6EAAgB;QAChB,sFAAoB;QACpB,4FAAuB;QACvB,+EAAiB;QACjB,sFAAoB;QACpB,yEAAU;QACV,kGAA0B;QAC1B,2FAAmB;KACpB,YAEQ,CAAC,4DAAY,EAAE,yHAAyB,CAAC;mIAEvC,WAAW,cAFZ,4DAAY,EAAE,yHAAyB;6FAEtC,WAAW;cAdvB,sDAAQ;eAAC;gBACR,SAAS,EAAE;oBACT,6EAAgB;oBAChB,sFAAoB;oBACpB,4FAAuB;oBACvB,+EAAiB;oBACjB,sFAAoB;oBACpB,yEAAU;oBACV,kGAA0B;oBAC1B,2FAAmB;iBACpB;gBACD,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,4DAAY,EAAE,yHAAyB,CAAC;aACnD;;;;;;;;;;;;;ACxBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iF;;;;;;;;;;;ACnSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AAEzC;AAEjC,MAAM,KAAK,GAAG,mCAAM,EAAE,CAAC,MAAM,EAAE,CAAC;AACzB,MAAM,yBAAyB,GAAG;IACvC,KAAK,EAAE,8DAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;IACxD,GAAG,EAAE,8DAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;CACxE,CAAC;AAEK,MAAM,kBAAkB,GAAG;IAChC,KAAK,EAAE,8DAAiB,CAAC,GAAG,CAAC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","file":"main.js","sourcesContent":["export * from './lib/api.module';\nexport * from './lib/environments/base-api';\nexport * from './lib/interceptors/api-interceptor';\n\nexport * from './lib/services/api-authentication.service';\nexport * from './lib/services/api-drive.service';\nexport * from './lib/services/api-form.service';\nexport * from './lib/services/api-form-template.service';\nexport * from './lib/services/api-kpi.service';\nexport * from './lib/services/api-location.service';\nexport * from './lib/services/api-organization.service';\nexport * from './lib/services/api-role.service';\nexport * from './lib/services/api-task.service';\nexport * from './lib/services/api-task-recurrence.service';\nexport * from './lib/services/api-user.service';\nexport * from './lib/services/api-task-template.service';\n\nexport * from './lib/models/base-response';\nexport * from './lib/models/drive';\nexport * from './lib/models/drive-content-type';\nexport * from './lib/models/form';\nexport * from './lib/models/form-category';\nexport * from './lib/models/form-item';\nexport * from './lib/models/form-item-type';\nexport * from './lib/models/form-option';\nexport * from './lib/models/form-template';\nexport * from './lib/models/kpi';\nexport * from './lib/models/location';\nexport * from './lib/models/billing';\nexport * from './lib/models/meta';\nexport * from './lib/models/organization';\nexport * from './lib/models/role';\nexport * from './lib/models/task';\nexport * from './lib/models/task-template';\nexport * from './lib/models/user';\nexport * from './lib/interceptors/token-interceptor';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiAuthenticationService } from './services/api-authentication.service';\nimport { ApiLocationService } from './services/api-location.service';\nimport { ApiDriveService } from './services/api-drive.service';\nimport { ApiFormService } from './services/api-form.service';\nimport { ApiFormTemplateService } from './services/api-form-template.service';\nimport { ApiKpiService } from './services/api-kpi.service';\nimport { ApiOrganizationService } from './services/api-organization.service';\nimport { ApiRoleService } from './services/api-role.service';\nimport { ApiTaskService } from './services/api-task.service';\nimport { ApiUserService } from './services/api-user.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  providers: [\n    ApiAuthenticationService,\n    ApiDriveService,\n    ApiFormService,\n    ApiFormTemplateService,\n    ApiKpiService,\n    ApiLocationService,\n    ApiOrganizationService,\n    ApiRoleService,\n    ApiTaskService,\n    ApiUserService,\n  ],\n  declarations: [],\n  imports: [CommonModule, HttpClientModule],\n})\nexport class ApiModule {}\n","const _prod = 'https://xenonchexapi-hlroxh2k5q-uc.a.run.app/v1';\nconst _test = 'https://xenonchexapitest-hlroxh2k5q-uc.a.run.app/v1';\n\nconst environment = _test;\nexport class BaseApi {\n  protected baseUrl = environment;\n}\n\nexport const baseUrl = environment;\n","import { Injectable } from '@angular/core';\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const modifiedReq = req.clone({\n      headers: req.headers\n        .set('Accept', 'application/json')\n        .set('Access-Control-Allow-Origin', '*'),\n    });\n\n    return next.handle(modifiedReq).pipe(\n      tap((ev: HttpEvent<any>) => console.log('ev:', ev)),\n      catchError((response) => {\n        if (response instanceof HttpErrorResponse) {\n          console.log('error', response);\n        }\n        return throwError(response);\n      })\n    );\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { ApiAuthenticationService } from '../services/api-authentication.service';\nimport { UtilWindowRefService, UtilLocalStorageService } from '@xenon/utils';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(\n    private apiAuth: ApiAuthenticationService,\n    private utilWindowRefService: UtilWindowRefService,\n    private snackBar: MatSnackBar,\n    private localStorage: UtilLocalStorageService\n  ) {}\n\n  private accessToken: string;\n  private refreshToken: string;\n\n  private attemptingRefresh = false;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.accessToken = this.localStorage.getItem('user').AccessToken;\n    this.refreshToken = this.localStorage.getItem('user').RefreshToken;\n    if (this.accessToken) {\n      const updatedRequest = req.clone({ headers: req.headers.set('Authorization', `Bearer ${this.accessToken}`) });\n      return next.handle(updatedRequest).pipe(\n        catchError((error) => {\n          const message = error.error.Message.toLowerCase();\n          if (message.includes('noauth')) {\n            this.attemptRefreshToken();\n          }\n          return throwError(error);\n        })\n      );\n    } else {\n      return next.handle(req);\n    }\n  }\n\n  private attemptRefreshToken(): void {\n    if (!this.attemptingRefresh) {\n      this.attemptingRefresh = true;\n\n      const request = {\n        RefreshToken: this.refreshToken,\n        AccessToken: this.accessToken,\n      };\n      this.apiAuth\n        .refreshToken(request)\n        .then((result) => {\n          const loggedInUser = this.localStorage.getItem('user');\n          this.localStorage.setItem('user', { ...loggedInUser, AccessToken: result.AccessToken, RefreshToken: result.RefreshToken });\n          this.attemptingRefresh = false;\n        })\n        .catch((_) => {\n          this.attemptingRefresh = false;\n          this.forceLogOut();\n        });\n    }\n  }\n\n  private forceLogOut(): void {\n    this.apiAuth\n      .logout()\n      .pipe(take(1))\n      .subscribe((_) => {\n        this.snackBar.open('Session revoked please login again.', `Close`, { duration: 5000 });\n        const origin = this.utilWindowRefService.nativeWindow.location.origin;\n        this.utilWindowRefService.nativeWindow.location.replace(`${origin}/#/login`);\n      });\n  }\n}\n","/**\n * Note that these interfaces will change once we know what data\n * we get from Fattmerchant.\n */\n\nexport interface Invoice {\n  InvoiceNumber: string;\n  Date: string;\n  Description: string;\n  BilledAmount: number;\n  Status: string;\n}\n\nexport type PaymentMethodType = 'Card' | 'ACH';\nexport interface PaymentMethod {\n  Type: PaymentMethodType;\n  AccountNumberLastFour: number;\n  NameOnAccount: string;\n  Bank?: string; // for ACH only\n}\n\nexport interface Address {\n  Name: string;\n  Street: string;\n  City: string;\n  State: string;\n  Zip: string;\n  Email: string;\n  PhoneNumber: string;\n}\n","import { BaseResponse } from './base-response';\nimport { Organization } from './organization';\nimport { Role } from './role';\nimport { User } from './user';\n\nexport type Status = 'success' | 'error' | 'empty';\n\nexport interface Task {\n  ID: number;\n  OrgID: number;\n  LocationID: number;\n  TaskType: number;\n  TaskTypeID: number;\n  Name: string;\n  Description: string;\n  SubTaskList: SubTask[];\n  AvailableDate: string;\n  AvailableTime: string;\n  DueDate: string;\n  DueTime: string;\n  ExpireDate: string;\n  ExpireTime: string;\n  CompletedAt: string;\n  Completed: boolean;\n  CompletedBy: number; // user-id\n  CompletedOnTime: boolean;\n  CurrentStatus: string;\n  Expired: boolean;\n  AssignedRoles: Role[];\n  AssignedUsers: User[];\n  ItemsComplete: number;\n  ItemsTotal: number;\n  ItemsCompletedLate: number;\n  ItemsRemaining: number;\n  ItemsExpired: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  DeletedAt: string;\n  CreatedBy: number; // user-id\n}\n\nexport interface SubTask {\n  ID: number;\n  TaskID: number;\n  SubTaskDesc: string;\n  CompletedAt: string; // date\n  CreatedBy: number;\n  DisplayOrder?: number;\n}\n\nexport interface TaskRecurrence {\n  ID?: number;\n  AvailableTime: string; // 24 hour format, ie 15:30\n  CreatedBy?: number;\n  DaysOfMonth: string;\n  DaysOfWeek: string; //0 is all, 1=Monday etc. list of days 1,2,3\n  MonthRelativeDays: string;\n  RepeatUnit: number; // 3-days, 4 - weeks, 5-months (1-minutes, 2-hours are not currently used on the front end)\n  RepeatValue: number; //2,10,7\n  TaskTemplateID: number;\n  StartDate: string; // \"YYYY-MM-DD\" - this needs to be a date ISO string.\n  EndDate: string; // \"YYYY-MM-DD\" - this is just a string.\n}\n\nexport interface AddTaskRecurrenceRequest extends TaskRecurrence {\n  DueTime: string; // 24 hour format, ie 15:30\n  DueDays: number; // default 0, if it is due 2 days in the future it would be 2\n  ExpireTime: string; // 24 hour format, ie 15:30\n  ExpireDays: number; // default 0, if it is due 2 days in the future it would be 2\n}\n\nexport interface AddTaskRecurrenceResponse {\n  NewTask: number; // The ID of the new task\n  Status: Status;\n}\n\nexport interface GetTaskRecurrenceResponse extends BaseResponse {\n  TaskRecurrenceList?: TaskRecurrence[];\n}\n\nexport interface UpdateTaskRequest {\n  ID: number;\n  Name?: string;\n  Description?: string;\n  AssignedUsers?: User[];\n  AvailableDate?: string;\n  AvailableTime?: string;\n  DueDate?: string;\n  DueTime?: string;\n  ExpireDate?: string;\n  ExpireTime?: string;\n  CompletedBy?: number;\n  CreatedBy?: number;\n  DriveID?: number;\n  CompletedOnTime?: boolean;\n  Expired?: boolean;\n}\n\nexport interface CreateTaskRequest {\n  OrgID: number;\n  LocationID: number;\n  TaskType?: number; //1 for FormTemplate\n  TaskTypeID?: number;\n  Name?: string;\n  Description?: string;\n  DriveID?: number;\n  AvailableDate?: string;\n  AvailableTime?: string;\n  DueDate?: string;\n  DueTime?: string;\n  ExpireDate?: string;\n  ExpireTime?: string;\n}\n\nexport interface UpdateSubTaskStatusRequest {\n  TaskID?: number;\n  TaskTemplateID?: number;\n  SubTaskDesc: string;\n  CreatedBy: number;\n  DisplayOrder?: number;\n}\n\nexport interface UpdateSubTaskStatusResponse extends BaseResponse {\n  ID: number;\n}\n\nexport interface CreateSubTaskResponse extends BaseResponse {\n  NewTaskTemplateSubTask: number;\n}\n\nexport interface CreateTaskResponse extends BaseResponse {\n  NewTask: Task;\n}\n\nexport interface UpdateSubTaskNameRequest {\n  ID: number;\n  SubTaskDesc: string;\n}\n\nexport enum CopiesType {\n  locations = 'Locations',\n  users = 'Users',\n}\n\nexport enum TaskType {\n  recurring = 'Recurring',\n}\n\nexport interface Task {\n  id?: string;\n  name: string;\n  type: TaskType;\n  organizations: Organization[];\n  recurrenceSettings: TaskRecurrence;\n  TaskTemplateID: number;\n  DaysOfWeek: string;\n  weekdays: string[];\n  recurrenceTime: RecurrenceTime;\n  // recurrenceTimes: RecurrenceTime[];\n  copies: CopiesType;\n}\n\nexport interface RecurrenceDay {\n  displayName: string;\n  day: string;\n  value: number | string;\n  selected: boolean;\n}\n\nexport interface TaskRecurrence {\n  RepeatValue: number;\n  RepeatUnit: number;\n  StartDate: string;\n  EndDate: string;\n}\n\nexport interface TimeSelect {\n  hour: number;\n  minute: number;\n  second: number;\n}\n\nexport interface RecurrenceRepeatUnit {\n  name: string;\n  value: number;\n}\n\nexport interface RecurrenceTime {\n  startTime: TimeSelect;\n  AvailableDate?: string;\n  AvailableTime?: string;\n  DueDurationUnit: number;\n  DueDurationValue: number;\n  ExpireDurationUnit: number;\n  ExpireDurationValue: number;\n}\n\nexport interface TimeUnit {\n  name: string;\n  value: number;\n}\n\nexport enum AmPmType {\n  am = 'AM',\n  pm = 'PM',\n}\n\nexport enum WeekdayType {\n  sunday = 'sunday',\n  monday = 'monday',\n  tuesday = 'tuesday',\n  wednesday = 'wednesday',\n  thursday = 'thursday',\n  friday = 'friday',\n  saturday = 'saturday',\n}\n","import { Organization, OrganizationList, LoginOrgList } from './organization';\nimport { BaseResponse } from './base-response';\nimport { RoleLocations, Location } from './location';\n\nexport enum Permissions {\n  Viewer = '0',\n  Editor = '50',\n  Administrator = '100',\n  Owner = '200',\n}\n\nexport interface LoggedInUser extends BaseResponse {\n  AccessToken: string;\n  RefreshToken: string;\n  CurrentLocation: Location;\n  CurrentOrg: Organization;\n  CurrentUser: User;\n  LocationRoles: [{ ID: number; Name: string }];\n  AggregatePermissions: string[];\n\n  Locations?: LoginOrgList; //This will come back if they don't have a default org location\n}\n\nexport interface User {\n  Email: string;\n  FirstName: string;\n  ID: number;\n  LastName: string;\n  Orgs: OrganizationList[];\n  Password: string;\n  Phone: string;\n  PhotoURL: string;\n  PrimaryLocationID: number; // This is their default location NOT their current\n  PrimaryOrgID: number; // This is their default Organization NOT their current\n  TermsAccepted: number; //0 means they haven't accepted\n  // These properties are set on the front end based on the currently selected Organization / Location.\n  RoleLocations?: RoleLocations[];\n  JobTitle?: string;\n  Org?: Organization;\n}\n\nexport interface CreateUserRequest {\n  FirstName: string;\n  LastName: string;\n  Email: string;\n  OrgID: number;\n  JobTitle: string;\n  Permission: Permissions;\n  CreatedBy: number;\n  RoleLocations: [{ RoleID: number; LocationID: number }];\n}\n\nexport interface UpdateUserRequest {\n  ID: number;\n  FirstName?: string;\n  LastName?: string;\n  Email?: string;\n  Phone?: string;\n  OrgID?: number;\n  PrimaryLocationID?: number;\n}\n\nexport interface UpdateOrgUserRequest {\n  ID: number;\n  UserID: number;\n  OrgID: number;\n  Permission?: string;\n  JobTitle?: string;\n  RoleLocations?: [{ RoleID: number; LocationID: number }];\n}\n\nexport interface CreateUserResponse extends BaseResponse {\n  NewUserID: number;\n}\n\nexport interface GetOrgUserLocationResponse extends BaseResponse {\n  UserLocationRoles: RoleLocations[];\n}\nexport interface UpdateOrgUserLocationRequest {\n  OrgID: number;\n  LocationID: number;\n  RoleID: number;\n  XenUserID: number;\n  LocationName: string;\n  RoleName: string;\n}\n\nexport interface UploadPhotoResponse extends BaseResponse {\n  Uploaded: string; // the new URL\n}\n\nexport interface UpdateUserPrimarySettingsRequest {\n  ID: number; // This is the User ID\n  OrgID: number;\n  LocationID: number;\n}\n\nexport interface ChangePasswordRequest {\n  email: string;\n  password: string;\n  newpassword: string;\n  newpassword2: string;\n}\n\nexport interface ChangePasswordFromEmailRequest {\n  Email: string;\n  UUID: string;\n  OrgId: number;\n  NewPassword: string;\n  NewPassword2: string;\n  AI: number;\n}\n\nexport interface RefreshTokenRequest {\n  AccessToken: string;\n  RefreshToken: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseApi } from '../environments/base-api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { BaseResponse, ChangePasswordRequest, ChangePasswordFromEmailRequest, User } from '@xenon/api';\nimport { LoggedInUser, RefreshTokenRequest } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiAuthenticationService extends BaseApi {\n  private http: HttpClient;\n\n  constructor(private handler: HttpBackend, private localStorageService: UtilLocalStorageService) {\n    super();\n\n    /**\n     * Note: We are using http backend here to skip http interceptors for these calls.\n     * None of the calls in this service need the 'accessToken' header added so we're skipping http interceptors so it doesn't get added.\n     * If a call needs to have the token added, it should be placed in a different service that uses HttpClient directly.\n     */\n    this.http = new HttpClient(this.handler);\n  }\n\n  public login(email: string, password: string, locationID: number): Observable<any> {\n    const url = `${this.baseUrl}/applogin`;\n    const request = {\n      Email: email,\n      Key: password,\n      LocationID: locationID,\n    };\n    return this.http.post<any>(url, request).pipe(\n      map((response: any) => {\n        localStorage.setItem('token', response.Token);\n        return response;\n      })\n    );\n  }\n\n  public logout(): Observable<BaseResponse> {\n    const currentUser = this.localStorageService.getItem('user').CurrentUser;\n    const url = `${this.baseUrl}/logout`;\n    const request = {\n      Email: currentUser.Email,\n    };\n    return this.http.post<BaseResponse>(url, request).pipe(\n      map((response: BaseResponse) => {\n        this.localStorageService.removeItem('user');\n        this.localStorageService.removeItem('token');\n        return response;\n      })\n    );\n  }\n\n  public authorized(): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/authorized`;\n    return this.http.get<BaseResponse>(url).pipe(map((response: BaseResponse) => response));\n  }\n\n  public resetPassword(email: string): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/resetkey/${email}`;\n    return this.http.get<BaseResponse>(url).toPromise();\n  }\n\n  public changePassword(request: ChangePasswordRequest): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/changepassword`;\n    return this.http.post<BaseResponse>(url, request).toPromise();\n  }\n\n  public changePasswordFromEmail(request: ChangePasswordFromEmailRequest): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/changepasswordfromemail`;\n    return this.http.post<BaseResponse>(url, request).toPromise();\n  }\n\n  public refreshToken(request: RefreshTokenRequest): Promise<RefreshTokenRequest> {\n    const url = `${this.baseUrl}/token/refresh`;\n    return this.http.post<RefreshTokenRequest>(url, request).toPromise();\n  }\n\n  public acceptUserTerms(userID: number): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/acceptuserterms/${userID}`;\n    return this.http.get<BaseResponse>(url).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseApi } from '../environments/base-api';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AddContentRequest, Drive, DriveFile, AddContentResponse, UploadFileResponse, DriveItem } from '../models/drive';\nimport { DriveContentType } from '../models/drive-content-type';\nimport { BaseResponse } from '../models/base-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiDriveService extends BaseApi {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  public getDrivesByOrg(orgId: number): Observable<DriveItem[][]> {\n    const url = `${this.baseUrl}/drive/org/${orgId}`;\n    return this.http.get<{ DriveList: Drive[] }>(url).pipe(\n      map((response: { DriveList: Drive[] }) => response.DriveList),\n      map((response: Drive[]) => {\n        const drives = [];\n        const icons = {\n          '1': 'folder',\n          '2': 'text_snippet',\n          '3': 'insert_link',\n          '4': 'insert_drive',\n        };\n        if (response) {\n          response.forEach((drive: Drive) => {\n            const driveItem: DriveItem = {\n              id: drive.ID,\n              name: drive.Name,\n              active: false,\n              icon: icons[drive.ContentType],\n              starred: drive.StarredInd,\n              details: drive,\n            };\n            drives.push(driveItem);\n          });\n        }\n        return [drives];\n      })\n    );\n  }\n\n  public getDriveFolderContent(driveId: number, current: DriveItem[][]): Observable<DriveItem[][]> {\n    const url = `${this.baseUrl}/drive/folder/${driveId}`;\n    return this.http.get<{ DriveList: Drive[] }>(url).pipe(\n      map((response: { DriveList: Drive[] }) => response.DriveList),\n      map((response: Drive[]) => {\n        const drives = [];\n        const icons = {\n          '1': 'folder',\n          '2': 'text_snippet',\n          '3': 'insert_link',\n          '4': 'insert_drive',\n        };\n        if (response) {\n          response.forEach((drive: Drive) => {\n            const driveItem: DriveItem = {\n              id: drive.ID,\n              name: drive.Name,\n              active: false,\n              icon: icons[drive.ContentType],\n              starred: drive.StarredInd,\n              details: drive,\n            };\n            drives.push(driveItem);\n          });\n        }\n        current.push(drives);\n        return current;\n      })\n    );\n  }\n\n  public getDriveContentTypes(): Observable<DriveContentType[]> {\n    const url = `${this.baseUrl}/drivecontenttypelist`;\n    return this.http\n      .get<{ DriveContentTypes: DriveContentType[] }>(url)\n      .pipe(map((response: { DriveContentTypes: DriveContentType[] }) => response.DriveContentTypes));\n  }\n\n  public getDrivesByLocation(locationId: number): Observable<Drive[]> {\n    const url = `${this.baseUrl}/drive/location/${locationId}`;\n    return this.http.get<{ DriveList: Drive[] }>(url).pipe(map((response: { DriveList: Drive[] }) => response.DriveList));\n  }\n\n  public getDriveFilesByOrg(orgId: number): Observable<DriveFile[]> {\n    const url = `${this.baseUrl}/drive/org/${orgId}`;\n    return this.http.get<{ DriveList: DriveFile[] }>(url).pipe(map((response: { DriveList: DriveFile[] }) => response.DriveList));\n  }\n\n  public getDriveFileByID(ID: number): Observable<Drive> {\n    const url = `${this.baseUrl}/drive/file/${ID}`;\n    return this.http.get<{ Drive: Drive }>(url).pipe(map((response) => response.Drive));\n  }\n\n  public getDriveFolderFiles(driveId: number, current: DriveItem[][]): Observable<DriveItem[][]> {\n    const url = `${this.baseUrl}/drive/folder/${driveId}`;\n    return this.http.get<{ DriveList: Drive[] }>(url).pipe(\n      map((response: { DriveList: Drive[] }) => response.DriveList),\n      map((response: Drive[]) => {\n        const drives = [];\n        const icons = {\n          '1': 'folder',\n          '2': 'text_snippet',\n          '3': 'insert_link',\n          '4': 'insert_drive',\n        };\n        if (response) {\n          response.forEach((drive: Drive) => {\n            const driveItem: DriveItem = {\n              id: drive.ID,\n              name: drive.Name,\n              active: false,\n              icon: icons[drive.ContentType],\n              starred: drive.StarredInd,\n              details: drive,\n            };\n            drives.push(driveItem);\n          });\n        }\n        current.push(drives);\n        return current;\n      })\n    );\n  }\n\n  /**\n   * This methods completes both steps required to upload a photo.\n   * 1. Saves the file information.\n   * 2. Uploads the actual photo.\n   *\n   * Note: If you want to add a file to a specific folder,\n   *       include the \"ParentID\" property (id of the folder)\n   *       in the request object.\n   * @param fileInfo Information on the file to upload.\n   * @returns A promise that resolves true if success, false if failure.\n   */\n  public addFile(fileInfo: AddContentRequest, file: File): Promise<boolean> {\n    const success = true;\n    console.log('hit add');\n    return new Promise((resolve, reject) => {\n      this.saveContentInfo(fileInfo)\n        .then((response: AddContentResponse) => {\n          if (response.Status === 'error') {\n            reject(!success);\n          } else {\n            this.uploadFile(response.NewDrive, file)\n              .then((result: UploadFileResponse) => {\n                if (result.Status === 'error') reject(!success);\n                else resolve(success);\n              })\n              .catch((err) => {\n                reject(!success);\n              });\n          }\n        })\n        .catch((err) => {\n          reject(!success);\n        });\n    });\n  }\n\n  /**\n   * Add the file/folder name and information.\n   *   Note: Doesn't add the actual file, just the file info.\n   * @param info The information needed to add the content.\n   * @returns A promise containing the AddContentResponse.\n   */\n  public saveContentInfo(info: AddContentRequest): Promise<AddContentResponse> {\n    const url = `${this.baseUrl}/drive`;\n    return this.http.post<AddContentResponse>(url, info).toPromise();\n  }\n\n  /**\n   * Gets the blob information so a user can download a file.\n   * @param urlToFile The url where that file is stored on our servers.\n   * @returns A promise containing the Blob response.\n   */\n  public downloadFile(urlToFile: string): Promise<Blob> {\n    const httpOptions = {\n      responseType: 'blob' as 'json',\n    };\n\n    return this.http.get<Blob>(urlToFile, httpOptions).toPromise();\n  }\n\n  /**\n   * Used to delete a file or folder.\n   * @param id The id of the file or folder to delete.\n   * @returns A promise containing the base response.\n   */\n  public deleteDriveItem(id: number): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/drive/${id}`;\n    return this.http.delete<BaseResponse>(url).toPromise();\n  }\n\n  /**\n   * Rename a drive item (file/folder).\n   * @param id The id of the file or folder to rename.\n   * @param name: The new name.\n   * @returns A promise containing the base response.\n   */\n  public renameDriveItem(id: number, name: string): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/drive/${id}`;\n    const request = { ID: id, Name: name };\n    return this.http.patch<BaseResponse>(url, request).toPromise();\n  }\n\n  /**\n   * Move drive item to different folder.\n   * @param id The id of the file or folder to move.\n   * @param parentId The id of the folder to move the drive item to (0 = root folder).\n   * @returns A promise containing the base response.\n   */\n  public moveDriveItem(id: number, parentId: number): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/drive/${id}`;\n    const request = { ID: id, ParentID: parentId };\n    return this.http.patch<BaseResponse>(url, request).toPromise();\n  }\n\n  /**\n   * update a drive item file.\n   * @param id The id of the file or folder to rename.\n   * @param newDriveItem: The changes of drive to be made.\n   * @returns A promise containing the base response.\n   */\n  public updateDriveItem(id: number, newDriveItem: {}): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/drive/${id}`;\n    const request = { ...newDriveItem, ID: id };\n    return this.http.patch<BaseResponse>(url, request).toPromise();\n  }\n\n  private uploadFile(driveID: number, file: File): Promise<UploadFileResponse> {\n    const url = `${this.baseUrl}/uploaddrivefile/${driveID}`;\n\n    const formData = new FormData();\n    formData.append('driveFile', file, file.name);\n\n    return this.http.post<UploadFileResponse>(url, formData).toPromise();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseApi } from '../environments/base-api';\nimport { BaseResponse } from '../models/base-response';\n\nimport {\n  CreateFormTemplateRequest,\n  CreateFormTemplateResponse,\n  FormTemplate,\n  GetFormTemplateResponse,\n  UpdateFormTemplateRequest,\n  GetFormTemplateByIDResponse,\n} from '../models/form-template';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiFormTemplateService extends BaseApi {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  /**\n   * Used to get form templates by an organization ID.\n   * @param orgID The organization ID used to pull form templates.\n   * @returns An observable with an array of form templates.\n   */\n  public getFormTemplatesByOrg(orgID: number): Observable<FormTemplate[]> {\n    const url = `${this.baseUrl}/formtemplatebyorg/${orgID}`;\n    return this.http.get<GetFormTemplateResponse>(url).pipe(map((response: GetFormTemplateResponse) => response.FormTemplateList));\n  }\n\n  /**\n   * Used to get form templates by a location ID.\n   * @param locationID The location ID used to pull form templates.\n   * @returns An observable with an array of form templates.\n   */\n  public getFormTemplatesByLocation(locationID: number): Observable<FormTemplate[]> {\n    const url = `${this.baseUrl}/formtemplatebylocation/${locationID}`;\n    return this.http.get<GetFormTemplateResponse>(url).pipe(map((response: GetFormTemplateResponse) => response.FormTemplateList));\n  }\n\n  /**\n   * Used to create a new form template.\n   * @param template The template to create.\n   * @returns An observable with the CreateFormTemplateResponse.\n   */\n  public createFormTemplate(template: CreateFormTemplateRequest): Observable<CreateFormTemplateResponse> {\n    const url = `${this.baseUrl}/formtemplate`;\n    return this.http.post<CreateFormTemplateResponse>(url, template);\n  }\n\n  /**\n   * Used to get an existing form template.\n   * @param id The form template ID.\n   * @returns An observable with the UpdateFormTemplateReponse.\n   */\n  public getFormTemplateById(id: number): Observable<GetFormTemplateByIDResponse> {\n    const url = `${this.baseUrl}/formtemplate/${id}`;\n    return this.http.get<GetFormTemplateByIDResponse>(url);\n  }\n\n  /**\n   * Used to update an existing form template.\n   * @param templateInfo The template info to update.\n   * @returns An observable with the UpdateFormTemplateReponse.\n   */\n  public updateFormTemplate(templateInfo: UpdateFormTemplateRequest): Observable<BaseResponse> {\n    const templateID = templateInfo.ID;\n    const url = `${this.baseUrl}/formtemplate/${templateID}`;\n    return this.http.patch<BaseResponse>(url, templateInfo);\n  }\n\n  /**\n   * Used to delete an existing form template.\n   * @param templateID The template to delete.\n   * @returns An observable with the BaseResponse.\n   */\n  public deleteFormTemplate(templateID: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/formtemplate/${templateID}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Form } from '../models/form';\nimport { BaseApi } from '../environments/base-api';\nimport { FormItem } from '../models/form-item';\nimport { FormItemType } from '../models/form-item-type';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { FormTemplateItem, FormTemplateItemOption } from '@xenon/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiFormService extends BaseApi {\n  constructor(private http: HttpClient, private localStorage: UtilLocalStorageService) {\n    super();\n  }\n\n  public get(id: number): Observable<Form> {\n    const url = `${this.baseUrl}/form/${id}`;\n    return this.http.get<{ Form: Form }>(url).pipe(map((response: { Form: Form }) => response.Form));\n  }\n\n  public getTypes(): Observable<FormItemType[]> {\n    const itemTypes = this.localStorage.getItem('formItemTypes');\n    if (itemTypes) {\n      return of(itemTypes);\n    } else {\n      const url = `${this.baseUrl}/formitemtypelist`;\n      return this.http.get<{ FormItemTypes: FormItemType[] }>(url).pipe(\n        map((response: { FormItemTypes: FormItemType[] }) => {\n          this.localStorage.setItem('formItemTypes', response.FormItemTypes);\n          return response.FormItemTypes;\n        })\n      );\n    }\n  }\n\n  public getItemOptions(id: number): Observable<FormTemplateItemOption> {\n    const url = `${this.baseUrl}/formtemplateitemoption/${id}`;\n    return this.http.get<any>(url).pipe(map((response: any) => response));\n  }\n\n  public addItemOption(\n    item: FormTemplateItemOption\n  ): Observable<{\n    ID: number;\n    message: string;\n    formItemOption: FormTemplateItemOption;\n  }> {\n    const url = `${this.baseUrl}/formtemplateitemoption`;\n    return this.http\n      .post<{\n        ID: number;\n        message: string;\n        formItemOption: FormTemplateItemOption;\n      }>(url, item)\n      .pipe(\n        map((response) => {\n          return {\n            ID: response.ID,\n            message: response.message,\n            formItemOption: item,\n          };\n        })\n      );\n  }\n\n  public updateItemOption(item: FormTemplateItemOption): Observable<any> {\n    const url = `${this.baseUrl}/formtemplateitemoption/${item.ID}`;\n    return this.http.patch<any>(url, item).pipe(\n      map((response) => {\n        return response;\n      })\n    );\n  }\n\n  public deleteItemOption(\n    item: FormTemplateItemOption\n  ): Observable<{\n    ID: number;\n    message: string;\n    formItemOption: FormTemplateItemOption;\n  }> {\n    const url = `${this.baseUrl}/formtemplateitemoption/${item.ID}`;\n    return this.http.delete<any>(url).pipe(\n      map((response) => {\n        return response;\n      })\n    );\n  }\n\n  public addItem(\n    item: FormTemplateItem\n  ): Observable<{\n    NewFormTemplateItem: FormTemplateItem;\n    Message?: string;\n    Status: string;\n  }> {\n    const url = `${this.baseUrl}/formtemplateitem`;\n    return this.http\n      .post<{\n        NewFormTemplateItem: FormTemplateItem;\n        Message?: string;\n        Status: string;\n      }>(url, item)\n      .pipe(\n        map((response) => {\n          return {\n            NewFormTemplateItem: response.NewFormTemplateItem,\n            Message: response.Message,\n            Status: response.Status,\n          };\n        })\n      );\n  }\n\n  public updateItem(id: number, item: FormTemplateItem): Observable<{ message: string; formItem: FormTemplateItem }> {\n    const url = `${this.baseUrl}/formtemplateitem/${id}`;\n    return this.http.patch<{ message: string; formItem: FormTemplateItem }>(url, item).pipe(\n      map((response: { message: string }) => {\n        return {\n          message: response.message,\n          formItem: item,\n        };\n      })\n    );\n  }\n\n  public deleteItem(id: number): Observable<{ message: string }> {\n    const url = `${this.baseUrl}/formtemplateitem/${id}`;\n    return this.http.delete<{ message: string }>(url).pipe(\n      map((response: { message: string }) => {\n        return {\n          message: response.message,\n        };\n      })\n    );\n  }\n\n  public update(id: number, item: FormItem): Observable<{ message: string; formItem: FormItem }> {\n    const url = `${this.baseUrl}/formItem/${id}`;\n    return this.http.patch<{ message: string; formItem: FormItem }>(url, item).pipe(\n      map((response: { message: string }) => {\n        return {\n          message: response.message,\n          formItem: item,\n        };\n      })\n    );\n  }\n\n  public upload(formItemId: number, formData: FormData): Observable<any> {\n    const url = `${this.baseUrl}/uploadformitemfile/${formItemId}`;\n    return this.http.post(url, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  public addFormTemplateRole(formTemplateId: number, roleId: number): Observable<any> {\n    const url = `${this.baseUrl}/assignformtemplaterole`;\n    const body = {\n      FormTemplateID: formTemplateId,\n      RoleID: roleId,\n    };\n    return this.http.post<any>(url, body).pipe(\n      map((response: any) => {\n        console.log('addRoleToFormTemplate ', response);\n      })\n    );\n  }\n\n  public deleteFormTemplateRole(formTemplateId: number, roleId: number): Observable<any> {\n    const url = `${this.baseUrl}/removeformtemplaterole/${formTemplateId}/${roleId}`;\n    return this.http.delete<any>(url).pipe(map((response: any) => {}));\n  }\n\n  /**\n   * Creates and returns the form based on the form template ID passed in.\n   * @param formTemplateID The form template ID used to create the form.\n   * @returns An observable with the Form.\n   */\n  public createFormFromTemplateID(formTemplateID: number): Observable<Form> {\n    const url = `${this.baseUrl}/createformfromtemplate/${formTemplateID}`;\n    return this.http.get<Form>(url);\n  }\n\n  /**\n   * Get forms by the template ID.\n   * @param formTemplateID The form template ID.\n   * @returns The list of forms that were created based on the given form template ID.\n   */\n  public getFormsByTemplate(formTemplateID: number): Observable<Form[]> {\n    const url = `${this.baseUrl}/formbytemplate/${formTemplateID}`;\n    return this.http\n      .get<{ FormList: Form[]; Status: string }>(url)\n      .pipe(map((response: { FormList: Form[]; Status: string }) => (response.FormList ? response.FormList : [])));\n  }\n\n  // public getItemOptions(id: number): Observable<FormTemplateItemOption> {\n  //   const url = `${this.baseUrl}/formtemplateitemoption/${id}`;\n  //   return this.http\n  //     .get<any>(url)\n  //     .pipe(map((response: any) => response));\n  // }\n\n  // public list(formId: number): Observable<Form[]> {\n  //   const url = `${this.baseUrl}/formitemlist/${formId}`;\n  //   return this.http\n  //     .get<{ FormItemList: Form[] }>(url)\n  //     .pipe(map((response: { FormItemList: Form[] }) => response.FormItemList));\n  // }\n  //\n  // public listByLocation(locationId: number): Observable<Form[]> {\n  //   const url = `${this.baseUrl}/formbylocation/${locationId}`;\n  //   return this.http\n  //     .get<{ FormList: Form[] }>(url)\n  //     .pipe(map((response: { FormList: Form[] }) => response.FormList));\n  // }\n  //\n  // public listByDateRange(\n  //   locationId: number,\n  //   startDate: Date,\n  //   endDate: Date\n  // ): Observable<Form[]> {\n  //   const url = `${this.baseUrl}/formbydaterange/${locationId}`;\n  //   const request = {\n  //     LocationID: locationId,\n  //     StartDate: startDate,\n  //     EndDate: endDate,\n  //   };\n  //   return this.http\n  //     .post<{ FormList: Form[] }>(url, request)\n  //     .pipe(map((response: { FormList: Form[] }) => response.FormList));\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseApi } from '../environments/base-api';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { KPI } from '../models/kpi';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiKpiService extends BaseApi {\n  organizationId$ = new BehaviorSubject(1);\n  locationId$ = new BehaviorSubject(1);\n  stringDateRange$ = new BehaviorSubject({ start: null, end: null });\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  get$ = combineLatest([this.organizationId$, this.locationId$, this.stringDateRange$]).pipe(\n    switchMap(([organizationId, locationId, stringDateRange]) => this.get(organizationId, locationId, stringDateRange))\n  );\n\n  get(organizationId: number, locationId: number, stringDateRange: { start: string; end: string }): Observable<KPI> {\n    const url = `${this.baseUrl}/kpivalues`;\n    const request = {\n      OrgID: organizationId,\n      LocationID: locationId,\n      StartDate: stringDateRange.start,\n      EndDate: stringDateRange.end,\n    };\n    return this.http.post<{ KPIValues: KPI }>(url, request).pipe(map((response: { KPIValues: KPI }) => response.KPIValues));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  CreateLocationRequest,\n  CreateLocationResponse,\n  GetAllLocationsResponse,\n  GetLocationListResponse,\n  GetLocationResponse,\n  Location,\n  UpdateLocationRequest,\n  BaseResponse,\n} from '@xenon/api';\n\nimport { BaseApi } from '../environments/base-api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { LoggedInUser } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiLocationService extends BaseApi {\n  constructor(private http: HttpClient, private localStorageService: UtilLocalStorageService) {\n    super();\n  }\n\n  /**\n   * Used to get all locations.\n   * @returns An observable containing an array of locations.\n   */\n  public getAllLocations(): Observable<Location[]> {\n    const url = `${this.baseUrl}/location`;\n    return this.http.get<GetAllLocationsResponse>(url).pipe(map((response: GetAllLocationsResponse) => response.LocationList));\n  }\n\n  /**\n   * Used to get a single location by id.\n   * @param id The organization's ID.\n   */\n  public getLocation(id: number): Observable<Location> {\n    const url = `${this.baseUrl}/location/${id}`;\n    return this.http.get<GetLocationResponse>(url).pipe(map((response: GetLocationResponse) => response.Location));\n  }\n\n  /**\n   * Used to get all locations in an organization.\n   * @param id The organization's ID.\n   */\n  public getLocationsByOrgId(id: number): Observable<Location[]> {\n    const url = `${this.baseUrl}/locationbyorg/${id}`;\n    return this.http.get<GetLocationListResponse>(url).pipe(map((response: GetLocationListResponse) => response.LocationList));\n  }\n\n  /**\n   * Used to add a location.\n   * @param location The new location to create.\n   * @returns A promise containing the CreateLocationResponse.\n   */\n  public createLocation(location: CreateLocationRequest): Promise<CreateLocationResponse> {\n    const url = `${this.baseUrl}/location`;\n    return this.http.post<CreateLocationResponse>(url, location).toPromise();\n  }\n\n  /**\n   * @param location The location to update.\n   * @returns A promise with the BaseResponse.\n   */\n  public updateLocation(location: UpdateLocationRequest): Promise<BaseResponse> {\n    const locationID = location.ID;\n    const url = `${this.baseUrl}/location/${locationID}`;\n    return this.http.patch<BaseResponse>(url, location).toPromise();\n  }\n\n  /**\n   * @param id The location ID.\n   * @returns An observable with the DeleteLocationResponse.\n   */\n  public deleteLocation(id: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/location/${id}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n\n  /**\n   * @returns An observable with the timezone.\n   */\n  public getTimeZone(): Observable<any> {\n    const url = `${this.baseUrl}/timezones`;\n    return this.http.get<any>(url);\n  }\n\n  /**\n   * @param locationID The location ID.\n   * @returns An observable with the new token.\n   */\n  public switchLocation(locationID: number): Observable<LoggedInUser> {\n    const url = `${this.baseUrl}/location/switch`;\n    return this.http.post<LoggedInUser>(url, { LocationID: locationID });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  Organization,\n  CreateOrgRequest,\n  CreateOrgResponse,\n  UpdateOrgRequest,\n  BaseResponse,\n  GetOrgResponse,\n  GetAllOrgResponse,\n  ScaffoldOrgRequest,\n  ScaffoldOrgResponse,\n  UpdateOrgLogoResponse,\n} from '@xenon/api';\n\nimport { BaseApi } from '../environments/base-api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiOrganizationService extends BaseApi {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  /**\n   * Used to get all organizations.\n   * @returns An observable containing an array of organizations.\n   */\n  public getAllOrgs(): Observable<Organization[]> {\n    const url = `${this.baseUrl}/org`;\n    return this.http.get<GetAllOrgResponse>(url).pipe(map((response: GetAllOrgResponse) => response.OrgList));\n  }\n\n  /**\n   * Used to get a single organization by ID.\n   * @param id The ID of the organization to get.\n   * @returns An observable containing an array of organizations.\n   */\n  public getOrg(id: number): Observable<Organization> {\n    const url = `${this.baseUrl}/org/${id}`;\n\n    return this.http.get<GetOrgResponse>(url).pipe(map((response: GetOrgResponse) => (response.Org ? response.Org : null)));\n  }\n\n  /**\n   * Used to create a new organization in the system.\n   * @param newOrgInfo The request info.\n   * @returns An observable with the CreateOrgResponse.\n   */\n  public createOrg(newOrgInfo: CreateOrgRequest): Observable<CreateOrgResponse> {\n    const url = `${this.baseUrl}/org`;\n    return this.http.post<CreateOrgResponse>(url, newOrgInfo);\n  }\n\n  /**\n   * @param id The organization's ID.\n   * @param updateInfo The organization info to update.\n   * @returns An observable with the BaseResponse.\n   */\n  public updateOrg(id: number, updateInfo: UpdateOrgRequest): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/org/${id}`;\n    return this.http.patch<BaseResponse>(url, updateInfo);\n  }\n\n  /**\n   * @param id The organization's ID.\n   * @param logoFile The file of organizations logo.\n   * @returns An observable with the BaseResponse.\n   */\n  public updateOrgLogo(id: number, logoFile: File): Observable<UpdateOrgLogoResponse> {\n    const url = `${this.baseUrl}/uploadorglogo/${id}`;\n\n    const formData = new FormData();\n    formData.append('logoFile', logoFile);\n\n    return this.http.post<UpdateOrgLogoResponse>(url, formData);\n  }\n\n  /**\n   * @param id The organization's ID.\n   * @returns An observable with the BaseResponse.\n   */\n  public deleteOrg(id: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/org/${id}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n\n  /**\n   * Used to Scaffold a new organization in the system.\n   * @param newOrgInfo The request info.\n   * @returns An observable with the ScaffoldOrgResponse.\n   */\n  public scaffoldOrg(newOrgInfo: ScaffoldOrgRequest): Observable<ScaffoldOrgResponse> {\n    const url = `${this.baseUrl}/org/scaffold`;\n    return this.http.post<ScaffoldOrgResponse>(url, newOrgInfo);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseApi } from '../environments/base-api';\nimport { BaseResponse } from '../models/base-response';\nimport {\n  AddRoleToUserRequest,\n  AddRoleToUserResponse,\n  CreateRoleRequest,\n  CreateRoleResponse,\n  GetRolesByLocationResponse,\n  GetRolesByOrgResponse,\n  UpdateRoleRequest,\n} from '@xenon/api';\nimport {\n  GetRolePermissionsResponse,\n  GetAllRolePermissionsResponse,\n  FormTemplatePermissionResponse,\n  TaskTemplatePermissionResponse,\n  TaskTemplatePermission,\n  FormTemplatePermission,\n} from '../models/role';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiRoleService extends BaseApi {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  /**\n   * Used to get roles by an organization ID.\n   * @param orgId Get all roles by this organization's ID.\n   * @returns An observable with the GetRolesByOrgResponse.\n   */\n  public getRolesByOrg(orgId: number): Observable<GetRolesByOrgResponse> {\n    const url = `${this.baseUrl}/rolebyorg/${orgId}`;\n    return this.http.get<GetRolesByOrgResponse>(url);\n  }\n\n  /**\n   * Used to get roles by a location ID.\n   * @param locationId Get all roles by this location's ID.\n   * @returns An observable with the GetRolesByLocationResponse.\n   */\n  public getRolesByLocation(locationId: number): Observable<GetRolesByLocationResponse> {\n    const url = `${this.baseUrl}/rolebylocation/${locationId}`;\n    return this.http.get<GetRolesByLocationResponse>(url);\n  }\n\n  /**\n   * Used to create a new role.\n   * @param roleInfo The information used to create a new role.\n   * @returns An observable with the CreateRoleResponse.\n   */\n  public createRole(roleInfo: CreateRoleRequest): Observable<CreateRoleResponse> {\n    const url = `${this.baseUrl}/role`;\n    return this.http.post<CreateRoleResponse>(url, roleInfo);\n  }\n\n  /**\n   * Used to update an existing role.\n   * @param role Information on the role to update.\n   * @returns An observable with the BaseResponse.\n   */\n  public updateRole(role: UpdateRoleRequest): Observable<BaseResponse> {\n    const roleID = role.ID;\n    const url = `${this.baseUrl}/role/${roleID}`;\n    return this.http.patch<BaseResponse>(url, role);\n  }\n\n  /**\n   * Used to delete an existing role.\n   * @param roleID The ID of the role to delete.\n   * @returns An observable with the BaseResponse.\n   */\n  public deleteRole(roleID: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/role/${roleID}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n\n  /**\n   * Used to add a role to a user.\n   * @param info Information on the role and the user to add it to.\n   * @returns An observable with the AddRoleToUserResponse\n   */\n  public addRoleToUser(info: AddRoleToUserRequest): Observable<AddRoleToUserResponse> {\n    const url = `${this.baseUrl}/userrole`;\n    return this.http.post<AddRoleToUserResponse>(url, info);\n  }\n\n  /**\n   * Used to remove an assigned role from a user.\n   * @param roleID The ID of the role to remove.\n   * @returns An observable with the BaseResponse.\n   */\n  public removeRoleFromUser(roleID: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/userrole/${roleID}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n\n  /**\n   * Used to get permissions by a role ID.\n   * @param roleID Get all permissions by this role's ID.\n   * @returns An observable with the GetRolePermissionsResponse.\n   */\n  public getPermissionsByRole(roleID: number): Observable<GetRolePermissionsResponse> {\n    const url = `${this.baseUrl}/permissions/get/byrole`;\n    return this.http.post<GetRolePermissionsResponse>(url, { RoleID: roleID });\n  }\n\n  /**\n   * Used to get all permissions.\n   * @returns An observable with the GetAllRolePermissionsResponse.\n   */\n  public getAllPermissions(): Observable<GetAllRolePermissionsResponse> {\n    const url = `${this.baseUrl}/permissions/get/all`;\n    return this.http.get<GetAllRolePermissionsResponse>(url);\n  }\n\n  /**\n   * Used to set permissions by a role ID.\n   * @param roleID Set all permissions by this role's ID.\n   * @param permissionIDs List of permissionIds to set.\n   * @returns An observable with the BaseResponse.\n   */\n  public setPermissionsByRole(roleID: number, permissionIDs: number[]): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/role/permissions/set`;\n    return this.http.post<BaseResponse>(url, { RoleID: roleID, PermissionIDs: permissionIDs });\n  }\n\n  /**\n   * Used to get form template permissions by a role ID.\n   * @param roleID Get permissions by this role's ID.\n   * @returns An observable with the FormTemplatePermissionResponse.\n   */\n  public getFormTemplateRolePermissionsByRole(roleID: number): Observable<FormTemplatePermissionResponse> {\n    const url = `${this.baseUrl}/form/template/role/permissions/get/byrole/${roleID}`;\n    return this.http.get<FormTemplatePermissionResponse>(url);\n  }\n\n  /**\n   * Used to get form template permissions by a role ID.\n   * @param roleID Get permissions by this role's ID.\n   * @returns An observable with the FormTemplatePermissionResponse.\n   */\n  public getFormTemplateRolePermissionsDefaultByRole(roleID: number): Observable<FormTemplatePermissionResponse> {\n    const url = `${this.baseUrl}/form/template/role/permissions/get/default/byrole/${roleID}`;\n    return this.http.get<FormTemplatePermissionResponse>(url);\n  }\n\n  /**\n   * Used to get task template permissions by a role ID.\n   * @param roleID Get permissions by this role's ID.\n   * @returns An observable with the TaskTemplatePermissionResponse.\n   */\n  public getTaskTemplateRolePermissionsByRole(roleID: number): Observable<TaskTemplatePermissionResponse> {\n    const url = `${this.baseUrl}/task/template/role/permissions/get/byrole/${roleID}`;\n    return this.http.get<TaskTemplatePermissionResponse>(url);\n  }\n\n  /**\n   * Used to get task template permissions by a role ID.\n   * @param roleID Get permissions by this role's ID.\n   * @returns An observable with the TaskTemplatePermissionResponse.\n   */\n  public getTaskTemplateRolePermissionsDefaultByRole(roleID: number): Observable<TaskTemplatePermissionResponse> {\n    const url = `${this.baseUrl}/task/template/role/permissions/get/default/byrole/${roleID}`;\n    return this.http.get<TaskTemplatePermissionResponse>(url);\n  }\n\n  /**\n   * Used to set task template permissions.\n   * @param templateRoles List of template role permissions to set.\n   * @returns An observable with the BaseResponse.\n   */\n  public setTaskTemplateRolePermissionsByRole(templateRoles: TaskTemplatePermission[]): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/task/template/role/permissions/set`;\n    return this.http.post<BaseResponse>(url, { TaskTemplateRoles: templateRoles });\n  }\n\n  /**\n   * Used to set default task template permissions.\n   * @param templateRoles List of template role permissions to set.\n   * @returns An observable with the BaseResponse.\n   */\n  public setDefaultTaskTemplateRolePermissionsByRole(templateRoles: TaskTemplatePermission): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/task/template/role/permissions/default/set`;\n    return this.http.post<BaseResponse>(url, templateRoles);\n  }\n\n  /**\n   * Used to set form template permissions.\n   * @param templateRoles List of template role permissions to set.\n   * @returns An observable with the BaseResponse.\n   */\n  public setFormTemplateRolePermissionsByRole(templateRoles: FormTemplatePermission[]): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/form/template/role/permissions/set`;\n    return this.http.post<BaseResponse>(url, { FormTemplateRoles: templateRoles });\n  }\n\n  /**\n   * Used to set default form template permissions.\n   * @param templateRoles List of template role permissions to set.\n   * @returns An observable with the BaseResponse.\n   */\n  public setDefaultFormTemplateRolePermissionsByRole(templateRoles: FormTemplatePermission): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/form/template/role/permissions/default/set`;\n    return this.http.post<BaseResponse>(url, templateRoles);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AddTaskRecurrenceRequest, AddTaskRecurrenceResponse, GetTaskRecurrenceResponse, TaskRecurrence } from '@xenon/api';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\nimport { BaseApi } from '../environments/base-api';\nimport { BaseResponse } from '../models/base-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiTaskRecurrenceService extends BaseApi {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getTaskRecurrenceByTaskTemplateId(taskTemplateId: number): Observable<GetTaskRecurrenceResponse> {\n    const url = `${this.baseUrl}/taskrecurrencebytasktemplateid/${taskTemplateId}`;\n    return this.http.get<GetTaskRecurrenceResponse>(url);\n  }\n\n  getTaskRecurrence(id: number): Observable<TaskRecurrence> {\n    const url = `${this.baseUrl}/gettaskrecurrence/${id}`;\n    return this.http.get<any>(url).pipe(map((response: any) => response));\n  }\n\n  addTaskRecurrence(taskRecurrence: AddTaskRecurrenceRequest): Promise<AddTaskRecurrenceResponse> {\n    const url = `${this.baseUrl}/taskrecurrence`;\n    return this.http.post<AddTaskRecurrenceResponse>(url, taskRecurrence).toPromise();\n  }\n\n  updateTaskRecurrence(taskRecurrence: TaskRecurrence): Observable<TaskRecurrence> {\n    const url = `${this.baseUrl}/taskrecurrence`;\n    return this.http.patch<TaskRecurrence>(url, taskRecurrence).pipe(map((response: any) => response));\n  }\n\n  deleteTaskRecurrence(id: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/taskrecurrence/${id}`;\n    return this.http.delete<BaseResponse>(url).pipe(map((response: any) => response));\n  }\n\n  // getOverdueTasksByOrganization(organizationId: number): Observable<TaskRecurrence[]> {\n  //   const url = `${this.baseUrl}/tasks/overdue/org/${organizationId}`;\n  //   return this.http\n  //     .get<{ Tasks: Task[] }>(url)\n  //     .pipe(map((response: { Tasks: Task[] }) => response.Tasks));\n  // }\n\n  //   v1.GET(“/gettaskrecurrence/:id”, getTaskRecurrenceReq)\n  // \t\tv1.POST(“/taskrecurrence”, createTaskRecurrenceReq)\n  // \t\tv1.PATCH(“/taskrecurrence”, updateTaskRecurrence)\n  // \t\tv1.DELETE(“/taskrecurrence/:id”, deleteTaskRecurrence)\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseResponse, UpdateSubTaskStatusResponse, CreateSubTaskResponse, SubTask } from '@xenon/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseApi } from '../environments/base-api';\nimport {\n  CreateTaskTemplateRequest,\n  CreateTaskTemplateResponse,\n  GetTaskTemplateByOrgResponse,\n  GetTaskTemplateByTemplateIDResponse,\n  TaskTemplate,\n  UpdateTaskTemplateRequest,\n} from '../models/task-template';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiTaskTemplateService extends BaseApi {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  /**\n   * Gets task templates for a given organization.\n   * @param orgID The organization's ID to get the task templates for.\n   * @returns An observable containing an array of task templates.\n   */\n  public getTaskTemplatesByOrgID(orgID: number): Observable<TaskTemplate[]> {\n    const url = `${this.baseUrl}/tasktemplatelist/${orgID}`;\n    return this.http.get<GetTaskTemplateByOrgResponse>(url).pipe(map((response: GetTaskTemplateByOrgResponse) => response.TaskTemplateList));\n  }\n\n  /**\n   * Gets a single task template.\n   * @param taskTemplateID The ID of the task template to retrieve.\n   * @returns An observable containing the requested task template.\n   */\n  public getTaskTemplateByTemplateID(taskTemplateID: number): Observable<TaskTemplate> {\n    const url = `${this.baseUrl}/tasktemplate/${taskTemplateID}`;\n    return this.http.get<GetTaskTemplateByTemplateIDResponse>(url).pipe(map((response: GetTaskTemplateByTemplateIDResponse) => response.TaskTemplate));\n  }\n\n  /**\n   * Creates a new task template with the information passed in.\n   * @param newTaskTemplate The information used to create a new task template.\n   * @returns An observable containing the create task template response.\n   */\n  public createTaskTemplate(newTaskTemplate: CreateTaskTemplateRequest): Observable<CreateTaskTemplateResponse> {\n    const url = `${this.baseUrl}/tasktemplate`;\n    return this.http.post<CreateTaskTemplateResponse>(url, newTaskTemplate);\n  }\n\n  /**\n   * Updates an existing task template by the ID passed in.\n   * @param updatedTaskTemplate The ID of the task template and the information to update.\n   * @returns An observable containing the base response model.\n   */\n  public updateTaskTemplate(updatedTaskTemplate: UpdateTaskTemplateRequest): Observable<BaseResponse> {\n    const taskTemplateID = updatedTaskTemplate?.ID;\n    const url = `${this.baseUrl}/tasktemplate/${taskTemplateID}`;\n    return this.http.patch<BaseResponse>(url, updatedTaskTemplate);\n  }\n\n  /**\n   * Updates an existing task template by the ID passed in.\n   * @param updatedTaskTemplate The ID of the task template and the information to update.\n   * @returns An observable containing the base response model.\n   */\n  public updateTaskTemplateBatch(updatedTaskTemplate: UpdateTaskTemplateRequest): Observable<BaseResponse> {\n    const taskTemplateID = updatedTaskTemplate?.ID;\n    const url = `${this.baseUrl}/tasktemplatebatch/${taskTemplateID}`;\n    return this.http.patch<BaseResponse>(url, updatedTaskTemplate);\n  }\n\n  /**\n   * Deletes an existing task template by the ID passed in.\n   * @param taskTemplateID\n   * @returns An observable containing the base response model.\n   */\n  public deleteTaskTemplate(taskTemplateID: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/tasktemplate/${taskTemplateID}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n\n  /**\n   * Creates a task template subtask.\n   * @param taskTemplateID\n   * @returns An observable containing the base response model.\n   */\n  public createTaskTemplateSubtask(subTask: any): Observable<CreateSubTaskResponse> {\n    const url = `${this.baseUrl}/tasktemplatesubtask`;\n    return this.http.post<CreateSubTaskResponse>(url, subTask);\n  }\n\n  /**\n   * Updates an existing task template subtask.\n   * @param taskTemplateSubtaskID\n   * @returns An observable containing the base response model.\n   */\n  public updateTaskTemplateSubtask(subTask: any): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/tasktemplatesubtask/${subTask.ID}`;\n    return this.http.patch<BaseResponse>(url, subTask);\n  }\n\n  /**\n   * Deletes an existing task template subtask by the ID passed in.\n   * @param taskTemplateSubtaskID\n   * @returns An observable containing the base response model.\n   */\n  public deleteTaskTemplateSubtask(taskTemplateSubtaskID: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/tasktemplatesubtask/${taskTemplateSubtaskID}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n\n  /**\n   * Update an existing task template subtasks display order by the ID passed in.\n   * @param taskTemplateSubtaskID\n   * @returns An observable containing the base response model.\n   */\n  public updateTaskTemplateSubtaskDisplayOrder(subtasks: SubTask[]): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/tasktemplatesubtaskdisplayorder`;\n    return this.http.post<BaseResponse>(url, subtasks);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { UtilMomentService } from '@xenon/utils';\nimport { BaseApi } from '../environments/base-api';\nimport {\n  CreateTaskRequest,\n  Task,\n  UpdateSubTaskNameRequest,\n  UpdateSubTaskStatusRequest,\n  UpdateSubTaskStatusResponse,\n  UpdateTaskRequest,\n  CreateTaskResponse,\n} from '../models/task';\nimport { BaseResponse } from '../models/base-response';\nimport * as moment from 'moment';\nimport { TaskTemplate } from '../models/task-template';\n\nexport interface TasksByDate {\n  active: boolean;\n  dateString: string;\n  tasks: Task[];\n  dateIsToday: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiTaskService extends BaseApi {\n  organizationId$ = new BehaviorSubject(1);\n  locationId$ = new BehaviorSubject(1);\n  stringDateRange$ = new BehaviorSubject({ start: null, end: null });\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  search$ = combineLatest([this.organizationId$, this.locationId$, this.stringDateRange$]).pipe(\n    switchMap(([organizationId, locationId, stringDateRange]) => this.search(organizationId, locationId, stringDateRange))\n  );\n\n  getTasksListByDate$ = combineLatest([this.organizationId$, this.locationId$, this.stringDateRange$]).pipe(\n    switchMap(([organizationId, locationId, stringDateRange]) => this.getTasksListByDate(organizationId, locationId, stringDateRange))\n  );\n\n  search(organizationId: number, locationId: number, stringDateRange: { start: string; end: string }): Observable<Task[]> {\n    const url = `${this.baseUrl}/searchtasks`;\n    const request = {\n      OrgID: organizationId,\n      LocationID: locationId,\n      StartDate: stringDateRange.start,\n      EndDate: stringDateRange.end,\n    };\n    return this.http.post<{ TaskList: Task[] }>(url, request).pipe(map((response: { TaskList: Task[] }) => response.TaskList));\n  }\n\n  getTasksListByDate(organizationId: number, locationId: number, stringDateRange: { start: string; end: string }): Observable<TasksByDate[]> {\n    return this.search(organizationId, locationId, stringDateRange).pipe(\n      map((response: Task[]) => {\n        const tasksListByDate: TasksByDate[] = [];\n\n        if (response) {\n          const sortedTasks = response.slice().sort((a, b) => (b.AvailableDate < a.AvailableDate ? 1 : -1));\n\n          let currentMonth = 0;\n          sortedTasks.forEach((task) => {\n            const localAvailableDate = UtilMomentService.new(task.AvailableDate).toDate();\n            const dateString = UtilMomentService.new(localAvailableDate).format('YYYY-MM-DD');\n            const dateIsToday = UtilMomentService.new(moment().toDate()).format('YYYY-MM-DD') === dateString;\n            if (tasksListByDate.length) {\n              let matchFound = false;\n              let matchIndex = 0;\n              tasksListByDate.forEach((mt, index) => {\n                if (mt.dateString === dateString) {\n                  matchFound = true;\n                  matchIndex = index;\n                }\n              });\n\n              if (matchFound) {\n                tasksListByDate[matchIndex].tasks.push(task);\n              } else {\n                tasksListByDate.push({\n                  dateString: dateString,\n                  tasks: [task],\n                  active: false,\n                  dateIsToday: dateIsToday,\n                });\n              }\n            } else {\n              tasksListByDate.push({\n                dateString: dateString,\n                tasks: [task],\n                active: false,\n                dateIsToday: dateIsToday,\n              });\n            }\n            currentMonth = localAvailableDate.getMonth();\n          });\n        }\n\n        return tasksListByDate;\n      })\n    );\n  }\n\n  getOverdueTasksByLocation(locationId: number): Observable<Task[]> {\n    const url = `${this.baseUrl}/tasks/overdue/location/${locationId}`;\n    return this.http.get<{ Tasks: Task[] }>(url).pipe(map((response: { Tasks: Task[] }) => response.Tasks));\n  }\n\n  getOverdueTasksByOrganization(organizationId: number): Observable<Task[]> {\n    const url = `${this.baseUrl}/tasks/overdue/org/${organizationId}`;\n    return this.http.get<{ Tasks: Task[] }>(url).pipe(map((response: { Tasks: Task[] }) => response.Tasks));\n  }\n\n  getTasksByFormTemplate(formTemplateId: number): Observable<any> {\n    const url = `${this.baseUrl}/tasktemplatesbyformtemplate/${formTemplateId}`;\n    return this.http.get<any>(url).pipe(map((response: any) => response));\n  }\n\n  public addTaskTemplate(task: TaskTemplate): Observable<any> {\n    const url = `${this.baseUrl}/tasktemplate`;\n    return this.http.post<any>(url, task).pipe(\n      map((response) => {\n        return response;\n      })\n    );\n  }\n\n  public updateTaskTemplate(task: TaskTemplate): Observable<any> {\n    const url = `${this.baseUrl}/tasktemplate/${task.ID}`;\n    return this.http.patch<any>(url, task).pipe(\n      map((response) => {\n        return response;\n      })\n    );\n  }\n\n  public deleteTaskTemplate(taskTemplateId: number): Observable<any> {\n    const url = `${this.baseUrl}/tasktemplate/${taskTemplateId}`;\n    return this.http.delete<any>(url).pipe(\n      map((response) => {\n        return response;\n      })\n    );\n  }\n\n  /**\n   * Update an existing task.\n   * @param task The task to update.\n   * @returns A promise containing the base response.\n   */\n  public updateTask(task: UpdateTaskRequest): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/task/${task.ID}`;\n    return this.http.patch<BaseResponse>(url, task).toPromise();\n  }\n\n  public deleteTask(taskId: number): Observable<any> {\n    const url = `${this.baseUrl}/task/${taskId}`;\n    return this.http.delete<any>(url).pipe(\n      map((response) => {\n        return response;\n      })\n    );\n  }\n\n  /**\n   * Used to update the status of a task (from the checklist panel).\n   * This is NOT used for subtasks (only tasks).\n   * Either marks a checklist task as \"complete\" or \"incomplete\".\n   * @param taskID The task id.\n   * @param userID The id of the user marking the task as complete.\n   * @param markComplete Whether to mark the task as complete.\n   * @returns A promise containing the base response.\n   */\n  public updateTaskStatus(taskID: number, userID: number, markComplete: boolean): Promise<BaseResponse> {\n    if (markComplete) {\n      const url = `${this.baseUrl}/checklisttaskcomplete/${taskID}/${userID}`;\n      return this.http.get<BaseResponse>(url).toPromise();\n    } else {\n      const url = `${this.baseUrl}/checklisttaskincomplete/${taskID}/${userID}`;\n      return this.http.get<BaseResponse>(url).toPromise();\n    }\n  }\n\n  /**\n   * Used to update the status of a subtask (from the checklist panel).\n   * This is NOT used for tasks (only subtasks).\n   * Either marks a checklist task as \"complete\" or \"incomplete\".\n   * @param taskID The subtask id.\n   * @param markComplete Whether to mark the subtask as complete.\n   * @returns A promise containing the base response.\n   */\n  public updateSubTaskStatus(subTaskID: number, currentUserID: number, markComplete: boolean): Promise<BaseResponse> {\n    if (markComplete) {\n      const url = `${this.baseUrl}/subtaskmarkcomplete/${subTaskID}/${currentUserID}`;\n      return this.http.get<BaseResponse>(url).toPromise();\n    } else {\n      const url = `${this.baseUrl}/subtaskmarkincomplete/${subTaskID}/${currentUserID}`;\n      return this.http.get<BaseResponse>(url).toPromise();\n    }\n  }\n\n  /**\n   * Used to add a sub task to an existing task.\n   * @param subTask The sub task to create.\n   * @returns A promise containing the UpdateSubTaskResponse.\n   */\n  public addSubTask(subTask: UpdateSubTaskStatusRequest): Promise<UpdateSubTaskStatusResponse> {\n    const url = `${this.baseUrl}/subtask`;\n    return this.http.post<UpdateSubTaskStatusResponse>(url, subTask).toPromise();\n  }\n\n  /**\n   * Used to add a task.\n   * @param task The task to create.\n   * @returns A promise containing the AddTaskResponse.\n   */\n  public addTask(task: CreateTaskRequest): Promise<CreateTaskResponse> {\n    const url = `${this.baseUrl}/checklisttask`;\n    return this.http.post<CreateTaskResponse>(url, task).toPromise();\n  }\n\n  /**\n   * Update the name of a sub task.\n   * @param request The information needed to update the sub task name.\n   * @returns A promise containing the base response.\n   */\n  public updateSubTaskName(request: UpdateSubTaskNameRequest): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/subtask/${request.ID}`;\n    return this.http.patch<BaseResponse>(url, request).toPromise();\n  }\n\n  /**\n   * Delete an existing sub task.\n   * @param id The id of the sub task to delete.\n   * @returns A promise containing the base response.\n   */\n  public deleteSubTask(id: number): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/subtask/${id}`;\n    return this.http.delete<BaseResponse>(url).toPromise();\n  }\n\n  /**\n   * Assigns user to a task.\n   * @param taskId The id of the task to assign to.\n   * @param userID The id of the user to assign to.\n   * @returns A promise containing the base response.\n   */\n  public assignTaskUser(body: { taskId: number; userID: number }): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/assigntaskuser`;\n    return this.http.post<BaseResponse>(url, body).toPromise();\n  }\n\n  /**\n   * Removes user to a task.\n   * @param taskId The id of the task to assign to.\n   * @param userID The id of the user to assign to.\n   * @returns A promise containing the base response.\n   */\n  public removeTaskUser(body: { taskId: number; userID: number }): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/removetaskuser/${body.taskId}/${body.userID}`;\n    return this.http.delete<BaseResponse>(url).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n  CreateUserRequest,\n  CreateUserResponse,\n  UpdateUserRequest,\n  User,\n  UploadPhotoResponse,\n  UpdateUserPrimarySettingsRequest,\n  GetOrgUserLocationResponse,\n  UpdateOrgUserRequest,\n} from '../models/user';\nimport { map, take } from 'rxjs/operators';\nimport { BaseApi } from '../environments/base-api';\nimport { BaseResponse } from '../models/base-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiUserService extends BaseApi {\n  public cachedUsersSource: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n  cachedUsers = this.cachedUsersSource.asObservable();\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  /**\n   * Create a new user.\n   * @param user The information used to create a new user.\n   * @returns An observable with the CreateUserResponse.\n   */\n  public createOrgUser(user: CreateUserRequest): Observable<CreateUserResponse> {\n    const url = `${this.baseUrl}/orguser`;\n    return this.http.post<CreateUserResponse>(url, user);\n  }\n\n  /**\n   * Updates an existing OrgUser.\n   * @param updateInfo The information used to update a user.\n   * @returns An observable with the UpdatedUserResponse.\n   */\n  public updateOrgUser(updateInfo: UpdateOrgUserRequest): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/orguser`;\n    return this.http.patch<CreateUserResponse>(url, updateInfo);\n  }\n\n  /**\n   * Update an existing user.\n   * @param updateInfo The user info to update.\n   * @returns An observable with the BaseResponse.\n   */\n  public updateUser(updateInfo: UpdateUserRequest): Observable<BaseResponse> {\n    const userID = updateInfo.ID;\n    const url = `${this.baseUrl}/user/${userID}`;\n    return this.http.patch<BaseResponse>(url, updateInfo);\n  }\n\n  /**\n   * Delete an existing user.\n   * @param userID The ID of the user to delete.\n   * @returns A promise containing the BaseResponse.\n   */\n  public getUser(userID: number): Promise<{ Status: string; XenUser: User }> {\n    const url = `${this.baseUrl}/user/${userID}`;\n    return this.http.get<{ Status: string; XenUser: User }>(url).toPromise();\n  }\n\n  /**\n   * get existing org user locations.\n   * @param orgID The ID of the organization.\n   * @param userID The ID of the user.\n   * @returns An observable with the BaseResponse.\n   */\n  public getOrgUserLocation(orgID: number, userID): Observable<GetOrgUserLocationResponse> {\n    const url = `${this.baseUrl}/orguserrole/${orgID}/${userID}`;\n    return this.http.get<GetOrgUserLocationResponse>(url);\n  }\n\n  /**\n   * Delete an existing user.\n   * @param userID The ID of the user to delete.\n   * @returns An observable with the BaseResponse.\n   */\n  public deleteUser(orgID: number, userID: number): Observable<BaseResponse> {\n    const url = `${this.baseUrl}/user/${orgID}/${userID}`;\n    return this.http.delete<BaseResponse>(url);\n  }\n\n  public getUsersByLocation(locationId: number): Observable<User[]> {\n    const url = `${this.baseUrl}/team/location/${locationId}`;\n    return this.http.get<{ Users: User[] }>(url).pipe(map((response: { Users: User[] }) => response.Users));\n  }\n\n  public getUsersByOrganization(organizationId: number): Observable<User[]> {\n    const url = `${this.baseUrl}/userbyorg/${organizationId}`;\n    return this.http.get<{ OrgUserList: User[] }>(url).pipe(map((response: { OrgUserList: User[] }) => (response.OrgUserList ? response.OrgUserList : [])));\n  }\n\n  public getUserByID(organizationId: number, userId: number): Observable<User> {\n    const url = `${this.baseUrl}/userorg/${organizationId}/${userId}`;\n    return this.http.get<{ UserOrg: User }>(url).pipe(\n      take(1),\n      map((response: { UserOrg: User }) => response.UserOrg)\n    );\n  }\n\n  public uploadPhoto(file: File, userID: string): Observable<UploadPhotoResponse> {\n    const url = `${this.baseUrl}/uploaduserphoto/${userID}`;\n\n    const formData = new FormData();\n    formData.append('photoFile', file, file.name);\n\n    return this.http.post<UploadPhotoResponse>(url, formData);\n  }\n\n  public setCachedUsers(users: User[]) {\n    this.cachedUsersSource.next(users);\n  }\n\n  /**\n   * When the user changes their organization / location in the drop down,\n   * this call updates what their last choice was so we can load that again next time.\n   * Updates the \"PrimaryLocationID\" & \"PrimaryOrgID\" properties on the User object.\n   * @param request The update user primary settings request.\n   * @returns The base response.\n   */\n  public updateUserPrimarySettings(request: UpdateUserPrimarySettingsRequest): Promise<BaseResponse> {\n    const url = `${this.baseUrl}/userprimarysetting`;\n    return this.http.post<BaseResponse>(url, request).toPromise();\n  }\n}\n","export * from './lib/auth.module';\n\nexport * from './lib/enums/app-list';\n\nexport * from './lib/services/app-navigation.service';\nexport * from './lib/services/permissions-helper.service';\n\nexport * from './lib/guards/auth.guard';\nexport * from './lib/guards/permissionsAuth.guard';\n\nexport * from './lib/pages/page-login/page-login.component';\nexport * from './lib/pages/page-not-found/page-not-found.component';\nexport * from './lib/pages/password-reset-from-email/password-reset-from-email.component';\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { PageLoginComponent } from './pages/page-login/page-login.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { UtilsModule } from '@xenon/utils';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\nimport { CheckYourEmailComponent } from './pages/check-your-email-dialog/check-your-email.component';\nimport { NewAccountComponent } from './pages/new-account/new-account.component';\nimport { PasswordResetFromEmailComponent } from './pages/password-reset-from-email/password-reset-from-email.component';\nimport { TermsAndServicesComponent } from './pages/terms-and-services/terms-and-services.component';\nimport { MatListModule } from '@angular/material/list';\nimport { UiUserTermsDocumentModule } from '@xenon/ui';\nimport { PickOrgLocationComponent } from './pages/pick-org-location/pick-org-location.component';\n\nconst authComponents = [\n  PageLoginComponent,\n  PageNotFoundComponent,\n  ResetPasswordComponent,\n  PasswordResetFromEmailComponent,\n  CheckYourEmailComponent,\n  NewAccountComponent,\n  TermsAndServicesComponent,\n  PickOrgLocationComponent,\n];\n\n@NgModule({\n  declarations: [...authComponents],\n  providers: [],\n  exports: [...authComponents],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatListModule,\n    UtilsModule,\n    FlexLayoutModule,\n    MatIconModule,\n    UiUserTermsDocumentModule,\n  ],\n})\nexport class AuthModule {\n  static forRoot(environment: any): ModuleWithProviders<AuthModule> {\n    return {\n      ngModule: AuthModule,\n      providers: [\n        {\n          provide: 'env',\n          useValue: environment,\n        },\n      ],\n    };\n  }\n}\n","export enum AppList {\n  Client = 'client',\n  Admin = 'admin',\n  FormBuilder = 'formBuilder',\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { AppNavigationService } from '../services/app-navigation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private localStorageService: UtilLocalStorageService, private navigationService: AppNavigationService, private router: Router) {}\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const currentUser = this.localStorageService.getItem('user') ? this.localStorageService.getItem('user').CurrentUser : false;\n    this.navigationService.setApp(next.data.app);\n    if (!currentUser) {\n      return this.router.navigate(['login']);\n    }\n    return !!currentUser;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { AppNavigationService } from '../services/app-navigation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionsAuthGuard implements CanActivate {\n  constructor(private localStorageService: UtilLocalStorageService, private navigationService: AppNavigationService, private router: Router) {}\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const menu = this.localStorageService.getItem('menu');\n    if (menu.some((item) => item.name === state.url.substring(1) && !item.hasAccess)) return this.router.navigate(['login']);\n    return true;\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-check-your-email',\n  styleUrls: ['./check-your-email.component.scss'],\n  template: `<mat-card>\n    <div>\n      <h6 class=\"text-center\">Check Your Email.</h6>\n      <div fxLayoutAlign=\"center center\"><mat-icon class=\"color-gray icon-large\">mail_outline</mat-icon></div>\n      <p class=\"text-body1 color-gray text-center\">Log into your email provider and look for the password recovery email.</p>\n      <button mat-stroked-button (click)=\"close()\" class=\"w-100 py-2\">Ok</button>\n    </div>\n  </mat-card>`,\n})\nexport class CheckYourEmailComponent {\n  constructor(public dialogRef: MatDialogRef<CheckYourEmailComponent>) {}\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface NewAccountData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'xenon-new-account',\n  styleUrls: ['./new-account.component.scss'],\n  template: `<mat-card>\n    <div>\n      <h6 class=\"text-center\">Create New Account</h6>\n      <div fxLayoutAlign=\"space-between\">\n        <mat-form-field>\n          <mat-label>First Name</mat-label>\n          <input matInput placeholder=\"First Name\" [(ngModel)]=\"data.firstName\" />\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Last Name</mat-label>\n          <input matInput placeholder=\"Last Name\" [(ngModel)]=\"data.lastName\" />\n        </mat-form-field>\n      </div>\n      <mat-form-field class=\"w-100\">\n        <mat-label>Email</mat-label>\n        <input matInput type=\"email\" placeholder=\"Email\" [(ngModel)]=\"data.email\" />\n      </mat-form-field>\n      <mat-form-field class=\"w-100\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" placeholder=\"Password\" [(ngModel)]=\"data.password\" />\n      </mat-form-field>\n      <p class=\"w-100 text-center\">Already have an account? <span class=\"color-primary clickable\" (click)=\"close()\">Log in</span></p>\n      <button\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"onSubmit()\"\n        class=\"w-100 py-2\"\n        [disabled]=\"data.firstName === '' || data.lastName === '' || data.email === '' || data.password === ''\"\n      >\n        CREATE ACCOUNT\n      </button>\n    </div>\n  </mat-card>`,\n})\nexport class NewAccountComponent {\n  constructor(public dialogRef: MatDialogRef<NewAccountComponent>, @Inject(MAT_DIALOG_DATA) public data: NewAccountData) {}\n\n  public onSubmit(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { ApiAuthenticationService, ApiOrganizationService, BaseResponse, User, ApiLocationService, LoggedInUser } from '@xenon/api';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { NotificationType, UiNotificationService, UiConfirmationComponent } from '@xenon/ui';\nimport { AppNavigationService } from '../../services/app-navigation.service';\nimport { AppList } from '../../enums/app-list';\nimport { CheckYourEmailComponent } from '../check-your-email-dialog/check-your-email.component';\nimport { ResetPasswordComponent, ResetPasswordData } from '../reset-password/reset-password.component';\nimport { NewAccountComponent } from '../new-account/new-account.component';\nimport { take } from 'rxjs/operators';\nimport { TermsAndServicesComponent } from '../terms-and-services/terms-and-services.component';\nimport { PickOrgLocationComponent } from '../pick-org-location/pick-org-location.component';\n\n@Component({\n  selector: 'xenon-page-login',\n  styleUrls: ['./page-login.component.scss'],\n  templateUrl: './page-login.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageLoginComponent implements OnInit, OnDestroy {\n  public form: FormGroup = Object.create(null);\n  private subs: Subscription[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: ApiAuthenticationService,\n    private localStorage: UtilLocalStorageService,\n    private notificationService: UiNotificationService,\n    private appNavigationService: AppNavigationService,\n    public dialog: MatDialog,\n    public apiOrganizationService: ApiOrganizationService,\n    public apiLocationService: ApiLocationService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.subs.forEach((s) => s.unsubscribe());\n  }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required])],\n    });\n  }\n  onSubmit(id = 0) {\n    const login = this.authenticationService\n      .login(this.form.controls.email.value, this.form.controls.password.value, id)\n      .subscribe((loggedInUser: LoggedInUser) => {\n        if (loggedInUser) {\n          let incompleteUser = false;\n          incompleteUser = this.checkTermsAccepted(loggedInUser);\n          if (incompleteUser) return;\n          incompleteUser = this.checkPrimaryOrgLocation(loggedInUser);\n          if (incompleteUser) return;\n          this.setAndNavigate(loggedInUser);\n        } else {\n          this.notificationService.show(NotificationType.error, 'Login Failed', 'Invalid credentials, please try again', 2500);\n        }\n      });\n    this.subs.push(login);\n  }\n\n  public openResetPassword(): void {\n    const dialogRef = this.dialog.open(ResetPasswordComponent, {\n      panelClass: 'full-page-dialog',\n      data: {\n        email: '',\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((data: ResetPasswordData) => {\n      if (data) {\n        this.authenticationService\n          .resetPassword(data.email)\n          .then((response: BaseResponse) => {\n            console.log(response);\n            if (response.Status === 'success') {\n              this.dialog.open(CheckYourEmailComponent);\n            } else this.handleResetPasswordError();\n          })\n          .catch((err) => {\n            console.log(err);\n            this.handleResetPasswordError();\n          });\n      }\n    });\n  }\n\n  public openNewAccount(): void {\n    const dialogRef = this.dialog.open(NewAccountComponent, {\n      panelClass: 'full-page-dialog',\n      data: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((data) => {\n      if (data) {\n        this.apiOrganizationService.scaffoldOrg(data).subscribe((result) => {\n          if (result.Status === 'error') {\n            this.dialog.open(UiConfirmationComponent, {\n              data: {\n                title: 'Error',\n                description: result.Message,\n                acceptMessage: 'Close',\n                showDecline: false,\n              },\n            });\n          }\n          if (result.Status === 'success') {\n            this.notificationService.show(NotificationType.error, 'OK', 'User Created', 5000);\n            this.form.controls.email.setValue(data.email);\n            this.form.controls.password.setValue(data.password);\n            this.onSubmit();\n          }\n        });\n      }\n    });\n  }\n\n  private setAndNavigate(loggedInUser: LoggedInUser) {\n    this.localStorage.setItem('user', loggedInUser);\n    this.appNavigationService.navigateToApp(AppList.Client);\n  }\n\n  private handleResetPasswordError() {\n    this.notificationService.show(NotificationType.error, 'Error', 'Invalid email, please try again', 5000);\n  }\n\n  private checkTermsAccepted(loggedInUser: LoggedInUser): boolean {\n    if (loggedInUser.CurrentUser.TermsAccepted === 0) {\n      const dialogRef = this.dialog.open(TermsAndServicesComponent, {\n        panelClass: 'full-page-dialog',\n      });\n\n      dialogRef\n        .afterClosed()\n        .pipe(take(1))\n        .subscribe((accepted) => {\n          if (accepted) {\n            this.authenticationService.acceptUserTerms(loggedInUser.CurrentUser.ID).then((_) => {});\n            this.checkPrimaryOrgLocation(loggedInUser);\n            this.setAndNavigate(loggedInUser);\n          }\n        });\n      return true;\n    }\n  }\n\n  private checkPrimaryOrgLocation(loginInfo: LoggedInUser): boolean {\n    if (loginInfo.Message && loginInfo.Message.includes('no location')) {\n      const dialogRef = this.dialog.open(PickOrgLocationComponent, {\n        panelClass: 'full-page-dialog',\n        data: loginInfo.Locations,\n      });\n\n      dialogRef\n        .afterClosed()\n        .pipe(take(1))\n        .subscribe((newLocationID) => {\n          if (newLocationID) {\n            this.onSubmit(newLocationID);\n          }\n        });\n      return true;\n    }\n  }\n}\n","<div class=\"login-register\">\n  <div class=\"login-register-box\">\n    <mat-card>\n      <mat-card-content>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"text-center\">\n            <img alt=\"logo\" class=\"login-logo\" src=\"/assets/login-logo.png\" />\n          </div>\n          <div fxLayout=\"row wrap\">\n            <!-- col full-->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <mat-form-field>\n                <input matInput placeholder=\"Username\" [formControl]=\"form.controls['email']\" />\n              </mat-form-field>\n              <small *ngIf=\"form.controls['email'].hasError('required') && form.controls['email'].touched\" class=\"support-text\">Username is required.</small>\n            </div>\n            <!-- col full-->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <mat-form-field>\n                <input matInput type=\"password\" placeholder=\"Password\" [formControl]=\"form.controls['password']\" />\n              </mat-form-field>\n              <small *ngIf=\"form.controls['password'].hasError('required') && form.controls['password'].touched\" class=\"support-text display-block\">\n                Password is required.</small\n              >\n            </div>\n            <!-- col full-->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <button mat-raised-button color=\"primary\" class=\"w-100 py-2\" type=\"submit\" [disabled]=\"!form.valid\">\n                Login\n              </button>\n            </div>\n            <div fxLayoutAlign=\"center center\" class=\"my-3 w-100\">\n              <p class=\"color-primary clickable mb-0\" (click)=\"openResetPassword()\">Forgot Password</p>\n            </div>\n            <div fxLayoutAlign=\"center center\" class=\"my-3 w-100\">\n              <p class=\"mb-0\">No account? <span class=\"color-primary clickable\" (click)=\"openNewAccount()\">Create one</span></p>\n            </div>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xenon-page-not-found',\n  template: ` <p>page-not-found works!</p> `,\n})\nexport class PageNotFoundComponent {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiAuthenticationService, BaseResponse, ChangePasswordFromEmailRequest } from '@xenon/api';\nimport { NotificationType, UiNotificationService, ChangePasswordComponent, ChangePasswordData } from '@xenon/ui';\n\n@Component({\n  selector: 'xenon-password-reset-from-email',\n  template: '',\n})\nexport class PasswordResetFromEmailComponent implements OnInit {\n  constructor(\n    public notificationService: UiNotificationService,\n    private dialog: MatDialog,\n    private authService: ApiAuthenticationService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  public ngOnInit() {\n    const routeParams = {\n      email: this.route.snapshot.paramMap.get('e'),\n      orgID: this.route.snapshot.paramMap.get('o'),\n      uUid: this.route.snapshot.paramMap.get('uu'),\n      acceptInvitation: this.route.snapshot.paramMap.get('ai'),\n    };\n\n    const dialogRef = this.dialog.open(ChangePasswordComponent, {\n      width: '250px',\n      data: {\n        hideCurrentPassword: true,\n        newPassword: '',\n        confirmPassword: '',\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((data: ChangePasswordData) => {\n      if (data) {\n        const request: ChangePasswordFromEmailRequest = {\n          Email: routeParams.email,\n          UUID: routeParams.uUid,\n          OrgId: +routeParams.orgID,\n          NewPassword: data.newPassword,\n          NewPassword2: data.confirmPassword,\n          AI: +routeParams.acceptInvitation,\n        };\n\n        this.authService\n          .changePasswordFromEmail(request)\n          .then((response: BaseResponse) => {\n            this.router.navigate(['login']);\n            this.notificationService.show(NotificationType.success, 'Action done', 'Password Updated', 5000);\n          })\n          .catch((err) => {\n            this.notificationService.show(NotificationType.error, 'Error', `${err?.error?.Error}`, 5000);\n            this.ngOnInit();\n          });\n      }\n    });\n  }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LoginOrgList } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-pick-org-location',\n  styleUrls: ['./pick-org-location.component.scss'],\n  template: `<mat-card fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n    <div>\n      <div *ngFor=\"let org of data\">\n        <span fxLayoutAlign=\"start center\">\n          <!-- <img [src]=\"logoLink(org.LogoURL)\" class=\"logo mr-2\" /> -->\n          {{ org.OrgName }}\n        </span>\n        <mat-selection-list #otherOrg [multiple]=\"false\">\n          <mat-list-option *ngFor=\"let location of org.Locations\" (click)=\"this.dialogRef.close(location.ID)\">\n            <div fxLayoutAlign=\"start center\">\n              <span class=\"text-body2\">{{ location.Name }}</span>\n            </div>\n          </mat-list-option>\n        </mat-selection-list>\n      </div>\n    </div>\n    <div fxLayoutAlign=\"center\">\n      <button mat-stroked-button color=\"primary\" class=\"py-2\" (click)=\"back()\">\n        Back\n      </button>\n    </div>\n  </mat-card>`,\n})\nexport class PickOrgLocationComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: LoginOrgList, public dialogRef: MatDialogRef<PickOrgLocationComponent>) {}\n\n  public back(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ResetPasswordData {\n  email: string;\n}\n\n@Component({\n  selector: 'xenon-reset-password',\n  styleUrls: ['./reset-password.component.scss'],\n  template: `<mat-card>\n    <div fxLayout=\"column\">\n      <h5 class=\"text-center\">Reset Your Password</h5>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput type=\"email\" placeholder=\"Email\" [(ngModel)]=\"data.email\" />\n      </mat-form-field>\n      <button mat-flat-button color=\"primary\" class=\"py-2\" [disabled]=\"data.email === ''\" (click)=\"onSubmit()\">\n        RESET PASSWORD\n      </button>\n    </div>\n  </mat-card>`,\n})\nexport class ResetPasswordComponent {\n  constructor(public dialogRef: MatDialogRef<ResetPasswordComponent>, @Inject(MAT_DIALOG_DATA) public data: ResetPasswordData) {}\n\n  public onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public onSubmit(): void {\n    this.dialogRef.close(this.data);\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-terms-and-services',\n  styleUrls: ['./terms-and-services.component.scss'],\n  template: `<mat-card>\n    <div fxLayout=\"column\" class=\"h-100\">\n      <div *ngIf=\"docType === 'none'; else doc\" fxLayoutAlign=\"space-between\" fxLayout=\"column\" class=\"h-100\">\n        <span>\n          <h5 class=\"text-center color-primary\">Legal Documents</h5>\n          <mat-action-list>\n            <button mat-list-item (click)=\"docType = 'license'\">\n              <div class=\"w-100\" fxLayoutAlign=\"space-between\">License Agreement <mat-icon>chevron_right</mat-icon></div>\n            </button>\n            <button mat-list-item (click)=\"docType = 'terms'\">\n              <div class=\"w-100\" fxLayoutAlign=\"space-between\">Term and Conditions <mat-icon>chevron_right</mat-icon></div>\n            </button>\n            <button mat-list-item (click)=\"docType = 'privacy'\">\n              <div class=\"w-100\" fxLayoutAlign=\"space-between\">Privacy Policy <mat-icon>chevron_right</mat-icon></div>\n            </button>\n          </mat-action-list>\n        </span>\n\n        <div fxLayoutAlign=\"center\">\n          <button mat-stroked-button color=\"primary\" class=\"py-2 mr-4\" (click)=\"onDeny()\">\n            Log Out\n          </button>\n          <button mat-flat-button color=\"primary\" class=\"py-2\" (click)=\"onAccept()\">\n            Accept All\n          </button>\n        </div>\n      </div>\n\n      <ng-template #doc>\n        <xenon-ui-user-terms-document [documentType]=\"docType\" (back)=\"docType = 'none'\"></xenon-ui-user-terms-document>\n      </ng-template>\n    </div>\n  </mat-card>`,\n})\nexport class TermsAndServicesComponent {\n  public docType = 'none';\n\n  constructor(public dialogRef: MatDialogRef<TermsAndServicesComponent>) {}\n\n  public onDeny(): void {\n    this.dialogRef.close(false);\n  }\n\n  public onAccept(): void {\n    this.dialogRef.close(true);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { UtilLocalStorageService, UtilWindowRefService } from '@xenon/utils';\nimport { AppList } from '../enums/app-list';\nimport { PermissionsHelperService } from './permissions-helper.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppNavigationService {\n  currentApp: AppList;\n\n  menuItems = {\n    client: [\n      {\n        active: true,\n        name: 'client/home',\n        title: 'Home',\n        icon: 'home',\n        hasAccess: true,\n      },\n      {\n        active: false,\n        name: 'client/tasks',\n        title: 'Tasks',\n        icon: 'check_box',\n        hasAccess: true,\n      },\n      {\n        active: false,\n        name: 'client/forms',\n        title: 'Forms',\n        icon: 'content_paste',\n        hasAccess: true,\n      },\n      {\n        active: false,\n        name: 'client/drive',\n        title: 'Drive',\n        icon: 'folder',\n        hasAccess: this.permissionsHelperService.hasPermissionByName('accessDrive'),\n      },\n      {\n        active: false,\n        name: 'client/team',\n        title: 'Team',\n        icon: 'people',\n        hasAccess: this.permissionsHelperService.hasPermissionByName('viewTeam'),\n      },\n    ],\n    admin: [\n      {\n        active: false,\n        name: 'admin/locations',\n        title: 'Locations',\n        icon: 'location_on',\n        hasAccess: this.permissionsHelperService.hasPermissionByName('manageOrganization'),\n      },\n      {\n        active: false,\n        name: 'admin/billing',\n        title: 'Billing',\n        icon: 'credit_card',\n      },\n      {\n        active: false,\n        name: 'admin/users',\n        title: 'Users',\n        icon: 'people',\n        hasAccess: this.permissionsHelperService.hasPermissionByName('manageUsers'),\n      },\n      {\n        active: false,\n        name: 'admin/roles',\n        title: 'Roles',\n        icon: 'folder',\n        hasAccess: this.permissionsHelperService.hasPermissionByName('manageUsers'),\n      },\n      {\n        active: false,\n        name: 'admin/task-templates',\n        title: 'Tasks',\n        icon: 'check_box',\n        hasAccess: this.permissionsHelperService.hasPermissionByName('manageTaskTemplates'),\n      },\n      {\n        active: false,\n        name: 'admin/form-templates',\n        title: 'Forms',\n        icon: 'filter_none',\n        hasAccess: this.permissionsHelperService.hasPermissionByName('manageFormTemplates'),\n      },\n    ],\n    formBuilder: [],\n  };\n\n  constructor(\n    private permissionsHelperService: PermissionsHelperService,\n    private utilWindowRefService: UtilWindowRefService,\n    private localStorage: UtilLocalStorageService,\n    @Inject('env') private env\n  ) {\n    this.setApp(AppList.Client);\n  }\n\n  public setApp(app: AppList): void {\n    this.currentApp = app;\n    switch (this.currentApp) {\n      case AppList.Client:\n        this.localStorage.setItem('menu', this.menuItems.client);\n        break;\n      case AppList.Admin:\n        this.localStorage.setItem('menu', this.menuItems.admin);\n        break;\n      case AppList.FormBuilder:\n        this.localStorage.setItem('menu', this.menuItems.formBuilder);\n        break;\n    }\n  }\n\n  public isAdmin(): boolean {\n    return this.currentApp === AppList.Admin;\n  }\n\n  public isClient(): boolean {\n    return this.currentApp === AppList.Client;\n  }\n\n  public isFormBuilder(): boolean {\n    return this.currentApp === AppList.FormBuilder;\n  }\n\n  public navigateToApp(app: AppList, append2Url?: string): void {\n    this.setApp(app);\n    const baseUrl = `${this.env['appUrls'][app]}`;\n    const targetUrl = append2Url && append2Url.length ? `${baseUrl}${append2Url}` : `${baseUrl}`;\n    this.utilWindowRefService.nativeWindow.location.replace(targetUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionsHelperService {\n  constructor(private localStorage: UtilLocalStorageService) {}\n\n  public hasEveryPermissionInArray(permissions: string[]): boolean {\n    return permissions.every((permission) => {\n      return this.hasPermissionByName(permission);\n    });\n  }\n\n  public hasAnyPermissionInArray(permissions: string[]): boolean {\n    return permissions.some((permission) => {\n      return this.hasPermissionByName(permission);\n    });\n  }\n\n  public hasPermissionByName(permissionName: string): boolean {\n    const aggregatePermissions = this.localStorage.getItem('user') ? this.localStorage.getItem('user').AggregatePermissions : false;\n    if (!aggregatePermissions) {\n      return false;\n    }\n    return aggregatePermissions.some((permission) => permission === permissionName);\n  }\n}\n","export * from './lib/layouts.module';\n\n// Main Layout\nexport * from './lib/main-layout/main-layout.component';\n\n// Sub Layout\nexport * from './lib/sub-layout/sub-layout.component';\n\nexport * from './lib/sub-layout/enums/tab-types';\nexport * from './lib/sub-layout/models/form-item.models';\nexport * from './lib/sub-layout/services/form-builder.service';\n","import { NgModule } from '@angular/core';\nimport { MainLayoutModule } from './main-layout/main-layout.module';\nimport { SubLayoutModule } from './sub-layout/sub-layout.module';\n\n@NgModule({\n  imports: [MainLayoutModule, SubLayoutModule],\n  exports: [MainLayoutModule, SubLayoutModule],\n})\nexport class LayoutsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subject, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, take, takeUntil } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApiAuthenticationService, ApiLocationService, ApiRoleService, ApiUserService, GetRolesByOrgResponse, User, LoggedInUser } from '@xenon/api';\nimport { NotificationType, UiNotificationService, UIUserFormComponent } from '@xenon/ui';\nimport { UtilLocalStorageService, UtilWindowRefService } from '@xenon/utils';\nimport { AppNavigationService, AppList, PermissionsHelperService } from '@xenon/auth';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'xenon-header',\n  styleUrls: ['./header.component.scss'],\n  templateUrl: './header.component.html',\n  animations: [\n    trigger('slideInOut', [\n      state(\n        'opened',\n        style({\n          transform: 'translate3d(0, 0, 0)',\n        })\n      ),\n      state(\n        'closed',\n        style({\n          transform: 'translate3d(-100%,0,0)',\n        })\n      ),\n      transition('opened => closed', animate('300ms ease-in-out')),\n      transition('closed => opened', animate('300ms ease-in-out')),\n    ]),\n  ],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  hideArrow = false;\n  itemSettingsDisplayState: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  loggedInUser: LoggedInUser;\n  public users$: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n  public showPhoto: boolean;\n  unsubscribe = new Subject<{}>();\n  userOrganizationName = '';\n  userLocationName = '';\n  orgLocations = [];\n  public hasPermission: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  public isXClient = () => {\n    return this.appNavigationService.isClient();\n  };\n\n  public isXAdmin = () => {\n    return this.appNavigationService.isAdmin();\n  };\n\n  constructor(\n    private authenticationService: ApiAuthenticationService,\n    private notificationService: UiNotificationService,\n    private utilLocalStorageService: UtilLocalStorageService,\n    private utilWindowRefService: UtilWindowRefService,\n    private appNavigationService: AppNavigationService,\n    private apiRoleService: ApiRoleService,\n    private dialog: MatDialog,\n    private apiUserService: ApiUserService,\n    private apiLocationService: ApiLocationService,\n    private permissionsHelperService: PermissionsHelperService\n  ) {\n    this.hasPermission.next(\n      this.permissionsHelperService.hasAnyPermissionInArray(['manageOrganization', 'manageUsers', 'manageFormTemplates', 'manageTaskTemplates'])\n    );\n    this.loggedInUser = this.utilLocalStorageService.getItem('user');\n    this.apiLocationService\n      .getLocationsByOrgId(this.loggedInUser.CurrentOrg.ID)\n      .pipe(take(1))\n      .subscribe((response: any) => {\n        this.orgLocations = response;\n        this.userLocationName = response.find((orgLocation) => orgLocation.ID === this.loggedInUser.CurrentLocation.ID).Name;\n      });\n  }\n\n  ngOnInit(): void {\n    this.showPhoto = this.loggedInUser.CurrentUser?.PhotoURL?.trim()?.length > 0;\n    if (this.loggedInUser.CurrentUser.Orgs) {\n      const primaryOrg = this.loggedInUser.CurrentUser.Orgs.find((org) => org.OrgID === this.loggedInUser.CurrentOrg.ID);\n      this.userOrganizationName = primaryOrg?.Org?.Name;\n\n      this.apiLocationService\n        .getLocation(this.loggedInUser.CurrentLocation.ID)\n        .pipe(take(1))\n        .subscribe((locationObj) => {\n          if (locationObj && locationObj.Timezone) moment.tz.setDefault(locationObj.Timezone);\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  logout(): void {\n    this.authenticationService.logout().subscribe((response) => {\n      const origin = this.utilWindowRefService.nativeWindow.location.origin;\n      this.utilWindowRefService.nativeWindow.location.replace(`${origin}/#/login`);\n    });\n  }\n\n  public hidePhoto() {\n    this.showPhoto = false;\n  }\n\n  public navigateToAdmin(): void {\n    this.appNavigationService.navigateToApp(AppList.Admin);\n  }\n\n  public navigateToClient(): void {\n    this.appNavigationService.navigateToApp(AppList.Client);\n  }\n\n  public toggleSwitchOrg(newVal: boolean): void {\n    this.itemSettingsDisplayState.next(newVal);\n  }\n\n  public openUserForm(): void {\n    this.loggedInUser = this.utilLocalStorageService.getItem('user');\n\n    if (!this.loggedInUser) {\n      this.notificationService.show(NotificationType.error, 'Error', 'Can not get current user data', 2500);\n      return;\n    }\n    this.apiUserService\n      .getUsersByOrganization(this.loggedInUser.CurrentOrg.ID)\n      .pipe(\n        takeUntil(this.unsubscribe),\n        map((response: User[]) => {\n          const foundUser = response.find((u) => u.ID === this.loggedInUser.CurrentUser.ID);\n          this.loggedInUser.CurrentUser.RoleLocations = foundUser?.RoleLocations;\n          return foundUser;\n        }),\n        mergeMap((u) => this.apiRoleService.getRolesByOrg(this.loggedInUser.CurrentOrg.ID)),\n        catchError((err) => {\n          return throwError(err);\n        })\n      )\n      .subscribe((response: GetRolesByOrgResponse) => {\n        const formData = {\n          user: this.loggedInUser.CurrentUser,\n          refresh: this.refreshData.bind(this),\n          roles: response.OrgRoleList,\n          locations: this.orgLocations,\n        };\n        this.dialog.open(UIUserFormComponent, {\n          data: formData,\n          panelClass: 'full-page-dialog',\n        });\n      });\n  }\n\n  public logoLink(): string {\n    const url = this.loggedInUser.CurrentUser.Orgs.find((org) => org.OrgID === this.loggedInUser.CurrentOrg.ID).Org.LogoURL;\n    return url.replace(/\\s/g, '').length > 0 ? url : 'assets/logo-transparent.png';\n  }\n\n  private refreshData(): void {\n    this.apiUserService.getUsersByOrganization(this.loggedInUser.CurrentOrg.ID).subscribe((response: User[]) => {\n      this.apiUserService.setCachedUsers(response);\n    });\n  }\n\n  getOrganizationName(): string {\n    if (this.loggedInUser.CurrentUser?.Orgs)\n      return this.loggedInUser.CurrentUser.Orgs.filter((org) => org.OrgID === this.loggedInUser.CurrentOrg.ID)[0].Org.Name;\n    else return null;\n  }\n}\n","<mat-toolbar [id]=\"isXAdmin() ? 'main-header-admin' : 'main-header'\" color=\"primary\">\n  <button\n    mat-flat-button\n    class=\"space-button px-2\"\n    color=\"primary\"\n    *ngIf=\"isXClient()\"\n    (click)=\"toggleSwitchOrg(!itemSettingsDisplayState.value)\"\n    (mouseover)=\"hideArrow = true\"\n    (mouseout)=\"hideArrow = false\"\n  >\n    <div fxLayoutAlign=\"space-between center\">\n      <span fxLayoutAlign=\"start center\">\n        <img [src]=\"logoLink()\" class=\"circle-icon mt-5px\" />\n        <span fxLayout=\"column\" class=\"ml-2 lowercase-words\">\n          <span class=\"m-0 text-subtitle2 text-left\">{{ userOrganizationName }}</span>\n          <span class=\"m-0 location-text text-left text-caption2\">{{ userLocationName }}</span>\n        </span>\n      </span>\n      <mat-icon *ngIf=\"hideArrow\">keyboard_arrow_down</mat-icon>\n    </div>\n  </button>\n\n  <div fxLayoutAlign=\"space-between center\" *ngIf=\"isXAdmin()\">\n    <span fxLayoutAlign=\"start center\">\n      <button mat-icon-button (click)=\"navigateToClient()\">\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n      <span fxLayout=\"column\" class=\"ml-2\">\n        <span class=\"m-0 text-subtitle2 text-left\">{{ userOrganizationName }}</span>\n        <span class=\"m-0 location-text text-caption2\">Admin</span>\n      </span>\n    </span>\n  </div>\n\n  <span class=\"spacer\"></span>\n\n  <button mat-icon-button (click)=\"navigateToAdmin()\" *ngIf=\"isXClient() && (hasPermission | async)\">\n    <mat-icon>settings</mat-icon>\n  </button>\n\n  <button\n    [matMenuTriggerFor]=\"profile\"\n    mat-icon-button\n    [ngClass]=\"{ 'background-primary-light': !showPhoto }\"\n    class=\"profile-circle background-primary-light\"\n    fxLayoutAlign=\"center center\"\n  >\n    <img *ngIf=\"showPhoto\" src=\"{{ loggedInUser.CurrentUser.PhotoURL }}\" alt=\"user\" (error)=\"hidePhoto()\" class=\"circle-icon\" />\n    <span *ngIf=\"!showPhoto\" class=\"color-primary\">{{ loggedInUser.CurrentUser.FirstName[0] }}{{ loggedInUser.CurrentUser.LastName[0] }}</span>\n  </button>\n\n  <mat-menu #profile=\"matMenu\">\n    <button mat-menu-item (click)=\"openUserForm()\">\n      <img *ngIf=\"loggedInUser.CurrentUser?.PhotoURL.trim().length\" src=\"{{ loggedInUser.CurrentUser.PhotoURL }}\" alt=\"user\" class=\"circle-icon\" />\n      <span *ngIf=\"!loggedInUser.CurrentUser?.PhotoURL.trim().length\" class=\"profile-initials color-primary-dark background-primary-light\"\n        >{{ loggedInUser.CurrentUser.FirstName[0] }}{{ loggedInUser.CurrentUser.LastName[0] }}</span\n      >\n      Profile\n    </button>\n    <button mat-menu-item (click)=\"logout()\">\n      <mat-icon>exit_to_app</mat-icon>\n      Sign Out\n    </button>\n  </mat-menu>\n</mat-toolbar>\n\n<div class=\"switch-org-sidebar\" [@slideInOut]=\"(itemSettingsDisplayState | async) ? 'opened' : 'closed'\">\n  <xenon-switch-organization (updateName)=\"userOrganizationName = $event\" [loadData]=\"itemSettingsDisplayState | async\"></xenon-switch-organization>\n</div>\n\n<div class=\"switch-org-backdrop\" *ngIf=\"itemSettingsDisplayState | async\" (click)=\"toggleSwitchOrg(false)\"></div>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ApiOrganizationService, Organization } from '@xenon/api';\nimport { NotificationType, UiNotificationService, UiFormFieldType, UiFormFieldImageUpload } from '@xenon/ui';\nimport { take } from 'rxjs/operators';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'xenon-edit-organization-logo-dialog',\n  styleUrls: ['./edit-organization-logo-dialog.component.scss'],\n  template: `<h6>Organization Logo</h6>\n    <xenon-ui-form-field-image-upload\n      [fieldOptions]=\"fieldOptions\"\n      [fieldFormGroup]=\"form\"\n      [buttonText]=\"'Select Profile Pic'\"\n      (pictureChanged)=\"onSelectProfilePic($event)\"\n    >\n    </xenon-ui-form-field-image-upload>\n    <div fxLayoutAlign=\"end center\">\n      <button mat-button color=\"primary\" (click)=\"close()\">Cancel</button>\n      <button mat-button color=\"primary\" (click)=\"update()\">Update</button>\n    </div> `,\n})\nexport class EditOrganizationLogoDialogComponent {\n  public fieldOptions = {\n    name: 'PhotoUpload',\n    label: 'Logo Pic',\n    type: UiFormFieldType.File,\n    validators: [],\n  } as UiFormFieldImageUpload;\n  public form = new FormGroup({\n    PhotoUpload: new FormControl(),\n  });\n\n  private photoToSave: File;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: Organization,\n    public dialogRef: MatDialogRef<EditOrganizationLogoDialogComponent>,\n    private apiOrganizationService: ApiOrganizationService,\n    private notificationService: UiNotificationService,\n    private localStorage: UtilLocalStorageService\n  ) {}\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n\n  public onSelectProfilePic(event): void {\n    this.photoToSave = event.target.files[0];\n  }\n\n  public update(): void {\n    this.apiOrganizationService\n      .updateOrgLogo(this.data.OrgID, this.photoToSave)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.FileURL !== '') {\n          const currentUser = this.localStorage.getItem('user').CurrentUser;\n          const newLocalItem = {\n            ...currentUser,\n            Orgs: currentUser.Orgs.map((userOrg: Organization) => {\n              if (userOrg.OrgID === this.data.OrgID) {\n                return { ...userOrg, LogoURL: result.FileURL };\n              } else {\n                return userOrg;\n              }\n            }),\n          };\n          let newLoggedInUser = this.localStorage.getItem('user');\n          newLoggedInUser = { ...newLoggedInUser, CurrentUser: newLocalItem };\n          this.localStorage.setItem('user', newLoggedInUser);\n          this.dialogRef.close(result.FileURL);\n        } else {\n          this.notificationService.show(NotificationType.error, 'ERROR', '', 2500);\n        }\n      });\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ApiOrganizationService, Organization } from '@xenon/api';\nimport { NotificationType, UiNotificationService } from '@xenon/ui';\nimport { take } from 'rxjs/operators';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-edit-organization-name-dialog',\n  styleUrls: ['./edit-organization-name-dialog.component.scss'],\n  template: `<h6>Organization Name</h6>\n    <mat-form-field floatLabel=\"never\">\n      <input matInput [(ngModel)]=\"data.Name\" />\n    </mat-form-field>\n    <div fxLayoutAlign=\"end center\">\n      <button mat-button color=\"primary\" (click)=\"close()\">Cancel</button>\n      <button mat-button color=\"primary\" (click)=\"update()\">Update</button>\n    </div> `,\n})\nexport class EditOrganizationNameDialogComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: Organization,\n    public dialogRef: MatDialogRef<EditOrganizationNameDialogComponent>,\n    private apiOrganizationService: ApiOrganizationService,\n    private notificationService: UiNotificationService,\n    private localStorage: UtilLocalStorageService\n  ) {}\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n\n  public update(): void {\n    this.apiOrganizationService\n      .updateOrg(this.data.OrgID, { ID: this.data.OrgID, Name: this.data.Name })\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          const currentUser = this.localStorage.getItem('user').CurrentUser;\n          const newLocalItem = {\n            ...currentUser,\n            Orgs: currentUser.Orgs.map((userOrg) => {\n              if (userOrg.OrgID === this.data.OrgID) {\n                return { ...userOrg, Org: { ...userOrg.Org, Name: this.data.Name } };\n              } else {\n                return userOrg;\n              }\n            }),\n          };\n          let newLoggedInUser = this.localStorage.getItem('user');\n          newLoggedInUser = { ...newLoggedInUser, CurrentUser: newLocalItem };\n          this.localStorage.setItem('user', newLoggedInUser);\n          this.dialogRef.close();\n        } else {\n          this.notificationService.show(NotificationType.error, 'ERROR', result.Message, 2500);\n        }\n      });\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OrganizationList, RoleLocations, Location } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-switch-organization-row',\n  styleUrls: ['./switch-organization-row.component.scss'],\n  template: `\n    <mat-expansion-panel hideToggle [expanded]=\"isExpanded\">\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"text-subtitle2 mr-0\" fxLayoutAlign=\"space-between center\">\n          <span fxLayoutAlign=\"start center\">\n            <img [src]=\"logoLink(organization.Org.LogoURL)\" class=\"logo mr-2\" />\n            {{ organization.Org.Name }}\n          </span>\n          <mat-menu #menu=\"matMenu\">\n            <!-- <div mat-menu-item fxLayoutAlign=\"start center\" (click)=\"menuClick.emit('starred')\">\n              <mat-icon class=\"color-gray icon-small material-icons-outlined\">grade</mat-icon>\n              <p class=\"mb-0\">Add to Starred</p>\n            </div> -->\n            <div mat-menu-item fxLayoutAlign=\"start center\" (click)=\"menuClick.emit('name')\">\n              <mat-icon class=\"color-gray icon-small material-icons-outlined\">edit</mat-icon>\n              <p class=\"mb-0\">Edit Name</p>\n            </div>\n            <div mat-menu-item fxLayoutAlign=\"start center\" (click)=\"menuClick.emit('logo')\">\n              <mat-icon class=\"color-gray icon-small material-icons-outlined\">edit</mat-icon>\n              <p class=\"mb-0\">Edit Logo</p>\n            </div>\n            <mat-divider></mat-divider>\n            <div mat-menu-item fxLayoutAlign=\"start center\" (click)=\"menuClick.emit('delete')\">\n              <mat-icon class=\"color-gray icon-small material-icons-outlined\">delete</mat-icon>\n              <p class=\"mb-0\">Delete</p>\n            </div>\n          </mat-menu>\n          <button mat-icon-button (click)=\"stopProp($event)\" [matMenuTriggerFor]=\"menu\">\n            <mat-icon class=\"color-gray icon-small\">more_vert</mat-icon>\n          </button>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <mat-selection-list #otherOrg [multiple]=\"false\">\n        <mat-list-option\n          *ngFor=\"let location of getLocations(organization.RoleLocations)\"\n          [selected]=\"checkCurrentLocation(location.ID)\"\n          (click)=\"switchLocation.emit(location.ID)\"\n        >\n          <div fxLayoutAlign=\"start center\">\n            <mat-icon class=\"mr-3\">{{ checkCurrentLocation(location.ID) ? 'check' : '' }}</mat-icon>\n            <span class=\"text-body2\">{{ location.Name }}</span>\n          </div>\n        </mat-list-option>\n      </mat-selection-list>\n    </mat-expansion-panel>\n  `,\n})\nexport class SwitchOrganizationComponentRow {\n  @Input() isExpanded = false;\n  @Input() organization: OrganizationList;\n  @Input() currentLocation: number;\n  @Output() menuClick = new EventEmitter<string>();\n  @Output() switchLocation = new EventEmitter<number>();\n\n  public orgObject: OrganizationList;\n\n  public getLocations(roleLocations: RoleLocations[]): Location[] {\n    let locationList = [];\n    if (!roleLocations) return;\n    roleLocations.forEach((roleLocation) => {\n      if (!roleLocation.LocationList) return;\n      roleLocation.LocationList.forEach((location) => {\n        if (locationList.length === 0) {\n          locationList = [location];\n        }\n        if (!locationList.some((list) => list.ID === location.ID)) {\n          locationList.push(location);\n        }\n      });\n    });\n    return locationList;\n  }\n\n  public stopProp(event: Event): void {\n    event.stopPropagation();\n  }\n\n  public checkCurrentLocation(locationID: number): boolean {\n    return locationID === this.currentLocation;\n  }\n\n  public logoLink(url: string): string {\n    return url.replace(/\\s/g, '').length > 0 ? url : 'assets/logo-transparent.png';\n  }\n}\n","import { Component, OnDestroy, ViewEncapsulation, Output, EventEmitter, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport {\n  ApiLocationService,\n  ApiOrganizationService,\n  ApiUserService,\n  BaseResponse,\n  OrganizationList,\n  UpdateUserPrimarySettingsRequest,\n  User,\n  LoggedInUser,\n} from '@xenon/api';\nimport { NotificationType, UiNotificationService, UiConfirmationComponent } from '@xenon/ui';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { take } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport 'moment-timezone';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { EditOrganizationNameDialogComponent } from './edit-organization-name-dialog/edit-organization-name-dialog.component';\nimport { EditOrganizationLogoDialogComponent } from './edit-organization-logo-dialog/edit-organization-logo-dialog.component';\n\n@Component({\n  selector: 'xenon-switch-organization',\n  templateUrl: './switch-organization.component.html',\n  styleUrls: ['./switch-organization.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SwitchOrganizationComponent implements OnDestroy {\n  @Input() set loadData(loadData: boolean) {\n    if (loadData) {\n      this.setOrgObjects();\n    }\n  }\n  @Output() updateName = new EventEmitter<string>();\n  public loggedInUser: LoggedInUser;\n  public otherOrg: BehaviorSubject<OrganizationList[]> = new BehaviorSubject(null);\n  public currentOrg: BehaviorSubject<OrganizationList> = new BehaviorSubject(null);\n  public loginSubscription: Subscription;\n\n  constructor(\n    private localStorage: UtilLocalStorageService,\n    private userService: ApiUserService,\n    public notificationService: UiNotificationService,\n    public dialog: MatDialog,\n    private apiOrganizationService: ApiOrganizationService,\n    private apiLocationService: ApiLocationService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.loginSubscription) {\n      this.loginSubscription.unsubscribe();\n    }\n  }\n\n  switchLocation(organizationID: number, locationID: number): void {\n    this.apiLocationService\n      .getLocation(locationID)\n      .pipe(take(1))\n      .subscribe((locationObj) => {\n        if (locationObj && locationObj.Timezone) moment.tz.setDefault(locationObj.Timezone);\n      });\n\n    const request: UpdateUserPrimarySettingsRequest = {\n      ID: this.loggedInUser.CurrentUser.ID,\n      OrgID: organizationID,\n      LocationID: locationID,\n    };\n\n    this.userService\n      .updateUserPrimarySettings(request)\n      .then((_) => {})\n      .catch((err) => {\n        this.notificationService.show(NotificationType.error, 'Error', 'Cannot set primary location.', 2500);\n      });\n\n    location.reload();\n    // this.apiLocationService\n    //   .switchLocation(locationID)\n    //   .pipe(take(1))\n    //   .subscribe((loggedInUser) => {\n    //     this.localStorage.setItem('user', loggedInUser);\n    //     location.reload();\n    //   });\n  }\n\n  handleEvent(type: string, org: OrganizationList): void {\n    switch (type) {\n      case 'starred':\n        this.starOrg(org);\n        break;\n      case 'name':\n        this.editOrgName(org);\n        break;\n      case 'logo':\n        this.editOrgLogo(org);\n        break;\n      case 'delete':\n        this.deleteOrg(org);\n        break;\n      default:\n        this.snackBar.open('Action not recognized', 'Close', {\n          duration: 4000,\n        });\n        break;\n    }\n  }\n\n  starOrg(org: OrganizationList): void {}\n\n  editOrgName(org: OrganizationList): void {\n    const editRef = this.dialog.open(EditOrganizationNameDialogComponent, {\n      data: org,\n    });\n\n    editRef\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((_) => {\n        this.updateName.emit(this.currentOrg.value.Org.Name);\n        this.setOrgObjects();\n      });\n  }\n\n  editOrgLogo(org: OrganizationList): void {\n    const editRef = this.dialog.open(EditOrganizationLogoDialogComponent, {\n      data: org,\n    });\n    editRef\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((newURL) => {\n        this.setOrgObjects();\n      });\n  }\n\n  deleteOrg(org: OrganizationList): void {\n    const confirmationDialog = this.dialog.open(UiConfirmationComponent, {\n      data: {\n        title: 'Delete Organization?',\n        description: 'This will permanently delete the organization.',\n        acceptMessage: 'Delete',\n        declineMessage: 'Cancel',\n      },\n    });\n\n    confirmationDialog\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((response) => {\n        if (response) {\n          this.apiOrganizationService\n            .deleteOrg(org.OrgID)\n            .pipe(take(1))\n            .subscribe((_) => {\n              this.snackBar.open('Organization deleted', 'Close', {\n                duration: 4000,\n              });\n            });\n        }\n      });\n  }\n\n  /**\n   * Get the list containing the currently selected org  - OR -\n   * get the list containing all the other orgs (not currently selected).\n   * @param getCurrentlySelected\n   */\n  private getOrgs(getCurrentlySelected: boolean, orgID: number): OrganizationList[] {\n    if (getCurrentlySelected) return this.loggedInUser.CurrentUser.Orgs.filter((org) => org.OrgID === orgID);\n    else return this.loggedInUser.CurrentUser.Orgs.filter((org) => org.OrgID !== orgID);\n  }\n\n  private setOrgObjects(): void {\n    this.loggedInUser = this.localStorage.getItem('user');\n    if (!this.loggedInUser.CurrentUser?.Orgs) return;\n    const nonSelectedOrgs: OrganizationList[] = this.getOrgs(false, this.loggedInUser.CurrentOrg.ID);\n    const selectedOrg: OrganizationList = this.getOrgs(true, this.loggedInUser.CurrentOrg.ID)[0];\n    this.otherOrg.next(nonSelectedOrgs);\n    this.currentOrg.next(selectedOrg);\n  }\n}\n","<div fxLayout=\"column\" class=\"content-container\">\n  <mat-accordion multi>\n    <div>\n      <p class=\"color-gray text-caption2 px-4 pt-2 mb-0\">Selected</p>\n      <xenon-switch-organization-row\n        *ngIf=\"currentOrg | async as currentOrg\"\n        [organization]=\"currentOrg\"\n        [isExpanded]=\"true\"\n        [currentLocation]=\"loggedInUser.CurrentLocation.ID\"\n        (menuClick)=\"handleEvent($event, currentOrg)\"\n        (switchLocation)=\"switchLocation(currentOrg.Org.ID, $event)\"\n      ></xenon-switch-organization-row>\n      <mat-divider></mat-divider>\n    </div>\n\n    <div *ngIf=\"otherOrg | async as otherOrg\">\n      <p class=\"color-gray text-caption2 px-4 pt-2 mb-0\">Available</p>\n      <div *ngFor=\"let organization of otherOrg\">\n        <xenon-switch-organization-row\n          [organization]=\"organization\"\n          (menuClick)=\"handleEvent($event, organization)\"\n          (switchLocation)=\"switchLocation(organization.Org.ID, $event)\"\n        ></xenon-switch-organization-row>\n      </div>\n    </div>\n  </mat-accordion>\n  <mat-divider class=\"push-down\"></mat-divider>\n  <button mat-flat-button [hidden]=\"true\">\n    <div fxLayoutAlign=\"start center\" class=\"color-primary\">\n      <mat-icon class=\"ml-3\">add</mat-icon>\n      <p class=\"ml-3 m-0\">New Account</p>\n    </div>\n  </button>\n</div>\n","import { Component } from '@angular/core';\nimport { ApiUserService } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { take, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { CurrentUserStorageService } from '../services/current-user-storage.service';\n\n@Component({\n  selector: 'xenon-main-layout',\n  styles: [\n    '.app-container { height: 100%; }',\n    '.main-container { height: calc(100vh - 57px); }',\n    'mat-drawer-content { overflow: hidden; margin-left: 72px !important; }',\n  ],\n  template: `\n    <div class=\"app-container\" *ngIf=\"loadedCurrentUser | async\">\n      <xenon-header></xenon-header>\n\n      <mat-drawer-container class=\"main-container\">\n        <mat-drawer id=\"main-side-bar\" mode=\"side\" opened>\n          <xenon-sidebar></xenon-sidebar>\n        </mat-drawer>\n\n        <mat-drawer-content>\n          <router-outlet></router-outlet>\n        </mat-drawer-content>\n      </mat-drawer-container>\n    </div>\n  `,\n})\nexport class MainLayoutComponent {\n  public loadedCurrentUser: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(currentUserStorage: CurrentUserStorageService) {\n    currentUserStorage\n      .setCurrentUser()\n      .pipe(\n        filter((result) => result),\n        take(1)\n      )\n      .subscribe((_) => {\n        this.loadedCurrentUser.next(true);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MainLayoutComponent } from './main-layout.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SwitchOrganizationComponent } from './header/switch-organization/switch-organization.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditOrganizationNameDialogComponent } from './header/switch-organization/edit-organization-name-dialog/edit-organization-name-dialog.component';\nimport { EditOrganizationLogoDialogComponent } from './header/switch-organization/edit-organization-logo-dialog/edit-organization-logo-dialog.component';\nimport { SwitchOrganizationComponentRow } from './header/switch-organization/switch-organization-row/switch-organization-row.component';\nimport { UiListSelectModule, UiConfirmationModule, UiFormModule } from '@xenon/ui';\n// import { UiListSelectModule } from '../../../../ui/src/lib/components/ui-list-select/ui-list-select.module';\n\n@NgModule({\n  declarations: [\n    MainLayoutComponent,\n    SidebarComponent,\n    HeaderComponent,\n    SwitchOrganizationComponent,\n    SwitchOrganizationComponentRow,\n    EditOrganizationNameDialogComponent,\n    EditOrganizationLogoDialogComponent,\n  ],\n  imports: [\n    // Core Modules\n    CommonModule,\n    RouterModule,\n\n    // Third Party Modules\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    FlexLayoutModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n\n    // In House Modules\n    UiListSelectModule,\n    UiConfirmationModule,\n    UiFormModule,\n  ],\n  exports: [\n    // Components\n    MainLayoutComponent,\n  ],\n})\nexport class MainLayoutModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { AppList } from '@xenon/auth';\n\nexport interface SidebarItem {\n  active: boolean;\n  name: string;\n  title: string;\n  icon: string;\n}\n\n@Component({\n  selector: 'xenon-sidebar',\n  template: `\n    <mat-list>\n      <ng-container *ngFor=\"let item of items\">\n        <mat-list-item [class.active]=\"item.active\" *ngIf=\"item.hasAccess\">\n          <a class=\"nav-item nav-link\" (click)=\"setDocTitle(item.title)\" routerLink=\"{{ item.name }}\">\n            <mat-icon color=\"iconic\">{{ item.icon }}</mat-icon>\n            {{ item.title }}\n          </a>\n        </mat-list-item>\n      </ng-container>\n    </mat-list>\n  `,\n})\nexport class SidebarComponent implements OnInit {\n  items: SidebarItem[] = [];\n\n  constructor(private titleService: Title, private router: Router, private localStorageService: UtilLocalStorageService) {\n    // This is for the new web setup\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.initMenuItems();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.initMenuItems();\n  }\n\n  // This is for the new web project setup.\n  private initMenuItems(): void {\n    this.items = this.localStorageService.getItem('menu');\n    this.items.forEach((item) => {\n      item.active = item.name === this.router.url.replace('/', '');\n    });\n  }\n\n  setDocTitle(title: string): void {\n    this.items.forEach((item) => {\n      item.active = item.title === title;\n    });\n    this.titleService.setTitle('Xenon App | ' + title);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiAuthenticationService, ApiUserService, User, LoggedInUser, ApiLocationService } from '@xenon/api';\nimport { UtilLocalStorageService, UtilWindowRefService } from '@xenon/utils';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUserStorageService {\n  constructor(\n    private apiUserService: ApiUserService,\n    private utilLocalStorageService: UtilLocalStorageService,\n    private authenticationService: ApiAuthenticationService,\n    private utilWindowRefService: UtilWindowRefService,\n    private apiLocationService: ApiLocationService\n  ) {}\n\n  public setCurrentUser(): Observable<boolean> {\n    const loggedInUser = this.utilLocalStorageService.getItem('user') as LoggedInUser;\n    const currentOrgID = loggedInUser.CurrentOrg.ID;\n    const currentLocationID = loggedInUser.CurrentLocation.ID;\n    const success: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    this.apiUserService\n      .getUser(loggedInUser.CurrentUser.ID)\n      .then((result: { Status: string; XenUser: User }) => {\n        const xenUser = result.XenUser;\n        //Check if user is logged into a location they are no longer a part of\n        if (result.XenUser.Orgs.some((org) => org.OrgID === currentOrgID)) {\n          const currentOrg = result.XenUser.Orgs.find((org) => org.OrgID === currentOrgID);\n          if (!currentOrg.RoleLocations.some((roleLocation) => roleLocation.LocationList.some((location) => location.ID === currentLocationID))) {\n            //switch location within org\n            this.apiLocationService\n              .switchLocation(xenUser.PrimaryLocationID)\n              .pipe(take(1))\n              .subscribe((newLoggedInUser) => {\n                this.utilLocalStorageService.setItem('user', newLoggedInUser);\n                success.next(true);\n              });\n          }\n        } else {\n          //switch org and location\n          this.apiLocationService\n            .switchLocation(xenUser.PrimaryLocationID)\n            .pipe(take(1))\n            .subscribe((newLoggedInUser) => {\n              this.utilLocalStorageService.setItem('user', newLoggedInUser);\n              success.next(true);\n            });\n        }\n        if (!success.value) {\n          const newLoggedInUser = { ...loggedInUser, CurrentUser: xenUser };\n          this.utilLocalStorageService.setItem('user', newLoggedInUser);\n          success.next(true);\n        }\n      })\n      .catch((err) => {\n        // log user out if their token has expired.\n        this.authenticationService.logout();\n        const origin = this.utilWindowRefService.nativeWindow.location.origin;\n        this.utilWindowRefService.nativeWindow.location.replace(`${origin}/#/login`);\n      });\n    return success;\n  }\n}\n","export enum TabTypes {\n  layout = 'layout',\n  tasks = 'tasks',\n  settings = 'settings',\n}\n","import { FormTemplateItem } from '@xenon/api';\n\nexport interface FormCategory {\n  ID: number;\n  Name: string;\n}\n\nexport enum RequirementType {\n  optional = 'Optional',\n  required = 'Required',\n}\n\nexport interface FormItemType {\n  key: string;\n  value: number;\n  icon: string;\n}\n\ninterface FormItemTypeEnum {\n  [key: string]: FormItemType;\n}\n\nexport const FormItemType: FormItemTypeEnum = {\n  singleLineText: { key: 'Single-Line Text', value: 1, icon: 'text_format' },\n  multiLineText: { key: 'Multi-Line Text', value: 2, icon: 'text_format' },\n  checkbox: { key: 'Checkbox', value: 3, icon: 'format_list_numbered' },\n  radio: { key: 'Radio', value: 4, icon: 'format_list_numbered' },\n  number: { key: 'Number', value: 5, icon: 'tag' },\n  date: { key: 'Date', value: 6, icon: 'event' },\n  dateTime: { key: 'Date & Time', value: 7, icon: 'event' },\n  fileUpload: { key: 'File Upload', value: 8, icon: 'photo_camera' },\n  time: { key: 'Time', value: 9, icon: 'event' },\n  dateRange: { key: 'Date Range', value: 10, icon: 'event' },\n  timeRange: { key: 'Time Range', value: 11, icon: 'event' },\n  dateTimeRange: { key: 'Date Time Range', value: 12, icon: 'event' },\n};\n\nexport const ItemTypes: FormItemTypeEnum = {\n  text: { key: 'Text', value: 1, icon: 'text_format' },\n  multipleChoice: { key: 'Multiple Choice', value: 3, icon: 'format_list_numbered' },\n  multimedia: { key: 'Multimedia', value: 8, icon: 'photo_camera' },\n};\n\n//Text\nexport enum TextDisplayType {\n  singleLine = 'Single-Line',\n  multipleLine = 'Multiple-Line',\n}\n\nexport interface TextFormItem extends FormTemplateItem {\n  displayType: TextDisplayType;\n  Placeholder: string;\n}\n\nexport enum NumberDecimalPlacesType {\n  zero = 0,\n  one = 1,\n  two = 2,\n  three = 3,\n  four = 4,\n  five = 5,\n  six = 6,\n}\n\nexport interface NumberFormItem extends FormTemplateItem {\n  Units: string;\n  Decimals: NumberDecimalPlacesType;\n  Placeholder: string;\n}\n\n//Date & Time\nexport enum DateDisplayType {\n  dateTime = 'Date & Time',\n  date = 'Date',\n  time = 'Time',\n  dateTimeRange = 'Date & Time Range',\n  dateRange = 'Date Range',\n  timeRange = 'Time Range',\n}\n\nexport interface DateTimeFormItem extends FormTemplateItem {\n  displayType: DateDisplayType;\n}\n\n//Multimedia\nexport interface MultimediaFormItem extends FormTemplateItem {\n  camera: boolean;\n  fileUpload: boolean;\n  photoTypeAllowed: boolean;\n  videoTypeAllowed: boolean;\n  pdfTypeAllowed: boolean;\n  documentAllowed: boolean;\n  spreadsheetAllowed: boolean;\n}\n\n//Multiple Choice\nexport enum MultipleChoiceDisplayType {\n  single = 'Single Response',\n  multiple = 'Multiple Response',\n}\n\nexport enum ResponseCountType {\n  zero = 0,\n  one = 1,\n  two = 2,\n  three = 3,\n  four = 4,\n  five = 5,\n}\n\nexport interface MultipleChoiceFormItem extends FormTemplateItem {\n  displayType: MultipleChoiceDisplayType;\n  ResponseMin: ResponseCountType;\n  ResponseMax: ResponseCountType;\n}\n","import { Injectable } from '@angular/core';\nimport { DriveFile, FormTemplate, User } from '@xenon/api';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormBuilderService {\n  newForm: FormTemplate = {\n    OrgID: 0,\n    LocationID: 0,\n    Name: 'New Form',\n    NamePlural: '',\n    Description: '',\n    DriveID: 0,\n    FormTemplateItemList: [],\n    AssignedRoles: [],\n  };\n\n  private currentFormSource = new BehaviorSubject<FormTemplate>(this.newForm);\n  currentForm = this.currentFormSource.asObservable();\n\n  // private lastSavedFormSource = new Subject<FormTemplate>();\n  // lastSavedForm = this.currentFormSource.asObservable();\n\n  private currentDriveListSource = new Subject<DriveFile[]>();\n  currentDriveList = this.currentDriveListSource.asObservable();\n\n  private user = new Subject<User>();\n  currentUser = this.user.asObservable();\n\n  constructor() {}\n\n  setFormTemplate(form: any) {\n    this.currentFormSource.next({\n      AssignedRoles: form.AssignedRoles,\n      Description: form.Description,\n      DriveID: form.DriveID,\n      FormCategoryID: form.FormCategoryID,\n      FormTemplateItemList: form.FormTemplateItemList,\n      ID: form.ID,\n      LocationID: form.LocationID,\n      Name: form.Name,\n      NamePlural: form.NamePlural,\n      OrgID: form.OrgID,\n    });\n  }\n\n  setCurrentUser(user: User) {\n    this.user.next(user);\n  }\n\n  setCurrentDriveList(driveList: DriveFile[]) {\n    this.currentDriveListSource.next(driveList);\n  }\n\n  // setLastSavedForm(form: FormTemplate) {\n  //   this.lastSavedFormSource.next(form);\n  // }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AppList, AppNavigationService } from '@xenon/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { takeUntil, map, mergeMap, take, filter } from 'rxjs/operators';\nimport { ApiDriveService, ApiFormService, ApiFormTemplateService, FormTemplate, Role, User, LoggedInUser } from '@xenon/api';\nimport { TabTypes } from './enums/tab-types';\nimport { FormBuilderService } from './services/form-builder.service';\nimport { NotificationType, UiNotificationService } from '@xenon/ui';\nimport { CurrentUserStorageService } from '../services/current-user-storage.service';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-sub-layout',\n  templateUrl: './sub-layout.component.html',\n  styleUrls: ['./sub-layout.component.scss'],\n})\nexport class SubLayoutComponent implements OnInit, OnDestroy {\n  currentForm: FormTemplate;\n  tabTypes = TabTypes;\n  tabTypesList = [TabTypes.layout, TabTypes.tasks, TabTypes.settings];\n  selectedTabName: string = this.tabTypes.layout;\n  locationPath = 'layout';\n\n  user: LoggedInUser; //TODO move this to formBuilderService.\n  locationId: number;\n  formId: number;\n\n  unsubscribe = new Subject<{}>();\n\n  public loadedCurrentUser: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(\n    private appNavigationService: AppNavigationService,\n    private formBuilderService: FormBuilderService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiFormTemplateService: ApiFormTemplateService,\n    private apiFormService: ApiFormService,\n    private apiDriveService: ApiDriveService,\n    public notificationService: UiNotificationService,\n    public currentUserStorage: CurrentUserStorageService,\n    private localStorage: UtilLocalStorageService\n  ) {\n    currentUserStorage\n      .setCurrentUser()\n      .pipe(\n        filter((result) => result),\n        take(1)\n      )\n      .subscribe((_) => {\n        this.loadedCurrentUser.next(true);\n      });\n  }\n\n  ngOnInit(): void {\n    this.setRoutePath(this.router.url);\n    this.getCurrentUser();\n    this.getOrCreateForm();\n    this.getCurrentForm();\n\n    // this.formBuilderService.lastSavedForm\n    //   .pipe(takeUntil(this.unsubscribe))\n    //   .subscribe((form) => {\n    //     this.lastSavedForm = form;\n    //   });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  getOrCreateForm() {\n    this.route.queryParams.pipe(takeUntil(this.unsubscribe)).subscribe((params) => {\n      this.formId = params.id;\n\n      if (params.action === 'create') {\n        this.createNewFormAndRedirect(1); //TODO Find where FormCategoryID comes from.\n      } else if (this.formId) {\n        this.fetchCurrentForm();\n      }\n    });\n  }\n\n  fetchCurrentForm() {\n    this.apiFormTemplateService.getFormTemplateById(this.formId).subscribe((response) => {\n      if (response.Status === 'success') {\n        this.formBuilderService.setFormTemplate(response.FormTemplate);\n      } else if (response.Status === 'error') {\n        this.notificationService.show(NotificationType.success, 'ERROR', response.Message, 5000);\n      }\n    });\n  }\n\n  getCurrentForm() {\n    this.formBuilderService.currentForm\n      .pipe(\n        takeUntil(this.unsubscribe),\n        map((form) => {\n          this.currentForm = form;\n          this.locationId = form.LocationID;\n          const orgID = form.OrgID;\n          return orgID;\n        }),\n        mergeMap((orgID) => this.apiDriveService.getDriveFilesByOrg(orgID))\n      )\n      .subscribe((response) => {\n        this.formBuilderService.setCurrentDriveList(response);\n      });\n  }\n\n  getCurrentUser() {\n    const savedUser = this.localStorage.getItem('user');\n    this.user = savedUser;\n    this.formBuilderService.setCurrentUser(savedUser.CurrentUser);\n  }\n\n  createNewFormAndRedirect(formCategoryId: number) {\n    const formTemplate = {\n      OrgID: this.user.CurrentOrg.ID,\n      LocationID: this.locationId,\n      Name: 'New Form',\n      Description: '',\n      FormCategoryID: formCategoryId,\n      CreatedBy: this.user.CurrentUser.ID,\n    };\n\n    this.apiFormTemplateService.createFormTemplate(formTemplate).subscribe((response) => {\n      if (response.Status === 'success') {\n        this.router.navigate(['/layout'], {\n          queryParams: { id: response.NewFormTemplate.ID },\n          replaceUrl: true,\n        });\n      } else if (response.Status === 'error') {\n        this.notificationService.show(NotificationType.error, 'ERROR', response.Message, 5000);\n      }\n    });\n  }\n\n  selectTab(tabName: string): void {\n    this.selectedTabName = tabName;\n  }\n\n  navigateToAdmin() {\n    this.appNavigationService.navigateToApp(AppList.Admin, `form-templates`);\n  }\n\n  // TODO Add a success error notification\n  saveForm() {\n    const formData = {\n      ID: this.currentForm.ID,\n      Name: this.currentForm.Name,\n      NamePlural: this.currentForm.NamePlural,\n      Description: this.currentForm.Description,\n      DriveID: this.currentForm.DriveID ? this.currentForm.DriveID : 0,\n      FormCategoryID: this.currentForm.FormCategoryID,\n    };\n\n    if (this.currentForm.FormTemplateItemList) {\n      this.currentForm.FormTemplateItemList.forEach((item) => {\n        const newItem = { ...item, DriveID: item.DriveID ? item.DriveID : 0 };\n\n        //Save form fields\n        this.apiFormService.updateItem(newItem.ID, newItem).subscribe((_) => {});\n      });\n\n      //Save form field options\n      this.currentForm.FormTemplateItemList.forEach((item) => {\n        item.FormTemplateItemOptions.forEach((itemOption) => {\n          this.apiFormService.updateItemOption(itemOption).subscribe((_) => {});\n        });\n      });\n    }\n\n    //Delete old roles and save new ones\n    //We have to do this because there is no update method for roles.\n    if (this.currentForm.AssignedRoles && this.currentForm.AssignedRoles.length > 0) {\n      this.apiFormTemplateService.getFormTemplateById(this.formId).subscribe((response) => {\n        const savedRoles = response['FormTemplate'].AssignedRoles;\n\n        //delete existing roles.\n        if (savedRoles && savedRoles.length > 0) {\n          savedRoles.forEach((role) => {\n            this.deleteRole(role);\n          });\n        }\n\n        this.saveNewRoles(this.currentForm.AssignedRoles);\n      });\n    }\n\n    //Save form\n    this.apiFormTemplateService\n      .updateFormTemplate(formData)\n      .pipe(take(1))\n      .subscribe((_) => {\n        this.notificationService.show(NotificationType.success, 'Action done', 'Form template saved', 2500);\n      });\n  }\n\n  deleteRole(role: Role) {\n    this.apiFormService\n      .deleteFormTemplateRole(this.currentForm.ID, role.ID)\n      .pipe(take(1))\n      .subscribe((_) => {});\n  }\n\n  saveNewRoles(roles: Role[]) {\n    roles.forEach((role) => {\n      this.apiFormService\n        .addFormTemplateRole(this.currentForm.ID, role.ID)\n        .pipe(take(1))\n        .subscribe((_) => {});\n    });\n  }\n\n  setRoutePath(locationPath: any) {\n    const pathMatch = this.tabTypesList.findIndex((t) => {\n      const index = locationPath.indexOf(t);\n      return index > -1 ? true : false;\n    });\n\n    if (pathMatch) {\n      this.selectTab(this.tabTypesList[pathMatch]);\n    } else {\n      this.selectTab(TabTypes.layout);\n    }\n  }\n}\n","<div *ngIf=\"loadedCurrentUser | async\">\n  <nav>\n    <div class=\"header\">\n      <div class=\"title\">\n        <h5>\n          <mat-icon class=\"clickable\" (click)=\"navigateToAdmin()\">\n            keyboard_arrow_left\n          </mat-icon>\n          {{ currentForm.Name }}\n        </h5>\n      </div>\n      <div class=\"actions text-right\">\n        <!-- <button class=\"discard\" mat-button>DISCARD CHANGES</button> -->\n        <button mat-raised-button (click)=\"saveForm()\">Publish <mat-icon>flight</mat-icon></button>\n      </div>\n    </div>\n    <div class=\"tabs\">\n      <button\n        class=\"tab\"\n        [class.selected]=\"selectedTabName === tabTypes.layout\"\n        routerLink=\"/admin/form-builder/layout\"\n        [queryParams]=\"{ form: formId }\"\n        queryParamsHandling=\"merge\"\n        (click)=\"selectTab(tabTypes.layout)\"\n      >\n        Layout\n      </button>\n      <button\n        class=\"tab\"\n        [class.selected]=\"selectedTabName === tabTypes.tasks\"\n        routerLink=\"/admin/form-builder/tasks\"\n        [queryParams]=\"{ form: formId }\"\n        queryParamsHandling=\"merge\"\n        (click)=\"selectTab(tabTypes.tasks)\"\n      >\n        Tasks\n      </button>\n      <button\n        class=\"tab\"\n        [class.selected]=\"selectedTabName === tabTypes.settings\"\n        routerLink=\"/admin/form-builder/settings\"\n        [queryParams]=\"{ form: formId }\"\n        queryParamsHandling=\"merge\"\n        (click)=\"selectTab(tabTypes.settings)\"\n      >\n        Settings\n      </button>\n      <div class=\"top-border\"></div>\n    </div>\n  </nav>\n  <router-outlet></router-outlet>\n</div>\n\n<!-- {{ currentForm | json }} -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { SubLayoutComponent } from './sub-layout.component';\n\n@NgModule({\n  declarations: [SubLayoutComponent],\n  exports: [SubLayoutComponent],\n  imports: [\n    // Core Modules\n    CommonModule,\n    RouterModule,\n\n    // Third Party Modules\n    DragDropModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n})\nexport class SubLayoutModule {}\n","export * from './lib/ui.module';\n\nexport * from './lib/services/ui-notification.service';\nexport * from './lib/services/ui-scroll.service';\n\nexport * from './lib/components/ui-calendar-datepicker/ui-calendar-datepicker.component';\nexport * from './lib/components/ui-chart-donut/ui-chart-donut.component';\nexport * from './lib/components/ui-date-range-picker/ui-date-range-picker.component';\nexport * from './lib/components/ui-string-search/ui-string-search.component';\n\nexport * from './lib/ui-form/ui-form.module';\n\nexport * from './lib/ui-form/models/ui-form-field-base';\nexport * from './lib/ui-form/models/ui-form-field-input';\nexport * from './lib/ui-form/models/ui-form-field-image-upload';\nexport * from './lib/ui-form/models/ui-form-field-select';\nexport * from './lib/ui-form/models/ui-form-field-select-option';\nexport * from './lib/ui-form/models/ui-form-field-text-area';\n\nexport * from './lib/ui-form/enums/ui-form-field-type.enum';\nexport * from './lib/ui-form/enums/ui-form-field-validator.enum';\n\nexport * from './lib/ui-form/services/ui-form.service';\n\nexport * from './lib/ui-form/components/ui-form-field-input/ui-form-field-input.component';\nexport * from './lib/ui-form/components/ui-form-field-select/ui-form-field-select.component';\nexport * from './lib/ui-form/components/ui-form-field-text-area/ui-form-field-text-area.component';\nexport * from './lib/ui-form/components/ui-form-field-table/ui-form-field-table.component';\n\nexport * from './lib/modules/ui-prompt/ui-prompt.module';\nexport * from './lib/modules/ui-prompt/components/ui-prompt/ui-prompt.component';\nexport * from './lib/modules/ui-prompt/services/ui-prompt.service';\n\nexport * from './lib/components/ui-user-photo/ui-user-photo.module';\nexport * from './lib/components/ui-fields/ui-fields.module';\nexport * from './lib/components/ui-list-select/ui-list-select.module';\nexport * from './lib/components/ui-list-select/ui-list-select.service';\n\nexport * from './lib/components/ui-task-templates/ui-task-templates.module';\nexport * from './lib/components/ui-task-templates/edit-task-template/edit-task-template.component';\n\nexport * from './lib/components/ui-user-form/ui-user-form.module';\nexport * from './lib/components/ui-user-form/ui-user-form.component';\nexport * from './lib/components/ui-user-form/change-password/change-password.component';\n\nexport * from './lib/components/ui-confirmation/ui-confirmation.component';\n\nexport * from './lib/components/ui-confirmation/ui-confirmation.module';\nexport * from './lib/components/ui-expanding-input/ui-expanding-input.module';\nexport * from './lib/components/ui-user-terms-document/ui-user-terms-document.module';\nexport * from './lib/components/ui-side-nav-layout/ui-side-nav-layout.module';\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { NgbCalendar, NgbDatepicker, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'xenon-ui-calendar-datepicker',\n  styleUrls: ['./ui-calendar-datepicker.component.scss'],\n  template: `\n    <ngb-datepicker #dp [(ngModel)]=\"selectedDate\" (dateSelect)=\"changeLocation()\" [dayTemplate]=\"customDay\"> </ngb-datepicker>\n    <ng-template #customDay let-date let-currentMonth=\"currentMonth\" let-today=\"today\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <span\n        class=\"custom-day\"\n        [class.focused]=\"focused\"\n        [class.selected]=\"selected\"\n        [class.today]=\"today\"\n        [class.current-month]=\"currentMonth\"\n        [class.not-current-month]=\"date.month !== currentMonth\"\n        [class.text-muted]=\"disabled\"\n      >\n        {{ date.day }}\n      </span>\n    </ng-template>\n  `,\n})\nexport class UiCalendarDatepickerComponent implements OnChanges {\n  @Input() selectedDate: NgbDateStruct;\n  @Output() dateChange = new EventEmitter<NgbDateStruct>();\n\n  @ViewChild('dp', { static: true }) datepicker: NgbDatepicker;\n\n  changeLocation(): void {\n    this.dateChange.emit(this.selectedDate);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes && changes.selectedDate && changes.selectedDate.currentValue) {\n      const targetDate = changes.selectedDate.currentValue;\n      this.datepicker.navigateTo({\n        year: targetDate.year,\n        month: targetDate.month,\n        day: targetDate.day,\n      });\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ChartEvent, ChartType } from 'ng-chartist';\nimport * as Chartist from 'chartist';\n\nexport interface Chart {\n  type: ChartType;\n  data: Chartist.IChartistData;\n  options?: any;\n  responsiveOptions?: any;\n  events?: ChartEvent;\n}\n\n@Component({\n  selector: 'xenon-ui-chart-donut',\n  template: `\n    <div class=\"pie-chart\" *ngIf=\"chart\">\n      <x-chartist\n        [data]=\"chart.data\"\n        [type]=\"chart.type\"\n        [options]=\"chart.options\"\n        [responsiveOptions]=\"chart.responsiveOptions\"\n        [events]=\"chart.events\"\n      >\n      </x-chartist>\n    </div>\n  `,\n})\nexport class UiChartDonutComponent {\n  @Input() chart: Chart;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ConfirmationDialogOptions {\n  title: string;\n  description?: string;\n  acceptMessage?: string;\n  declineMessage?: string;\n  showDecline?: boolean;\n}\n\n@Component({\n  selector: 'xenon-ui-confirmation',\n  styleUrls: ['./ui-confirmation.component.scss'],\n  template: `\n    <p class=\"text-subtitle1\">{{ dialogData.title }}</p>\n    <p class=\"text-body1\">{{ dialogData.description }}</p>\n    <div fxLayoutAlign=\"space-between\" class=\"pt-4\">\n      <button *ngIf=\"dialogData.showDecline\" mat-flat-button (click)=\"dialogRef.close(false)\">{{ dialogData.declineMessage }}</button>\n      <button mat-flat-button color=\"primary\" (click)=\"dialogRef.close(true)\">{{ dialogData.acceptMessage }}</button>\n    </div>\n  `,\n})\nexport class UiConfirmationComponent {\n  constructor(\n    public dialogRef: MatDialogRef<UiConfirmationComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public dialogData: ConfirmationDialogOptions = {\n      title: 'Untitled',\n      description: '',\n      acceptMessage: 'Save',\n      declineMessage: 'Close',\n      showDecline: true,\n    }\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UiConfirmationComponent } from './ui-confirmation.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, FlexLayoutModule],\n  declarations: [UiConfirmationComponent],\n  exports: [UiConfirmationComponent],\n})\nexport class UiConfirmationModule {}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'xenon-ui-date-range-picker',\n  styleUrls: ['./ui-date-range-picker.component.scss'],\n  template: `\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Date range</mat-label>\n      <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\" />\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\n      </mat-date-range-input>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker #picker></mat-date-range-picker>\n    </mat-form-field>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UiDateRangePickerComponent implements OnInit {\n  @Input() dateRange: { start: Date; end: Date };\n  @Output() rangeChange = new EventEmitter<{ start: Date; end: Date }>();\n\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.range.controls.start.setValue(this.dateRange.start);\n    this.range.controls.end.setValue(this.dateRange.end);\n    this.range.valueChanges.subscribe((x: { start: Date; end: Date }) => {\n      if (x.start && x.end) {\n        this.rangeChange.emit(x);\n      }\n    });\n  }\n}\n","import { Component, ElementRef, ViewChild, Input, AfterViewInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'xenon-ui-expanding-input',\n  styleUrls: ['./ui-expanding-input.component.scss'],\n  template: `\n    <div #divToMeasure class=\"w-100\">\n      <mat-form-field [floatLabel]=\"floatLabel\" [ngStyle]=\"{ 'width.px': width }\" [ngClass]=\"formFieldClasses\">\n        <input\n          autocomplete=\"off\"\n          #elasticInput\n          matInput\n          (input)=\"resize()\"\n          [disabled]=\"disabled\"\n          [placeholder]=\"placeholder\"\n          (blur)=\"fieldValue.emit(elasticInput.value)\"\n          [value]=\"startValue\"\n        />\n      </mat-form-field>\n      <span #hiddenText style=\"visibility: hidden; white-space: pre; position: absolute;\">{{ elasticInput.value }}</span>\n    </div>\n  `,\n})\nexport class UiExpandingInputComponent implements AfterViewInit {\n  @ViewChild('hiddenText') textEl: ElementRef;\n  @ViewChild('divToMeasure') divToMeasureElement: ElementRef;\n  @Output() fieldValue = new EventEmitter<string>();\n  @Input() startValue = '';\n  @Input() minWidth = 100;\n  @Input() formFieldClasses: string[];\n  @Input() disabled = false;\n  @Input() placeholder: string;\n  @Input() floatLabel = 'always';\n\n  public width: number;\n  public maxWidth: number;\n\n  public ngAfterViewInit(): void {\n    this.maxWidth = this.divToMeasureElement.nativeElement.offsetWidth;\n    this.resize();\n  }\n\n  public resize(): void {\n    setTimeout(() => {\n      const calcMaxWidth = Math.max(this.minWidth, this.textEl.nativeElement.offsetWidth);\n      this.width = calcMaxWidth >= this.maxWidth ? this.maxWidth : calcMaxWidth;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UiExpandingInputComponent } from './ui-expanding-input.component';\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, FormsModule, ReactiveFormsModule, MatInputModule, FlexLayoutModule],\n  declarations: [UiExpandingInputComponent],\n  exports: [UiExpandingInputComponent],\n})\nexport class UiExpandingInputModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApiUserService, Task, User } from '@xenon/api';\nimport { UiListSelectDialogService } from '../../ui-list-select/ui-list-select.service';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'xenon-ui-fields-assignments',\n  styleUrls: ['./ui-fields-assignments.component.scss'],\n  template: ` <div fxLayoutAlign=\"space-between\">\n      <span>\n        <h6 class=\"text-subtitle1 mb-1\" id=\"assignments\">Assignments</h6>\n        <p class=\"text-caption2\">\n          Select default assignments for a newly created task. The selected individual must be active in the task’s location at the time of creation to be\n          assigned.\n        </p>\n      </span>\n      <button mat-icon-button (click)=\"fieldExpanded = !fieldExpanded\">\n        <mat-icon>{{ fieldExpanded ? 'expand_more' : 'expand_less' }}</mat-icon>\n      </button>\n    </div>\n    <div [ngClass]=\"fieldExpanded ? 'display-block' : 'display-none'\">\n      <div *ngIf=\"selectedUsers | async as selectedUsers\">\n        <div class=\"list-row\" fxLayoutAlign=\"space-between center\" *ngFor=\"let user of selectedUsers\">\n          <div fxLayoutAlign=\"start center\">\n            <xenon-ui-user-photo class=\"mt--30\" [userArray]=\"[user]\"></xenon-ui-user-photo>\n            <p class=\"mb-0 text-body1 ml-3\">{{ user.FirstName + ' ' + user.LastName }}</p>\n          </div>\n          <button (click)=\"removeUser(user)\" mat-icon-button>\n            <mat-icon>cancel</mat-icon>\n          </button>\n        </div>\n      </div>\n      <button mat-button (click)=\"addUser()\" class=\"text-left color-primary mt-3 p-0\">\n        <mat-icon class=\"mr-3\">add_circle_outline</mat-icon>\n        Add Individual\n      </button>\n    </div>`,\n})\nexport class UiFieldsAssignmentsComponent {\n  @Input() set selectedTask(tasksByDate: Task) {\n    this.selectedOrgID = tasksByDate.OrgID;\n    this.selectedUsers.next(tasksByDate.AssignedUsers);\n  }\n  @Output() newUserList = new EventEmitter<User[]>();\n  allUsersList: User[];\n  selectedUsers: BehaviorSubject<User[]> = new BehaviorSubject([]);\n  currentUser: User;\n  showInput = false;\n  selectedOrgID: number;\n\n  fieldExpanded = true;\n\n  constructor(\n    private apiUserService: ApiUserService,\n    private utilLocalStorageService: UtilLocalStorageService,\n    private uiListSelectService: UiListSelectDialogService<User>\n  ) {\n    this.currentUser = this.utilLocalStorageService.getItem('user').CurrentUser;\n  }\n\n  emitList(): void {\n    this.newUserList.emit(this.selectedUsers.value);\n  }\n\n  addUser() {\n    this.apiUserService.getUsersByOrganization(this.selectedOrgID).subscribe((userList: User[]) => {\n      this.uiListSelectService.open({\n        inputList: userList,\n        currentSelectedList: this.selectedUsers.value,\n        primaryValueSelector1: 'FirstName',\n        primaryValueSelector2: 'LastName',\n        secondaryValueSelector: 'JobTitle',\n        compareValueBy: 'ID',\n        displayUserImage: true,\n      });\n\n      this.uiListSelectService.closed().subscribe((selectedUsers) => {\n        if (!selectedUsers) return;\n        this.selectedUsers.next(selectedUsers);\n        this.emitList();\n      });\n    });\n  }\n\n  removeUser(user: User) {\n    this.selectedUsers.next(this.selectedUsers.value.filter((selectedUser) => selectedUser.ID !== user.ID));\n    this.emitList();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ApiLocationService, User, Location, Task, LoggedInUser } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { BehaviorSubject } from 'rxjs';\n// import { UiListSelectDialogService } from '../../ui-list-select/ui-list-select.service';\n\n@Component({\n  selector: 'xenon-ui-fields-organizations',\n  styleUrls: ['./ui-fields-organizations.component.scss'],\n  template: ` <div fxLayoutAlign=\"space-between\">\n      <span>\n        <h6 class=\"text-subtitle1 mb-1\" id=\"locations\">Locations</h6>\n        <p class=\"text-caption2\">Assign this recurring task to all locations in the following organizations:</p>\n      </span>\n      <button mat-icon-button (click)=\"fieldExpanded = !fieldExpanded\">\n        <mat-icon>{{ fieldExpanded ? 'expand_more' : 'expand_less' }}</mat-icon>\n      </button>\n    </div>\n    <div [ngClass]=\"fieldExpanded ? 'display-block' : 'display-none'\">\n      <mat-form-field floatLabel=\"never\" class=\"w-100 pr-50\">\n        <mat-select (valueChange)=\"this.newOrganizationList.emit($event.ID)\" [value]=\"selectedLocation\">\n          <mat-option *ngFor=\"let location of allLocations\" [value]=\"location\">{{ location.Name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <!-- CODE FOR WHEN ASSIGNING MULTIPLE LOCATIONS IS AVAILABLE -->\n      <!-- <div *ngIf=\"selectedOrganizations | async as selectedOrg\">\n        <div class=\"list-row\" fxLayoutAlign=\"space-between center\" *ngFor=\"let organization of selectedOrg\">\n          <div fxLayoutAlign=\"start center\">\n            <mat-icon>domain</mat-icon>\n            <p class=\"mb-0 text-body1 ml-3\">{{ organization.Name }}</p>\n          </div>\n          <button (click)=\"removeOrganization(organization)\" mat-icon-button>\n            <mat-icon>cancel</mat-icon>\n          </button>\n        </div>\n      </div>\n      <button mat-button (click)=\"addOrganization()\" class=\"text-left color-primary mt-3  p-0\">\n        <mat-icon class=\"mr-3\">add_circle_outline</mat-icon>\n        Add Location\n      </button> -->\n    </div>`,\n})\nexport class UiFieldsOrganizationsComponent {\n  @Input() selectedTask: Task;\n  @Output() newOrganizationList = new EventEmitter<number>();\n  allLocations: Location[];\n  selectedLocation: Location;\n  selectedOrganizations: BehaviorSubject<Location[]> = new BehaviorSubject([]);\n  currentUser: LoggedInUser;\n  showInput = false;\n\n  fieldExpanded = true;\n\n  constructor(\n    private apiLocationService: ApiLocationService,\n    private utilLocalStorageService: UtilLocalStorageService // CODE FOR WHEN ASSIGNING MULTIPLE LOCATIONS IS AVAILABLE // private uiListSelectService: UiListSelectDialogService<Location>\n  ) {\n    this.currentUser = this.utilLocalStorageService.getItem('user');\n    this.apiLocationService.getLocationsByOrgId(this.currentUser.CurrentOrg.ID).subscribe((locations: Location[]) => {\n      this.allLocations = locations;\n      if (this.selectedTask.LocationID) {\n        this.selectedLocation = this.allLocations.find((allLoc) => allLoc.ID === this.selectedTask.LocationID);\n      }\n    });\n  }\n\n  // CODE FOR WHEN ASSIGNING MULTIPLE LOCATIONS IS AVAILABLE\n  // emitList(): void {\n  //   this.newOrganizationList.emit(this.selectedOrganizations.value);\n  // }\n\n  // addOrganization() {\n  //   this.apiLocationService.getLocationsByOrgId(this.currentUser.OrgID).subscribe((locations: Location[]) => {\n  // this.uiListSelectService.open({\n  //   inputList: locations,\n  //   currentSelectedList: this.selectedOrganizations.value,\n  //   primaryValueSelector1: 'Name',\n  //   compareValueBy: 'ID',\n  //   iconClass: 'domain',\n  // });\n\n  // this.uiListSelectService.closed().subscribe((selectedOrgs) => {\n  //   if (!selectedOrgs) return;\n  //   this.selectedOrganizations.next(selectedOrgs);\n  //   this.emitList();\n  // });\n  //   });\n  // }\n\n  // removeOrganization(org: Location) {\n  //   this.selectedOrganizations.next(this.selectedOrganizations.value.filter((selectedOrg) => selectedOrg.ID !== org.ID));\n  //   this.emitList();\n  // }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApiRoleService, Role, Task, User, LoggedInUser } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { BehaviorSubject } from 'rxjs';\nimport { UiListSelectDialogService } from '../../ui-list-select/ui-list-select.service';\n\n@Component({\n  selector: 'xenon-ui-fields-permissions',\n  styleUrls: ['./ui-fields-permissions.component.scss'],\n  template: ` <div fxLayoutAlign=\"space-between\">\n      <span>\n        <h6 class=\"text-subtitle1 mb-1\" id=\"permissions\">Permissions</h6>\n        <p class=\"text-caption2\">Select roles that are allowed to complete this task.</p>\n      </span>\n      <button mat-icon-button (click)=\"fieldExpanded = !fieldExpanded\">\n        <mat-icon>{{ fieldExpanded ? 'expand_more' : 'expand_less' }}</mat-icon>\n      </button>\n    </div>\n    <div [ngClass]=\"fieldExpanded ? 'display-block' : 'display-none'\">\n      <div *ngIf=\"selectedRoles | async as selectedRoles\">\n        <div class=\"list-row\" fxLayoutAlign=\"space-between center\" *ngFor=\"let role of selectedRoles\">\n          <div fxLayoutAlign=\"start center\">\n            <mat-icon>person_outline</mat-icon>\n            <p class=\"mb-0 text-body1 ml-3\">{{ role.Name }}</p>\n          </div>\n          <button (click)=\"removeRole(role)\" mat-icon-button>\n            <mat-icon>cancel</mat-icon>\n          </button>\n        </div>\n      </div>\n      <button mat-button [disabled]=\"!taskRoles && !taskRoles.length\" (click)=\"addRole()\" class=\"text-left color-primary mt-3 p-0\">\n        <mat-icon class=\"mr-3\">add_circle_outline</mat-icon>\n        Add Role\n      </button>\n    </div>`,\n})\nexport class UiFieldsPermissionsComponent {\n  @Input() set selectedTask(tasksByDate: Task) {\n    this.selectedRoles.next(tasksByDate.AssignedRoles);\n  }\n  @Output() newRoleList = new EventEmitter<Role[]>();\n  selectedRoles: BehaviorSubject<Role[]> = new BehaviorSubject(null);\n  taskRoles: Role[] = [];\n  loggedInUser: LoggedInUser;\n  showInput = false;\n\n  fieldExpanded = true;\n\n  constructor(\n    private apiRoleService: ApiRoleService,\n    private utilLocalStorageService: UtilLocalStorageService,\n    private uiListSelectService: UiListSelectDialogService<Role>\n  ) {\n    this.loggedInUser = this.utilLocalStorageService.getItem('user');\n  }\n\n  emitList(): void {\n    this.newRoleList.emit(this.selectedRoles.value);\n  }\n\n  addRole() {\n    this.apiRoleService.getRolesByOrg(this.loggedInUser.CurrentOrg.ID).subscribe((response) => {\n      this.uiListSelectService.open({\n        inputList: response.OrgRoleList,\n        currentSelectedList: this.selectedRoles.value,\n        primaryValueSelector1: 'Name',\n        compareValueBy: 'ID',\n        iconClass: 'person_outline',\n      });\n\n      this.uiListSelectService.closed().subscribe((selectedUsers) => {\n        if (!selectedUsers) return;\n        this.selectedRoles.next(selectedUsers);\n        this.emitList();\n      });\n    });\n  }\n\n  removeRole(role: Role) {\n    this.selectedRoles.next(this.selectedRoles.value.filter((selectedRole) => selectedRole.ID !== role.ID));\n    this.emitList();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UiFieldsOrganizationsComponent } from './ui-fields-organizations/ui-fields-organizations.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatInputModule } from '@angular/material/input';\nimport { UiFieldsPermissionsComponent } from './ui-fields-permissions/ui-fields-permissions.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UiListSelectModule } from '../ui-list-select/ui-list-select.module';\nimport { UiUserPhotoModule } from '../ui-user-photo/ui-user-photo.module';\nimport { UiFieldsAssignmentsComponent } from './ui-fields-assignments/ui-fields-assignments.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    FormsModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    NgbModule,\n    MatInputModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    UiUserPhotoModule,\n    UiListSelectModule,\n  ],\n  declarations: [UiFieldsOrganizationsComponent, UiFieldsPermissionsComponent, UiFieldsAssignmentsComponent],\n  exports: [UiFieldsOrganizationsComponent, UiFieldsPermissionsComponent, UiFieldsAssignmentsComponent],\n})\nexport class UiFieldsModule {}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport * as _ from 'lodash-es';\n\nexport interface UiListSelectOptions<T> {\n  inputList: T[];\n  currentSelectedList?: T[];\n  primaryValueSelector1: string;\n  primaryValueSelector2?: string;\n  secondaryValueSelector?: string;\n  compareValueBy: string;\n  displayUserImage?: boolean;\n  iconClass?: string;\n}\n\n@Component({\n  selector: 'xenon-ui-list-select',\n  styleUrls: ['./ui-list-select.component.scss'],\n  template: `\n    <form class=\"expand-form-line-past-dialog-padding\">\n      <mat-form-field class=\"w-100 mt--17\" floatLabel=\"never\">\n        <input type=\"text\" placeholder=\"Search\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\" />\n        <mat-autocomplete #auto=\"matAutocomplete\"> </mat-autocomplete>\n      </mat-form-field>\n    </form>\n    <mat-dialog-content class=\"mt--17 h-100\">\n      <div class=\"scroll-area\">\n        <p class=\"text-caption2 mt-2 mb-0\">Selected</p>\n        <mat-action-list>\n          <button mat-list-item (click)=\"removeItemFromList(item)\" *ngFor=\"let item of selectedList | async\" class=\"ml--23\">\n            <div fxLayout=\"row\" class=\"w-100\">\n              <xenon-ui-user-photo class=\"mt--5\" *ngIf=\"data.displayUserImage; else icon\" [userArray]=\"[item]\"></xenon-ui-user-photo>\n              <div #icon *ngIf=\"data.iconClass\" fxLayoutAlign=\"center center\" class=\"icon background-primary\">\n                <mat-icon class=\"text-white\">{{ data.iconClass }}</mat-icon>\n              </div>\n              <span fxLayoutAlign=\"start\"\n                ><p class=\"text-body1 ml-3 mb-0\">{{ item[data.primaryValueSelector1] }}</p>\n                <p class=\"text-body1 ml-1 mb-0\" *ngIf=\"item[data.primaryValueSelector2]\">{{ item[data.primaryValueSelector2] }}</p></span\n              >\n            </div>\n            <p class=\"text-body1 no-wrap mb-0\" *ngIf=\"item[data.secondaryValueSelector]\">{{ item[data.secondaryValueSelector] }}</p>\n          </button>\n        </mat-action-list>\n\n        <mat-divider *ngIf=\"(selectedList | async).length > 0\" class=\"expand-past-dialog-padding\"></mat-divider>\n\n        <p class=\"text-caption2 mt-2 mb-0\">Available</p>\n        <mat-action-list>\n          <button mat-list-item (click)=\"addItemToList(item)\" *ngFor=\"let item of filteredList | async\" class=\"ml--23\">\n            <div fxLayout=\"row\" class=\"w-100\">\n              <xenon-ui-user-photo class=\"mt--5\" *ngIf=\"data.displayUserImage\" [borderPrimary]=\"false\" [userArray]=\"[item]\"></xenon-ui-user-photo>\n              <div #icon *ngIf=\"data.iconClass\" fxLayoutAlign=\"center center\" class=\"icon background-border-light\">\n                <mat-icon class=\"color-gray\">{{ data.iconClass }}</mat-icon>\n              </div>\n              <span fxLayoutAlign=\"start center\"\n                ><p class=\"text-body1 ml-3 mb-0\">{{ item[data.primaryValueSelector1] }}</p>\n                <p class=\"text-body1 ml-1 mb-0\" *ngIf=\"item[data.primaryValueSelector2]\">{{ item[data.primaryValueSelector2] }}</p></span\n              >\n            </div>\n            <p class=\"text-body1 no-wrap mb-0\" *ngIf=\"item[data.secondaryValueSelector]\">{{ item[data.secondaryValueSelector] }}</p>\n          </button>\n        </mat-action-list>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions fxLayoutAlign=\"space-between center\" class=\"p-0 border-top expand-past-dialog-padding\">\n      <p class=\"text-caption2 mb-0 ml-3 color-gray\">{{ (selectedList | async).length }} Assigned</p>\n      <span>\n        <button mat-button color=\"primary\" (click)=\"dialogRef.close()\">Cancel</button>\n        <button mat-button (click)=\"dialogRef.close(this.selectedList.getValue())\" color=\"primary\">Select</button>\n      </span>\n    </mat-dialog-actions>\n  `,\n})\nexport class UiListSelectComponent<T> implements OnInit {\n  @Output() selectedItems = new EventEmitter<T[]>();\n\n  filteredList: Observable<T[]>;\n  selectedList: BehaviorSubject<T[]> = new BehaviorSubject([]);\n  myControl = new FormControl();\n\n  constructor(public dialogRef: MatDialogRef<UiListSelectComponent<T>>, @Inject(MAT_DIALOG_DATA) public data: UiListSelectOptions<T>) {\n    this.filteredList = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map((value) => this._filter(value))\n    );\n  }\n\n  ngOnInit() {\n    if (!this.data.currentSelectedList) return;\n    if (this.data.currentSelectedList.length > 0)\n      this.data.currentSelectedList.forEach((element) => {\n        this.addItemToList(element);\n      });\n  }\n\n  addItemToList(item: T): void {\n    if (this.selectedList.getValue().length === 0) {\n      this.selectedList.next([item]);\n    } else {\n      this.selectedList.next([...this.selectedList.value, item]);\n    }\n    this.myControl.updateValueAndValidity({ onlySelf: false, emitEvent: true });\n  }\n\n  removeItemFromList(item: T): void {\n    this.selectedList.next(\n      this.selectedList.value.filter((selectedItem) => {\n        if (selectedItem !== item) {\n          return item;\n        }\n      })\n    );\n    this.myControl.updateValueAndValidity({ onlySelf: false, emitEvent: true });\n  }\n\n  private _filter(value: string): T[] {\n    if (!value) {\n      return this.data.inputList.filter((item) => {\n        if (!this.selectedList.value.some((selectedItem) => selectedItem[this.data.compareValueBy] === item[this.data.compareValueBy])) {\n          return item;\n        }\n      });\n    }\n    const filterValue = value.toLowerCase();\n\n    return this.data.inputList.filter((item) => {\n      if (\n        (item[this.data.primaryValueSelector1].toLowerCase().includes(filterValue) ||\n          (item[this.data.primaryValueSelector2] && item[this.data.primaryValueSelector2].toLowerCase().includes(filterValue))) &&\n        !this.selectedList.value.some((selectedItem) => selectedItem[this.data.compareValueBy] === item[this.data.compareValueBy])\n      ) {\n        return item;\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UiListSelectComponent } from './ui-list-select.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UiListSelectDialogService } from './ui-list-select.service';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UiUserPhotoModule } from '../ui-user-photo/ui-user-photo.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatDialogModule,\n    MatListModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    UiUserPhotoModule,\n  ],\n  declarations: [UiListSelectComponent],\n  exports: [UiListSelectComponent],\n  entryComponents: [UiListSelectComponent],\n  providers: [UiListSelectDialogService],\n})\nexport class UiListSelectModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { UiListSelectComponent, UiListSelectOptions } from './ui-list-select.component';\n\n@Injectable()\nexport class UiListSelectDialogService<T> {\n  constructor(private dialog: MatDialog) {}\n  dialogRef: MatDialogRef<UiListSelectComponent<T>>;\n\n  public open(options: UiListSelectOptions<T>) {\n    this.dialogRef = this.dialog.open(UiListSelectComponent, {\n      width: '711px',\n      maxHeight: '610px',\n      minHeight: '440px',\n      panelClass: 'custom-dialog-container',\n      data: {\n        inputList: options.inputList,\n        currentSelectedList: options.currentSelectedList,\n        primaryValueSelector1: options.primaryValueSelector1,\n        primaryValueSelector2: options.primaryValueSelector2,\n        secondaryValueSelector: options.secondaryValueSelector,\n        compareValueBy: options.compareValueBy,\n        displayUserImage: options.displayUserImage,\n        iconClass: options.iconClass,\n      },\n    }) as MatDialogRef<UiListSelectComponent<T>>;\n  }\n\n  public closed(): Observable<T[]> {\n    return this.dialogRef.afterClosed().pipe(\n      take(1),\n      map((res) => {\n        return res;\n      })\n    );\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface MenuOption {\n  selector: string;\n  title: string;\n  icon?: string;\n}\n\nexport interface LayoutOptions {\n  sideNavMenuOptions?: MenuOption[];\n  pageTitle?: string;\n  pageTitleInput?: boolean;\n  saveButton?: boolean;\n  moreVertMenuOptions?: MenuOption[];\n  navIsAnchor?: boolean;\n}\n\n@Component({\n  selector: 'xenon-ui-side-nav-layout',\n  styleUrls: ['./ui-side-nav-layout.component.scss'],\n  template: ` <div *ngIf=\"layoutOptions\" fxLayoutAlign=\"space-between center\" class=\"background-primary color-white w-100 py-2\">\n      <span fxLayoutAlign=\"start center\">\n        <button mat-icon-button class=\"mx-2\" (click)=\"backClick.emit()\"><mat-icon>arrow_back</mat-icon></button>\n        <mat-form-field *ngIf=\"layoutOptions.pageTitleInput; else display\">\n          <input matInput [value]=\"layoutOptions.pageTitle\" (change)=\"titleInputChange.emit($event.value)\" />\n        </mat-form-field>\n        <ng-template #display>\n          <h6 class=\"mb-0\">{{ layoutOptions.pageTitle }}</h6>\n        </ng-template>\n      </span>\n      <span fxLayout=\"row\">\n        <button *ngIf=\"layoutOptions.saveButton\" mat-button class=\"mx-2\" (click)=\"saveClick.emit()\">SAVE</button>\n        <div *ngIf=\"layoutOptions.moreVertMenuOptions\">\n          <mat-icon [matMenuTriggerFor]=\"menu\" class=\"mx-3 clickable\">more_vert</mat-icon>\n          <mat-menu #menu=\"matMenu\">\n            <button *ngFor=\"let item of layoutOptions.moreVertMenuOptions\" mat-menu-item (click)=\"vertMenuClick.emit(item.selector)\">\n              <mat-icon *ngIf=\"item.icon\" class=\"mr-2 material-icons-outlined\">{{ item.icon }}</mat-icon\n              >{{ item.title }}\n            </button>\n          </mat-menu>\n        </div>\n      </span>\n    </div>\n\n    <div fxLayout=\"row\" class=\"page-height background-white\">\n      <div *ngIf=\"layoutOptions.sideNavMenuOptions\" fxLayout=\"column\" fxFlex=\"15%\" class=\"h-100 side-nav\">\n        <mat-action-list class=\"pr-5\" *ngIf=\"layoutOptions.navIsAnchor; else links\">\n          <button *ngFor=\"let option of layoutOptions.sideNavMenuOptions\" mat-list-item class=\"nav-button\" (click)=\"goToFormField(option.selector)\">\n            <mat-icon *ngIf=\"option.icon\" class=\"mr-2 material-icons-outlined\">{{ option.icon }}</mat-icon\n            >{{ option.title }}\n          </button>\n        </mat-action-list>\n        <ng-template #links>\n          <mat-action-list class=\"pr-5\">\n            <button\n              *ngFor=\"let option of layoutOptions.sideNavMenuOptions\"\n              class=\"nav-button\"\n              [ngClass]=\"{ 'selected-nav': currentTab.value === option.selector }\"\n              mat-list-item\n              (click)=\"sideNavClicked(option.selector)\"\n            >\n              <mat-icon *ngIf=\"option.icon\" class=\"mr-2 material-icons-outlined\">{{ option.icon }}</mat-icon\n              >{{ option.title }}\n            </button>\n          </mat-action-list>\n        </ng-template>\n      </div>\n\n      <div class=\"w-100 overflow-y-auto\">\n        <ng-content></ng-content>\n      </div>\n    </div>`,\n})\nexport class UiSideNavLayoutComponent implements OnInit {\n  @Input() layoutOptions: LayoutOptions = {\n    sideNavMenuOptions: [],\n    pageTitle: 'empty',\n    pageTitleInput: false,\n    saveButton: false,\n    moreVertMenuOptions: [],\n    navIsAnchor: false,\n  };\n  @Output() sideNavClick = new EventEmitter<string>();\n  @Output() vertMenuClick = new EventEmitter<string>();\n  @Output() saveClick = new EventEmitter();\n  @Output() backClick = new EventEmitter();\n  @Output() titleInputChange = new EventEmitter<string>();\n\n  public currentTab: BehaviorSubject<string> = new BehaviorSubject(null);\n\n  constructor() {}\n\n  public ngOnInit(): void {\n    if (this.layoutOptions.sideNavMenuOptions) {\n      this.currentTab.next(this.layoutOptions.sideNavMenuOptions[0].selector);\n    }\n  }\n\n  public sideNavClicked(value: string): void {\n    this.currentTab.next(value);\n    this.sideNavClick.emit(value);\n  }\n\n  public goToFormField(location: string): void {\n    const element = document.getElementById(location);\n    element.scrollIntoView();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { UiSideNavLayoutComponent } from './ui-side-nav-layout.component';\n@NgModule({\n  declarations: [UiSideNavLayoutComponent],\n  imports: [CommonModule, FlexLayoutModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatIconModule, MatMenuModule, MatListModule],\n  exports: [UiSideNavLayoutComponent],\n})\nexport class UiSideNavLayoutModule {}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'xenon-ui-string-search',\n  template: `\n    <mat-form-field>\n      <mat-label>\n        {{ label }}\n      </mat-label>\n      <input matInput [(ngModel)]=\"searchString\" #searchInput />\n    </mat-form-field>\n  `,\n})\nexport class UiStringSearchComponent implements OnInit {\n  @Input() searchString: string;\n  @Input() label = 'Search';\n  @Input() debounceTime = 500;\n\n  @Output() searchChange = new EventEmitter<string>();\n\n  @ViewChild('searchInput', { static: true }) searchInput: ElementRef;\n\n  ngOnInit(): void {\n    fromEvent(this.searchInput.nativeElement, 'keyup')\n      .pipe(\n        map((event: any) => {\n          return event.target.value;\n        }),\n        debounceTime(this.debounceTime),\n        distinctUntilChanged()\n      )\n      .subscribe((text: string) => {\n        this.searchChange.emit(text);\n      });\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ApiTaskService, TaskTemplate, User, LoggedInUser } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface DialogOptions {\n  task: TaskTemplate;\n  newTask: boolean;\n  forceTemplate: 'Form' | 'Checklist';\n}\n\nexport interface TemplateInfo {\n  Name: string;\n  ID: number;\n}\n\nconst DISPLAY_TEMPLATES = [\n  { Name: 'Form', ID: 1 },\n  { Name: 'Checklist', ID: 2 },\n];\n\n@Component({\n  selector: 'xenon-edit-task-template',\n  templateUrl: './edit-task-template.component.html',\n  styleUrls: ['./edit-task-template.component.scss'],\n})\nexport class EditTaskTemplateComponent {\n  selectedTask: TaskTemplate;\n  taskType: BehaviorSubject<TemplateInfo> = new BehaviorSubject(null);\n  taskTypeList: TemplateInfo[];\n\n  saveData = false;\n  private loggedInUser: LoggedInUser;\n\n  public layoutOptions = {\n    sideNavMenuOptions: [\n      {\n        selector: 'locations',\n        title: 'Locations',\n      },\n      {\n        selector: 'recurrence',\n        title: 'Recurrence',\n      },\n      {\n        selector: 'permissions',\n        title: 'Permissions',\n      },\n    ],\n    pageTitle: 'Edit Task Template',\n    saveButton: true,\n    navIsAnchor: true,\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: DialogOptions,\n    public dialogRef: MatDialogRef<EditTaskTemplateComponent>,\n    private apiTaskService: ApiTaskService,\n    private localStorageService: UtilLocalStorageService\n  ) {\n    this.loggedInUser = this.localStorageService.getItem('user');\n    this.taskTypeList = data.forceTemplate ? [DISPLAY_TEMPLATES.find((template) => template.Name === data.forceTemplate)] : DISPLAY_TEMPLATES;\n    if (data.newTask) {\n      this.selectedTask = {\n        OrgID: this.loggedInUser.CurrentOrg.ID,\n        LocationID: null,\n        TaskType: null,\n        TaskTypeID: null,\n        Name: null,\n        Description: null,\n        CreatedBy: this.loggedInUser.CurrentUser.ID,\n      };\n    } else {\n      this.selectedTask = data.task;\n      this.setTaskTemplateType(DISPLAY_TEMPLATES.find((template) => template.ID === this.selectedTask.TaskType));\n    }\n  }\n\n  public createTaskTemplate(taskType: number): void {\n    const newTask: TaskTemplate = {\n      OrgID: this.loggedInUser.CurrentOrg.ID,\n      LocationID: this.loggedInUser.CurrentLocation.ID,\n      TaskType: taskType,\n      TaskTypeID: 2,\n      Name: this.selectedTask.Name,\n      Description: this.selectedTask.Description,\n      CreatedBy: this.loggedInUser.CurrentUser.ID,\n    };\n\n    this.apiTaskService.addTaskTemplate(newTask).subscribe((response) => {\n      this.selectedTask = newTask;\n      this.setTaskTemplateType(DISPLAY_TEMPLATES.find((template) => template.ID === this.selectedTask.TaskType));\n    });\n  }\n\n  public closeDialog(newTaskTemplate: TaskTemplate): void {\n    this.dialogRef.close(newTaskTemplate);\n  }\n\n  public goToFormField(location: string): void {\n    const element = document.getElementById(location);\n    element.scrollIntoView();\n  }\n\n  public setTaskTemplateType(template: TemplateInfo): void {\n    if (template) {\n      this.taskTypeList = [template];\n      this.taskType.next(template);\n      if (template.ID === 1) {\n        this.layoutOptions.sideNavMenuOptions.push({\n          selector: 'form-options',\n          title: 'Form Options',\n        });\n      } else {\n        this.layoutOptions.sideNavMenuOptions.push(\n          {\n            selector: 'assignments',\n            title: 'Assignments',\n          },\n          {\n            selector: 'subtask',\n            title: 'Subtask',\n          }\n        );\n        const deletedItem = this.layoutOptions.sideNavMenuOptions.splice(2, 1)[0];\n        this.layoutOptions.sideNavMenuOptions.splice(3, 0, deletedItem);\n      }\n    }\n  }\n\n  public closeClicked(): void {\n    this.dialogRef.close();\n    this.saveData = false;\n  }\n\n  public saveClicked(): void {\n    if (!this.taskType.value) {\n      this.dialogRef.close();\n    }\n    this.saveData = true;\n  }\n}\n","<xenon-ui-side-nav-layout [layoutOptions]=\"layoutOptions\" (backClick)=\"closeClicked()\" (saveClick)=\"saveClicked()\">\n  <!-- Recurring Task -->\n  <div class=\"task-field text-left border-bottom\">\n    <h6>Recurring Task</h6>\n    <mat-form-field floatLabel=\"never\" class=\"w-100\">\n      <input matInput [(ngModel)]=\"selectedTask.Name\" placeholder=\"Task Name\" />\n    </mat-form-field>\n    <div fxLayoutAlign=\"start center\" class=\"pr-50\">\n      <mat-icon matPrefix class=\"color-gray mr-2\" fontSet=\"material-icons-outlined\">check_box</mat-icon>\n      <mat-form-field class=\"w-100\">\n        <mat-select\n          (selectionChange)=\"createTaskTemplate($event.value.ID)\"\n          [value]=\"taskType.value\"\n          placeholder=\"Task Type\"\n          [disabled]=\"taskTypeList.length <= 1\"\n        >\n          <mat-option *ngFor=\"let type of taskTypeList\" [value]=\"type\">{{ type.Name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div fxLayoutAlign=\"start center\" class=\"pr-50\">\n      <mat-icon matPrefix class=\"color-gray mr-2\">notes</mat-icon>\n      <mat-form-field class=\"w-100 mt-2\">\n        <textarea\n          cdkTextareaAutosize\n          #autosize=\"cdkTextareaAutosize\"\n          matInput\n          [(ngModel)]=\"selectedTask.Description === 'Task Description' ? '' : selectedTask.Description\"\n          placeholder=\"Description\"\n        ></textarea>\n      </mat-form-field>\n    </div>\n    <!-- This is currently being built by Dave Mickelsen -->\n    <!-- <div fxLayoutAlign=\"start center\" class=\"pr-50\">\n          <mat-icon matPrefix class=\"color-gray mr-2\">info</mat-icon>\n          <mat-form-field class=\"w-50\">\n            <mat-select placeholder=\"Drive File\">\n              <mat-option value=\"\">option 1</mat-option>\n              <mat-option value=\"\">option 2</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div> -->\n  </div>\n  <div *ngIf=\"taskType | async\">\n    <div *ngIf=\"(taskType | async).ID === 1\">\n      <xenon-complete-form-template\n        [selectedTask]=\"selectedTask\"\n        [data]=\"data\"\n        [saveData]=\"saveData\"\n        (closeDialog)=\"closeDialog($event)\"\n      ></xenon-complete-form-template>\n    </div>\n    <div *ngIf=\"(taskType | async).ID === 2\">\n      <xenon-complete-checklist-template\n        [selectedTask]=\"selectedTask\"\n        [data]=\"data\"\n        [saveData]=\"saveData\"\n        (closeDialog)=\"closeDialog($event)\"\n      ></xenon-complete-checklist-template>\n    </div>\n  </div>\n</xenon-ui-side-nav-layout>\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { SubTask, UpdateSubTaskNameRequest, UpdateSubTaskStatusRequest, ApiTaskTemplateService } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { take } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'xenon-complete-checklist-template-subtask-list',\n  styleUrls: ['./complete-checklist-template-subtask-list.component.scss'],\n  template: ` <div cdkDropList (cdkDropListDropped)=\"drop($event)\">\n    <div *ngFor=\"let subtask of sortedSubtaskList\" fxLayout=\"row\" fxLayoutAlign=\"start center\" cdkDrag>\n      <mat-icon class=\"grab mr-1\" cdkDragHandle>drag_handle</mat-icon>\n      <mat-form-field class=\"mat-form-field-alternate w-100\">\n        <input matInput [(ngModel)]=\"subtask.SubTaskDesc\" (keyup.enter)=\"updateSubtaskName(subtask)\" (blur)=\"updateSubtaskName(subtask)\" />\n      </mat-form-field>\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"More options menu\" class=\"ml-auto\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"deleteSubTask(subtask)\">\n          <mat-icon>delete</mat-icon>\n          <span>Delete</span>\n        </button>\n      </mat-menu>\n\n      <mat-divider></mat-divider>\n    </div>\n    <div fxLayout=\"column\">\n      <div fxLayoutAlign=\"space-between center\" *ngIf=\"showAddNewSubTask\">\n        <mat-form-field class=\"w-100\" floatLabel=\"never\">\n          <input matInput #newSubTaskEl (keyup.enter)=\"addSubTask(newSubTaskEl, true)\" (blur)=\"addSubTask(newSubTaskEl, false)\" placeholder=\"Enter Subtask\" />\n        </mat-form-field>\n        <mat-icon class=\"mx-3 clickable\">done</mat-icon>\n      </div>\n\n      <button mat-button color=\"primary\" class=\"p-0 text-left mt-12px\" (click)=\"clickedShowAddNewSubTask()\">\n        <mat-icon class=\"mr-1\">add_circle_outline</mat-icon>\n        Add Subtask\n      </button>\n    </div>\n  </div>`,\n})\nexport class CompleteChecklistTemplateSubtaskListComponent {\n  @Input() set subtaskList(subtaskList: SubTask[]) {\n    this.sortedSubtaskList = subtaskList.sort((a, b) => {\n      return a.DisplayOrder - b.DisplayOrder;\n    });\n  }\n  @Input() taskID: number;\n  @Output() refresh = new EventEmitter();\n  @Output() newSubTaskList = new EventEmitter<SubTask[]>();\n  @ViewChild('newSubTaskEl') newSubTaskEl: HTMLInputElement;\n  @ViewChild('newSubTaskEl') newSubTaskElRef: ElementRef;\n  public showAddNewSubTask = false;\n  public currentUserID = this.localStorage.getItem('user').ID;\n  public sortedSubtaskList: SubTask[];\n\n  constructor(private taskTemplateService: ApiTaskTemplateService, private localStorage: UtilLocalStorageService, private snackBar: MatSnackBar) {}\n\n  public updateSubtaskName(subtask: SubTask) {\n    const request: UpdateSubTaskNameRequest = {\n      ID: subtask.ID,\n      SubTaskDesc: subtask.SubTaskDesc,\n    };\n\n    this.taskTemplateService\n      .updateTaskTemplateSubtask(request)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          this.snackBar.open('Subtask Updated', 'Close', { duration: 5000 });\n        } else {\n          this.showChecklistError(result.Message);\n        }\n      });\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    this.sortedSubtaskList.splice(event.currentIndex, 0, this.sortedSubtaskList.splice(event.previousIndex, 1)[0]);\n    this.saveDisplayOrder();\n  }\n\n  emitList(): void {\n    this.newSubTaskList.emit(this.sortedSubtaskList);\n  }\n\n  public saveDisplayOrder() {\n    this.taskTemplateService\n      .updateTaskTemplateSubtaskDisplayOrder(this.sortedSubtaskList)\n      .pipe(take(1))\n      .subscribe((result) => {\n        console.log(result);\n      });\n  }\n\n  public deleteSubTask(subtask: SubTask) {\n    this.taskTemplateService\n      .deleteTaskTemplateSubtask(subtask.ID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          this.sortedSubtaskList = this.sortedSubtaskList.filter((task) => task.ID !== subtask.ID);\n          this.snackBar.open('Subtask Deleted', 'Close', { duration: 5000 });\n          this.saveDisplayOrder();\n        } else {\n          this.showChecklistError(result.Message);\n        }\n      });\n  }\n\n  public addSubTask(newSubTaskEl, showAddNewSubTask: boolean) {\n    if (!newSubTaskEl.value) {\n      this.showAddNewSubTask = false;\n      return;\n    }\n\n    const subTask: UpdateSubTaskStatusRequest = {\n      TaskTemplateID: this.taskID,\n      SubTaskDesc: newSubTaskEl.value,\n      CreatedBy: this.currentUserID,\n      DisplayOrder: this.sortedSubtaskList.length,\n    };\n\n    this.taskTemplateService\n      .createTaskTemplateSubtask(subTask)\n      .pipe(take(1))\n      .subscribe((result) => {\n        newSubTaskEl.value = ''; // reset input\n        this.showAddNewSubTask = showAddNewSubTask; // hide 'add new' input\n\n        const newSubTaskObject = {\n          ID: result.NewTaskTemplateSubTask,\n          TaskID: subTask.TaskID,\n          SubTaskDesc: subTask.SubTaskDesc,\n          CompletedAt: null,\n          CreatedBy: this.currentUserID,\n          DisplayOrder: this.sortedSubtaskList.length,\n        };\n        this.sortedSubtaskList ? this.sortedSubtaskList.push(newSubTaskObject) : (this.sortedSubtaskList = [newSubTaskObject]);\n        this.emitList();\n      });\n  }\n\n  public clickedShowAddNewSubTask(): void {\n    this.showAddNewSubTask = true;\n    setTimeout(() => this.newSubTaskElRef.nativeElement.focus(), 200);\n  }\n\n  private showChecklistError(message: string): void {\n    this.snackBar.open(message, 'Error', { duration: 5000 });\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Role, TaskTemplate, User, Location, SubTask } from '@xenon/api';\nimport { BehaviorSubject } from 'rxjs';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-complete-checklist-template',\n  templateUrl: './complete-checklist-template.component.html',\n  styleUrls: ['./complete-checklist-template.component.scss'],\n})\nexport class CompleteChecklistTemplateComponent {\n  @Input() selectedTask: TaskTemplate;\n  @Input() data: any;\n  @Input() set saveData(save: boolean) {\n    if (save) {\n      this.saveAndClose();\n    }\n  }\n  @Output() closeDialog = new EventEmitter<TaskTemplate>();\n  user: User;\n  callUpdateRecurrence: BehaviorSubject<Boolean> = new BehaviorSubject(null);\n  assignedRoles: Role[];\n  assignedUsers: User[];\n  subTaskList: SubTask[];\n  locationID: number;\n\n  fieldExpanded = true;\n\n  constructor(private localStorage: UtilLocalStorageService) {\n    const savedUser = this.localStorage.getItem('user').CurrentUser;\n    this.user = savedUser;\n  }\n\n  saveAndClose() {\n    this.callUpdateRecurrence.next(!this.callUpdateRecurrence.value);\n    let newTaskTemplate = this.selectedTask;\n    if (this.locationID) {\n      newTaskTemplate = { ...newTaskTemplate, LocationID: this.locationID };\n    }\n    if (this.assignedUsers) {\n      newTaskTemplate = { ...newTaskTemplate, AssignedUsers: this.assignedUsers };\n    }\n    if (this.assignedRoles) {\n      newTaskTemplate = { ...newTaskTemplate, AssignedRoles: this.assignedRoles };\n    }\n    if (this.subTaskList) {\n      newTaskTemplate = { ...newTaskTemplate, SubTaskList: this.subTaskList };\n    }\n    this.closeDialog.emit(newTaskTemplate);\n  }\n}\n","<div class=\"task-field text-left border-bottom\">\n  <xenon-ui-fields-organizations [selectedTask]=\"selectedTask\" (newOrganizationList)=\"locationID = $event\"></xenon-ui-fields-organizations>\n</div>\n<div class=\"task-field text-left border-bottom\">\n  <xenon-recurrence\n    [isNewTask]=\"data.newTask\"\n    [user]=\"user\"\n    [selectedTask]=\"selectedTask\"\n    [callUpdateRecurrence]=\"callUpdateRecurrence | async\"\n  ></xenon-recurrence>\n</div>\n<div class=\"task-field text-left border-bottom\">\n  <xenon-ui-fields-assignments [selectedTask]=\"selectedTask\" (newUserList)=\"assignedUsers = $event\"></xenon-ui-fields-assignments>\n</div>\n<div class=\"task-field text-left border-bottom\">\n  <xenon-ui-fields-permissions [selectedTask]=\"selectedTask\" (newRoleList)=\"assignedRoles = $event\"></xenon-ui-fields-permissions>\n</div>\n<div class=\"task-field text-left border-bottom\">\n  <div fxLayoutAlign=\"space-between\">\n    <span>\n      <h6 class=\"text-subtitle1 mb-1\" id=\"subtask\">Checklist Options</h6>\n      <p class=\"text-caption2\">\n        Add subtasks\n      </p>\n    </span>\n    <button mat-icon-button (click)=\"fieldExpanded = !fieldExpanded\">\n      <mat-icon>{{ fieldExpanded ? 'expand_more' : 'expand_less' }}</mat-icon>\n    </button>\n  </div>\n  <xenon-complete-checklist-template-subtask-list\n    [ngClass]=\"fieldExpanded ? 'display-block' : 'display-none'\"\n    [subtaskList]=\"selectedTask.SubTaskList\"\n    [taskID]=\"selectedTask.ID\"\n    (newSubTaskList)=\"subTaskList = $event\"\n  ></xenon-complete-checklist-template-subtask-list>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'inXDays',\n})\nexport class InXDaysPipe implements PipeTransform {\n  public transform(value: string) {\n    if (!isNaN(+value)) {\n      const days = +value === 1 ? 'day' : 'days';\n      return `in ${value} ${days}`;\n    }\n\n    const arr = value?.split('') || [];\n    const noNumbers = arr\n      .filter((e) => e !== ' ')\n      .map(Number)\n      .every(isNaN);\n    const doesNotEndInS = arr[arr.length - 1] !== 's';\n    if (noNumbers || doesNotEndInS) {\n      return '';\n    }\n\n    return value;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport {\n  AddTaskRecurrenceRequest,\n  AddTaskRecurrenceResponse,\n  ApiTaskRecurrenceService,\n  GetTaskRecurrenceResponse,\n  RecurrenceDay,\n  TaskTemplate,\n  User,\n  TaskRecurrence,\n} from '@xenon/api';\nimport * as moment from 'moment';\nimport { DAYS_OF_MONTH, DAYS_OF_WEEK, MONTH_RELATIVE_DAYS, REPEAT_OPTIONS, TASK_RECURRENCE, TIME_UNITS } from './recurrence.const';\nimport { InXDaysPipe } from './in-x-days.pipe';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'xenon-recurrence',\n  styleUrls: ['./recurrence.component.scss'],\n  templateUrl: './recurrence.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RecurrenceComponent implements OnInit {\n  @ViewChild('drawer') sideNav: MatSidenav;\n  @Input() isNewTask: boolean;\n  @Input() user: User;\n  @Input() selectedTask: TaskTemplate;\n  @Input() set callUpdateRecurrence(event) {\n    if (!event) return;\n    this.updateRecurrence();\n  }\n  @Output() recurrenceSave = new EventEmitter<boolean>();\n  public taskRecurrence = TASK_RECURRENCE;\n  public daysOfWeek = DAYS_OF_WEEK;\n  public daysOfMonth = DAYS_OF_MONTH;\n  public monthRelativeDays = MONTH_RELATIVE_DAYS;\n  // public startTime = START_TIME;\n  public startTime = '12:00';\n  public dueTime;\n  public endTime;\n  public expireDays;\n  public dueDays;\n  public repeatOptions = REPEAT_OPTIONS;\n  public timeUnits = TIME_UNITS;\n  public daysOfMonthView = true;\n  public startDateValue = moment().toDate();\n  public endDateValue = moment().add(1, 'M').toDate();\n  public listOfTaskRecurrences: BehaviorSubject<TaskRecurrence[]> = new BehaviorSubject(null);\n  public newRule: boolean;\n\n  private inXDaysPipe: InXDaysPipe;\n\n  constructor(private apiTaskRecurrenceService: ApiTaskRecurrenceService, private snackBar: MatSnackBar) {}\n\n  public ngOnInit(): void {\n    this.inXDaysPipe = new InXDaysPipe();\n\n    if (this.selectedTask.ID) {\n      this.apiTaskRecurrenceService\n        .getTaskRecurrenceByTaskTemplateId(this.selectedTask.ID)\n        .pipe(take(1))\n        .subscribe((response: GetTaskRecurrenceResponse) => {\n          if (response.Status === 'success') {\n            this.listOfTaskRecurrences.next(response.TaskRecurrenceList);\n          } else if (response.Status === 'error') {\n            this.snackBar.open(response.Message, 'Close', {\n              duration: 5000,\n            });\n          }\n        });\n    }\n  }\n\n  public deleteRecurrence(ID: number, event: Event): void {\n    event.stopPropagation();\n    this.apiTaskRecurrenceService\n      .deleteTaskRecurrence(ID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          this.snackBar.open('Recurrence Deleted', 'Close', { duration: 5000 });\n        } else {\n          this.snackBar.open(result.Message, 'Close', { duration: 5000 });\n        }\n      });\n  }\n\n  public getRecurrenceString(recurrence: TaskRecurrence): string {\n    let unitString = '';\n    let dayOfWeek = '';\n    switch (recurrence.RepeatUnit) {\n      case 3:\n        unitString = recurrence.RepeatValue > 1 ? 'days' : 'day';\n        break;\n      case 4:\n        unitString = recurrence.RepeatValue > 1 ? 'weeks' : 'week';\n        break;\n      case 5:\n        unitString = recurrence.RepeatValue > 1 ? 'months' : 'month';\n        break;\n    }\n\n    if (recurrence.DaysOfWeek !== '0') {\n      switch (recurrence.DaysOfWeek) {\n        case '1':\n          dayOfWeek = 'on Monday';\n          break;\n        case '2':\n          dayOfWeek = 'on Tuesday';\n          break;\n        case '3':\n          dayOfWeek = 'on Wednesday';\n          break;\n        case '4':\n          dayOfWeek = 'on Thursday';\n          break;\n        case '5':\n          dayOfWeek = 'on Friday';\n          break;\n        case '6':\n          dayOfWeek = 'on Saturday';\n          break;\n        case '7':\n          dayOfWeek = 'on Sunday';\n          break;\n      }\n    }\n\n    return `${recurrence.RepeatValue > 1 ? recurrence.RepeatValue : ''} ${unitString} ${dayOfWeek}`;\n  }\n\n  public editRecurrence(recurrence: TaskRecurrence): void {\n    this.newRule = false;\n    this.taskRecurrence = recurrence;\n    this.togglePanel();\n  }\n\n  public newRecurrence(): void {\n    this.newRule = true;\n    this.sideNav.toggle();\n  }\n\n  public getStartTimeString(time: string): string {\n    let startTime = time + ' AM';\n    const intHour = parseInt(time.substr(0, 2), 10);\n    if (intHour < 10) {\n      startTime = `${time.substr(1, time.length)} AM`;\n    } else if (intHour > 12) {\n      startTime = `${intHour - 12}:${time.substr(3, 5)} PM`;\n    }\n    return startTime;\n  }\n\n  public togglePanel() {\n    this.sideNav.toggle();\n  }\n\n  public updateRecurrenceItem(): void {\n    this.formatDates();\n    this.taskRecurrence.TaskTemplateID = this.selectedTask.ID;\n\n    const taskRecurrence: AddTaskRecurrenceRequest = {\n      ...this.taskRecurrence,\n      AvailableTime: this.startTime,\n      DueTime: this.dueTime,\n      DueDays: this.getOnlyDays(this.dueDays),\n      ExpireTime: this.endTime,\n      ExpireDays: this.getOnlyDays(this.expireDays),\n    };\n\n    const isoDate = new Date(taskRecurrence.StartDate);\n    taskRecurrence.StartDate = isoDate.toISOString();\n\n    this.apiTaskRecurrenceService\n      .updateTaskRecurrence(taskRecurrence)\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.taskRecurrence.ID = response.ID;\n        this.setSelectedDays();\n        this.initDates();\n        this.togglePanel();\n      });\n  }\n\n  public addRecurrence() {\n    this.formatDates();\n    this.taskRecurrence.TaskTemplateID = this.selectedTask.ID;\n\n    if (this.user) {\n      this.taskRecurrence.CreatedBy = this.user.ID;\n    }\n\n    const taskRecurrence: AddTaskRecurrenceRequest = {\n      ...this.taskRecurrence,\n      AvailableTime: this.startTime,\n      DueTime: this.dueTime,\n      DueDays: this.getOnlyDays(this.dueDays),\n      ExpireTime: this.endTime,\n      ExpireDays: this.getOnlyDays(this.expireDays),\n    };\n\n    const isoDate = new Date(taskRecurrence.StartDate);\n    taskRecurrence.StartDate = isoDate.toISOString();\n\n    this.apiTaskRecurrenceService\n      .addTaskRecurrence(taskRecurrence)\n      .then((response: AddTaskRecurrenceResponse) => {\n        this.taskRecurrence.ID = response.NewTask;\n        this.setSelectedDays();\n        this.initDates();\n        this.togglePanel();\n      })\n      .catch((err) => {\n        // TODO may want to show error here.\n      });\n  }\n\n  public getOnlyDays(days: string): number {\n    return days ? +days.replace(/\\D/g, '') : 0;\n  }\n\n  public updateDays(toUpdate: 'dueDays' | 'expireDays') {\n    if (toUpdate === 'dueDays') {\n      this.dueDays = this.inXDaysPipe.transform(this.dueDays);\n    } else if (toUpdate === 'expireDays') {\n      this.expireDays = this.inXDaysPipe.transform(this.expireDays);\n    }\n  }\n\n  public selectWeekday(weekday: RecurrenceDay) {\n    const day = this.daysOfWeek.find((w) => weekday === w);\n\n    if (day === this.daysOfWeek[0]) {\n      this.daysOfWeek.forEach((w) => (w.selected = false));\n      this.daysOfWeek[0].selected = true;\n    } else {\n      day.selected = !day.selected;\n      this.daysOfWeek[0].selected = false;\n    }\n\n    this.taskRecurrence.DaysOfWeek = this.updateRecurrenceValues(this.daysOfWeek);\n  }\n\n  public selectDaysTypeView(viewType: string) {\n    this.daysOfMonthView = viewType === 'm';\n  }\n\n  private updateRecurrenceValues(selectedValues: RecurrenceDay[]) {\n    let recurrenceValues = '';\n    selectedValues.forEach((wd) => {\n      if (wd.selected) {\n        recurrenceValues += wd.value + ',';\n      }\n    });\n    return recurrenceValues;\n  }\n\n  private formatDates() {\n    const format = (date: Date) => {\n      const d = new Date(date);\n      let month = '' + (d.getMonth() + 1);\n      let day = '' + d.getDate();\n      const year = d.getFullYear();\n\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n\n      return [year, month, day].join('-');\n    };\n\n    this.taskRecurrence.StartDate = format(this.startDateValue);\n    this.taskRecurrence.EndDate = format(this.endDateValue);\n  }\n\n  private setSelectedDays() {\n    this.daysOfWeek.forEach((weekday) => {\n      const daysOfWeek = this.taskRecurrence.DaysOfWeek.split(',');\n      if (daysOfWeek.includes(String(weekday.value))) {\n        weekday.selected = true;\n      }\n    });\n\n    this.daysOfMonth.forEach((day) => {\n      const monthDays = this.taskRecurrence.DaysOfMonth.split(',');\n      if (monthDays.includes(String(day.value))) {\n        day.selected = true;\n      }\n    });\n\n    this.monthRelativeDays.forEach((day) => {\n      const monthDays = this.taskRecurrence.MonthRelativeDays.split(',');\n      if (monthDays.includes(String(day.value))) {\n        day.selected = true;\n      }\n    });\n\n    if (this.taskRecurrence.RepeatUnit === 5) {\n      if (this.taskRecurrence.DaysOfMonth) {\n        this.daysOfMonthView = true;\n      } else {\n        this.daysOfMonthView = false;\n      }\n    }\n  }\n\n  private initDates() {\n    this.startDateValue = moment(this.taskRecurrence.StartDate).toDate();\n    this.endDateValue = moment(this.taskRecurrence.EndDate).toDate();\n  }\n\n  private updateRecurrence() {\n    if (!this.taskRecurrence) {\n      return;\n    }\n\n    this.formatDates();\n    this.clearPreviouslySelectedDays();\n\n    this.apiTaskRecurrenceService.updateTaskRecurrence(this.taskRecurrence).subscribe((response) => {\n      this.recurrenceSave.emit(true);\n    });\n  }\n\n  private clearPreviouslySelectedDays() {\n    switch (this.taskRecurrence.RepeatUnit) {\n      case 3: //Days\n        this.taskRecurrence.DaysOfMonth = '';\n        this.taskRecurrence.DaysOfWeek = '';\n        this.taskRecurrence.MonthRelativeDays = '';\n        break;\n      case 4: //Weekdays\n        this.taskRecurrence.DaysOfMonth = '';\n        this.taskRecurrence.MonthRelativeDays = '';\n        break;\n      case 5: //Month\n        this.taskRecurrence.DaysOfWeek = '';\n\n        if (this.daysOfMonthView) {\n          this.taskRecurrence.MonthRelativeDays = '';\n        } else {\n          this.taskRecurrence.DaysOfMonth = '';\n        }\n        break;\n    }\n  }\n}\n","<div fxLayoutAlign=\"space-between\">\n  <span>\n    <h6 class=\"text-subtitle1 mb-1\" id=\"recurrence\">Recurrence</h6>\n  </span>\n</div>\n<div *ngIf=\"listOfTaskRecurrences | async as recurrenceList\">\n  <div\n    *ngFor=\"let recurrence of recurrenceList\"\n    (click)=\"editRecurrence(recurrence)\"\n    fxLayoutAlign=\"space-between\"\n    class=\"recurrence-row py-2 color-gray clickable\"\n  >\n    <span fxLayoutAlign=\"start center\">\n      <mat-icon class=\"mr-3\">calendar_today</mat-icon>\n      <p class=\"m-0 text-body1\">Every {{ getRecurrenceString(recurrence) }}</p>\n    </span>\n\n    <span fxLayoutAlign=\"start center\">\n      <p class=\"m-0 text-body1\">Starts: {{ getStartTimeString(recurrence.AvailableTime) }}</p>\n      <mat-icon class=\"material-icons-outlined ml-3 delete-button\" (click)=\"deleteRecurrence(recurrence.ID, $event)\">cancel</mat-icon>\n    </span>\n  </div>\n</div>\n<button mat-button (click)=\"newRecurrence()\" class=\"text-left color-primary mt-3 p-0\">\n  <mat-icon class=\"mr-3\">add_circle_outline</mat-icon>\n  Add Rule\n</button>\n\n<!--\n  TODO need to loop through the list of recurrences for this task here (listOfTaskRecurrences)\n  The method in NgOnInit isn't returning tasks right now, working with Rance on this.\n\n  Should look like this:\n  https://www.figma.com/file/vjSCuewRytKidcpzKx2zUw/Checklist-2.0?node-id=205%3A13708\n-->\n\n<mat-drawer\n  #drawer\n  class=\"sidenav\"\n  [ngStyle]=\"!daysOfMonthView && taskRecurrence.RepeatUnit === 5 ? { padding: '16px 16px' } : { padding: '16px 24px' }\"\n  mode=\"side\"\n  position=\"end\"\n>\n  <h6 class=\"title\">Task Recurrence</h6>\n  <p class=\"recurrence-subtitle\">Recurrence Period</p>\n\n  <mat-form-field [floatLabel]=\"'always'\" appearance=\"outline\">\n    <mat-label>Start</mat-label>\n    <input class=\"text-body1\" matInput [matDatepicker]=\"startDate\" [(ngModel)]=\"startDateValue\" />\n    <mat-datepicker-toggle matSuffix [for]=\"startDate\"></mat-datepicker-toggle>\n    <mat-datepicker [startAt]=\"startDateValue\" #startDate></mat-datepicker>\n  </mat-form-field>\n  <mat-form-field [floatLabel]=\"'always'\" appearance=\"outline\">\n    <mat-label>End</mat-label>\n    <input class=\"text-body1\" matInput [matDatepicker]=\"endDate\" [(ngModel)]=\"endDateValue\" />\n    <mat-datepicker-toggle matSuffix [for]=\"endDate\"></mat-datepicker-toggle>\n    <mat-datepicker [startAt]=\"endDateValue\" #endDate></mat-datepicker>\n  </mat-form-field>\n\n  <mat-form-field [floatLabel]=\"'always'\" appearance=\"outline\">\n    <mat-label>Repeat Every</mat-label>\n    <input class=\"text-body1\" type=\"number\" matInput [(ngModel)]=\"taskRecurrence.RepeatValue\" placeholder=\"Empty\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\">\n    <mat-select [(value)]=\"taskRecurrence.RepeatUnit\">\n      <mat-option *ngFor=\"let option of repeatOptions\" [value]=\"option.value\">\n        {{ option.name }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- Weeks -->\n  <div *ngIf=\"taskRecurrence.RepeatUnit == 4\">\n    <div></div>\n    <div class=\"days-of-week\">\n      <span class=\"info-label display-block\">Days of Week</span>\n      <button [class.selected]=\"day.selected\" (click)=\"selectWeekday(day)\" *ngFor=\"let day of daysOfWeek\">\n        {{ day.displayName }}\n      </button>\n    </div>\n    <div></div>\n  </div>\n\n  <!-- Months -->\n  <div *ngIf=\"taskRecurrence.RepeatUnit == 5\">\n    <div class=\"recurrence-block\">\n      <div class=\"view-selection\">\n        <button [class.selected]=\"daysOfMonthView\" class=\"month-days-view display-inline-block\" (click)=\"selectDaysTypeView('m')\">\n          Days of Month\n        </button>\n        <button [class.selected]=\"!daysOfMonthView\" class=\"month-days-view display-inline-block\" (click)=\"selectDaysTypeView('w')\">\n          Weekdays\n        </button>\n      </div>\n      <div class=\"days-of-month\" *ngIf=\"daysOfMonthView\">\n        <button [class.selected]=\"day.selected\" (click)=\"selectDayOfMonth(day)\" *ngFor=\"let day of daysOfMonth\">\n          {{ day.displayName }}\n        </button>\n        <p class=\"text-center text-caption2\">*Months without the 29-31 will be skipped</p>\n      </div>\n      <div class=\"days-of-month\" *ngIf=\"!daysOfMonthView\">\n        <div>\n          <span class=\"info-label display-block\">First</span>\n          <button [class.selected]=\"day.selected\" (click)=\"selectMonthViewWeekday(day)\" *ngFor=\"let day of monthRelativeDays.slice(0, 7)\">\n            {{ day.displayName }}\n          </button>\n        </div>\n        <div>\n          <span class=\"info-label display-block\">Second</span>\n          <button [class.selected]=\"day.selected\" (click)=\"selectMonthViewWeekday(day)\" *ngFor=\"let day of monthRelativeDays.slice(7, 14)\">\n            {{ day.displayName }}\n          </button>\n        </div>\n        <div>\n          <span class=\"info-label display-block\">Third</span>\n          <button [class.selected]=\"day.selected\" (click)=\"selectMonthViewWeekday(day)\" *ngFor=\"let day of monthRelativeDays.slice(14, 21)\">\n            {{ day.displayName }}\n          </button>\n        </div>\n        <div>\n          <span class=\"info-label display-block\">Fourth</span>\n          <button [class.selected]=\"day.selected\" (click)=\"selectMonthViewWeekday(day)\" *ngFor=\"let day of monthRelativeDays.slice(21, 28)\">\n            {{ day.displayName }}\n          </button>\n        </div>\n        <div>\n          <span class=\"info-label display-block\">Fifth*</span>\n          <button [class.selected]=\"day.selected\" (click)=\"selectMonthViewWeekday(day)\" *ngFor=\"let day of monthRelativeDays.slice(28, 35)\">\n            {{ day.displayName }}\n          </button>\n        </div>\n        <p class=\"text-center text-caption2\">* Months without a 5th weekday will be skipped</p>\n      </div>\n    </div>\n  </div>\n\n  <p class=\"recurrence-subtitle\">Task Details</p>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Start Time</mat-label>\n    <input class=\"text-body1\" type=\"time\" matInput [(ngModel)]=\"startTime\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\">\n    <input class=\"text-body1\" matInput disabled placeholder=\"Sameday\" />\n  </mat-form-field>\n\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Due Time</mat-label>\n    <input class=\"text-body1\" type=\"time\" matInput [(ngModel)]=\"dueTime\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\">\n    <input class=\"text-body1\" matInput name=\"dueDays\" type=\"text\" placeholder=\"Sameday\" [(ngModel)]=\"dueDays\" (change)=\"updateDays('dueDays')\" />\n  </mat-form-field>\n\n  <mat-form-field appearance=\"outline\">\n    <mat-label>End Time</mat-label>\n    <input class=\"text-body1\" type=\"time\" matInput [(ngModel)]=\"endTime\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\">\n    <input class=\"text-body1\" matInput placeholder=\"Sameday\" [(ngModel)]=\"expireDays\" (change)=\"updateDays('expireDays')\" />\n  </mat-form-field>\n\n  <p class=\"text-center text-caption2\">Times are in [GMT-06:00] Mountain Time - Denver</p>\n\n  <div class=\"recurrence-sidebar-controls\">\n    <button mat-raised-button color=\"primary\" (click)=\"addRecurrence()\" aria-label=\"Update task recurrence\" *ngIf=\"newRule; else update\">DONE</button>\n    <ng-template #update>\n      <button mat-raised-button color=\"primary\" (click)=\"updateRecurrenceItem()\" aria-label=\"Update task recurrence\">Save</button></ng-template\n    >\n    <button mat-button color=\"primary\" (click)=\"togglePanel()\" aria-label=\"Cancel\">CANCEL</button>\n  </div>\n</mat-drawer>\n","import { RecurrenceDay, WeekdayType, TimeUnit, RecurrenceRepeatUnit, TaskRecurrence } from '@xenon/api';\n// daysOfMonthCount = 7;\n\nexport const DAYS_OF_MONTH: RecurrenceDay[] = [\n  {\n    displayName: '1',\n    day: '1',\n    value: 1,\n    selected: false,\n  },\n  {\n    displayName: '2',\n    day: '2',\n    value: 2,\n    selected: false,\n  },\n  {\n    displayName: '3',\n    day: '3',\n    value: 3,\n    selected: false,\n  },\n  {\n    displayName: '4',\n    day: '4',\n    value: 4,\n    selected: false,\n  },\n  {\n    displayName: '5',\n    day: '5',\n    value: 5,\n    selected: false,\n  },\n  {\n    displayName: '6',\n    day: '6',\n    value: 6,\n    selected: false,\n  },\n  {\n    displayName: '7',\n    day: '7',\n    value: 7,\n    selected: false,\n  },\n  {\n    displayName: '8',\n    day: '8',\n    value: 8,\n    selected: false,\n  },\n  {\n    displayName: '9',\n    day: '9',\n    value: 9,\n    selected: false,\n  },\n  {\n    displayName: '10',\n    day: '10',\n    value: 10,\n    selected: false,\n  },\n  {\n    displayName: '11',\n    day: '11',\n    value: 11,\n    selected: false,\n  },\n  {\n    displayName: '12',\n    day: '12',\n    value: 12,\n    selected: false,\n  },\n  {\n    displayName: '13',\n    day: '13',\n    value: 13,\n    selected: false,\n  },\n  {\n    displayName: '14',\n    day: '14',\n    value: 14,\n    selected: false,\n  },\n  {\n    displayName: '15',\n    day: '15',\n    value: 15,\n    selected: false,\n  },\n  {\n    displayName: '16',\n    day: '16',\n    value: 16,\n    selected: false,\n  },\n  {\n    displayName: '17',\n    day: '17',\n    value: 17,\n    selected: false,\n  },\n  {\n    displayName: '18',\n    day: '18',\n    value: 18,\n    selected: false,\n  },\n  {\n    displayName: '19',\n    day: '19',\n    value: 19,\n    selected: false,\n  },\n  {\n    displayName: '20',\n    day: '20',\n    value: 20,\n    selected: false,\n  },\n  {\n    displayName: '21',\n    day: '21',\n    value: 21,\n    selected: false,\n  },\n  {\n    displayName: '22',\n    day: '22',\n    value: 22,\n    selected: false,\n  },\n  {\n    displayName: '23',\n    day: '23',\n    value: 23,\n    selected: false,\n  },\n  {\n    displayName: '24',\n    day: '24',\n    value: 24,\n    selected: false,\n  },\n  {\n    displayName: '25',\n    day: '25',\n    value: 25,\n    selected: false,\n  },\n  {\n    displayName: '26',\n    day: '26',\n    value: 26,\n    selected: false,\n  },\n  {\n    displayName: '27',\n    day: '27',\n    value: 27,\n    selected: false,\n  },\n  {\n    displayName: '28',\n    day: '28',\n    value: 28,\n    selected: false,\n  },\n  {\n    displayName: '29*',\n    day: '29',\n    value: 29,\n    selected: false,\n  },\n  {\n    displayName: '30*',\n    day: '30',\n    value: 30,\n    selected: false,\n  },\n  {\n    displayName: '31*',\n    day: '31',\n    value: 31,\n    selected: false,\n  },\n];\n\nexport const MONTH_RELATIVE_DAYS: RecurrenceDay[] = [\n  {\n    displayName: 'S',\n    day: WeekdayType.sunday,\n    value: '1:1',\n    selected: false,\n  },\n  {\n    displayName: 'M',\n    day: WeekdayType.monday,\n    value: '1:2',\n    selected: false,\n  },\n  {\n    displayName: 'T',\n    day: WeekdayType.tuesday,\n    value: '1:3',\n    selected: false,\n  },\n  {\n    displayName: 'W',\n    day: WeekdayType.wednesday,\n    value: '1:4',\n    selected: false,\n  },\n  {\n    displayName: 'Th',\n    day: WeekdayType.thursday,\n    value: '1:5',\n    selected: false,\n  },\n  {\n    displayName: 'F',\n    day: WeekdayType.friday,\n    value: '1:6',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.saturday,\n    value: '1:7',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.sunday,\n    value: '2:1',\n    selected: false,\n  },\n  {\n    displayName: 'M',\n    day: WeekdayType.monday,\n    value: '2:2',\n    selected: false,\n  },\n  {\n    displayName: 'T',\n    day: WeekdayType.tuesday,\n    value: '2:3',\n    selected: false,\n  },\n  {\n    displayName: 'W',\n    day: WeekdayType.wednesday,\n    value: '2:4',\n    selected: false,\n  },\n  {\n    displayName: 'Th',\n    day: WeekdayType.thursday,\n    value: '2:5',\n    selected: false,\n  },\n  {\n    displayName: 'F',\n    day: WeekdayType.friday,\n    value: '2:6',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.saturday,\n    value: '2:7',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.sunday,\n    value: '3:1',\n    selected: false,\n  },\n  {\n    displayName: 'M',\n    day: WeekdayType.monday,\n    value: '3:2',\n    selected: false,\n  },\n  {\n    displayName: 'T',\n    day: WeekdayType.tuesday,\n    value: '3:3',\n    selected: false,\n  },\n  {\n    displayName: 'W',\n    day: WeekdayType.wednesday,\n    value: '3:4',\n    selected: false,\n  },\n  {\n    displayName: 'Th',\n    day: WeekdayType.thursday,\n    value: '3:5',\n    selected: false,\n  },\n  {\n    displayName: 'F',\n    day: WeekdayType.friday,\n    value: '3:6',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.saturday,\n    value: '3:7',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.sunday,\n    value: '4:1',\n    selected: false,\n  },\n  {\n    displayName: 'M',\n    day: WeekdayType.monday,\n    value: '4:2',\n    selected: false,\n  },\n  {\n    displayName: 'T',\n    day: WeekdayType.tuesday,\n    value: '4:3',\n    selected: false,\n  },\n  {\n    displayName: 'W',\n    day: WeekdayType.wednesday,\n    value: '4:4',\n    selected: false,\n  },\n  {\n    displayName: 'Th',\n    day: WeekdayType.thursday,\n    value: '4:5',\n    selected: false,\n  },\n  {\n    displayName: 'F',\n    day: WeekdayType.friday,\n    value: '4:6',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.saturday,\n    value: '4:7',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.sunday,\n    value: '5:1',\n    selected: false,\n  },\n  {\n    displayName: 'M',\n    day: WeekdayType.monday,\n    value: '5:2',\n    selected: false,\n  },\n  {\n    displayName: 'T',\n    day: WeekdayType.tuesday,\n    value: '5:3',\n    selected: false,\n  },\n  {\n    displayName: 'W',\n    day: WeekdayType.wednesday,\n    value: '5:4',\n    selected: false,\n  },\n  {\n    displayName: 'Th',\n    day: WeekdayType.thursday,\n    value: '5:5',\n    selected: false,\n  },\n  {\n    displayName: 'F',\n    day: WeekdayType.friday,\n    value: '5:6',\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.saturday,\n    value: '5:7',\n    selected: false,\n  },\n];\n\nexport const TIME_UNITS: TimeUnit[] = [\n  {\n    name: 'min',\n    value: 1,\n  },\n  {\n    name: 'hour',\n    value: 2,\n  },\n];\n\nexport const REPEAT_OPTIONS: RecurrenceRepeatUnit[] = [\n  {\n    name: 'Day(s)',\n    value: 3,\n  },\n  {\n    name: 'Week(s)',\n    value: 4,\n  },\n  {\n    name: 'Month(s)',\n    value: 5,\n  },\n];\n\nexport const DAYS_OF_WEEK: RecurrenceDay[] = [\n  {\n    displayName: 'All',\n    day: 'All',\n    value: 0,\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.sunday,\n    value: 1,\n    selected: false,\n  },\n  {\n    displayName: 'M',\n    day: WeekdayType.monday,\n    value: 2,\n    selected: false,\n  },\n  {\n    displayName: 'T',\n    day: WeekdayType.tuesday,\n    value: 3,\n    selected: false,\n  },\n  {\n    displayName: 'W',\n    day: WeekdayType.wednesday,\n    value: 4,\n    selected: false,\n  },\n  {\n    displayName: 'Th',\n    day: WeekdayType.thursday,\n    value: 5,\n    selected: false,\n  },\n  {\n    displayName: 'F',\n    day: WeekdayType.friday,\n    value: 6,\n    selected: false,\n  },\n  {\n    displayName: 'S',\n    day: WeekdayType.saturday,\n    value: 7,\n    selected: false,\n  },\n];\n\nexport const START_TIME = {\n  hour: 10,\n  minute: 0,\n  second: 0,\n};\n\nexport const TASK_RECURRENCE: TaskRecurrence = {\n  CreatedBy: 0,\n  TaskTemplateID: 0,\n  StartDate: '',\n  EndDate: '',\n  RepeatUnit: 3,\n  AvailableTime: '12:00',\n  RepeatValue: 1,\n  DaysOfWeek: '1',\n  DaysOfMonth: '',\n  MonthRelativeDays: '',\n};\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApiFormTemplateService, FormTemplate, Role, TaskTemplate, User, LoggedInUser } from '@xenon/api';\nimport { BehaviorSubject } from 'rxjs';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-complete-form-template',\n  templateUrl: './complete-form-template.component.html',\n  styleUrls: ['./complete-form-template.component.scss'],\n})\nexport class CompleteFormTemplateComponent {\n  @Input() selectedTask: TaskTemplate;\n  @Input() data: any;\n  @Input() set saveData(save: boolean) {\n    if (save) {\n      this.saveAndClose();\n    }\n  }\n  @Output() closeDialog = new EventEmitter<TaskTemplate>();\n  user: LoggedInUser;\n  callUpdateRecurrence: BehaviorSubject<Boolean> = new BehaviorSubject(null);\n  assignedRoles: Role[];\n  assignedUsers: User[];\n  locationID: number;\n  assignedTemplate: FormTemplate;\n  templateList: BehaviorSubject<FormTemplate[]> = new BehaviorSubject(null);\n\n  fieldExpanded = true;\n\n  constructor(apiFormTemplateService: ApiFormTemplateService, private localStorage: UtilLocalStorageService) {\n    const savedUser = this.localStorage.getItem('user');\n    this.user = savedUser;\n    apiFormTemplateService.getFormTemplatesByOrg(this.user.CurrentOrg.ID).subscribe((templates) => {\n      this.templateList.next(templates);\n    });\n  }\n\n  saveAndClose() {\n    this.callUpdateRecurrence.next(!this.callUpdateRecurrence.value);\n    let newTaskTemplate = this.selectedTask;\n    if (this.locationID) {\n      newTaskTemplate = { ...newTaskTemplate, LocationID: this.locationID };\n    }\n    if (this.assignedUsers) {\n      newTaskTemplate = { ...newTaskTemplate, AssignedUsers: this.assignedUsers };\n    }\n    if (this.assignedRoles) {\n      newTaskTemplate = { ...newTaskTemplate, AssignedRoles: this.assignedRoles };\n    }\n    this.closeDialog.emit(newTaskTemplate);\n  }\n}\n","<div class=\"task-field text-left border-bottom\">\n  <xenon-ui-fields-organizations [selectedTask]=\"selectedTask\" (newOrganizationList)=\"locationID = $event\"></xenon-ui-fields-organizations>\n</div>\n<div class=\"task-field text-left border-bottom\">\n  <xenon-recurrence\n    [isNewTask]=\"data.newTask\"\n    [user]=\"user\"\n    [selectedTask]=\"selectedTask\"\n    [callUpdateRecurrence]=\"callUpdateRecurrence | async\"\n  ></xenon-recurrence>\n</div>\n<div class=\"task-field text-left border-bottom\">\n  <xenon-ui-fields-permissions [selectedTask]=\"selectedTask\" (newRoleList)=\"assignedRoles = $event\"></xenon-ui-fields-permissions>\n</div>\n\n<div class=\"task-field text-left border-bottom\">\n  <div class=\"pl-3\" fxLayoutAlign=\"space-between\">\n    <span>\n      <h6 class=\"text-subtitle1 mb-1\" id=\"form-options\">Form Options</h6>\n      <p class=\"text-caption2\">Assign this recurring task to all locations in the following organizations:</p>\n    </span>\n    <button mat-icon-button (click)=\"fieldExpanded = !fieldExpanded\">\n      <mat-icon>{{ fieldExpanded ? 'expand_more' : 'expand_less' }}</mat-icon>\n    </button>\n  </div>\n\n  <!-- WE DON\"T HAVE THE API CALL FOR THIS SECTION YET -->\n  <!-- <div fxLayoutAlign=\"start center\">\n    <mat-icon matPrefix class=\"color-gray mr-2\" fontSet=\"material-icons-outlined\">assignment</mat-icon>\n    <mat-form-field [ngClass]=\"fieldExpanded ? 'display-block' : 'display-none'\" class=\"w-100 pr-50\">\n      <mat-label>Form Template</mat-label>\n      <mat-select (selectionChange)=\"assignedTemplate = $event\" required>\n        <mat-option *ngFor=\"let template of templateList | async\" [value]=\"template.ID\">{{ template.Name }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div> -->\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\n\nimport { EditTaskTemplateComponent } from './edit-task-template/edit-task-template.component';\nimport { CompleteChecklistTemplateComponent } from './templates/complete-checklist-template/complete-checklist-template.component';\nimport { CompleteFormTemplateComponent } from './templates/complete-form-template/complete-form-template.component';\nimport { UiFieldsModule } from '../ui-fields/ui-fields.module';\nimport { RecurrenceComponent } from './templates/complete-checklist-template/recurrence/recurrence.component';\nimport { InXDaysPipe } from './templates/complete-checklist-template/recurrence/in-x-days.pipe';\nimport { CompleteChecklistTemplateSubtaskListComponent } from './templates/complete-checklist-template/complete-checklist-template-subtask-list/complete-checklist-template-subtask-list.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatListModule } from '@angular/material/list';\nimport { UiSideNavLayoutModule } from '../ui-side-nav-layout/ui-side-nav-layout.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n\n    UiFieldsModule,\n\n    MatDividerModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatDatepickerModule,\n    NgxMaterialTimepickerModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    DragDropModule,\n    MatListModule,\n    UiSideNavLayoutModule,\n  ],\n  entryComponents: [EditTaskTemplateComponent],\n  declarations: [\n    EditTaskTemplateComponent,\n    CompleteChecklistTemplateComponent,\n    CompleteChecklistTemplateSubtaskListComponent,\n    CompleteFormTemplateComponent,\n    RecurrenceComponent,\n    InXDaysPipe,\n  ],\n  providers: [InXDaysPipe],\n  exports: [EditTaskTemplateComponent],\n})\nexport class UiTaskTemplatesModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface ChangePasswordData {\n  currentPassword?: string;\n  hideCurrentPassword?: boolean;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n@Component({\n  selector: 'xenon-change-password',\n  styleUrls: ['./change-password.component.scss'],\n  template: `\n    <h6 mat-dialog-title>Change Password</h6>\n    <div mat-dialog-content [hidden]=\"data?.hideCurrentPassword\">\n      <mat-form-field>\n        <mat-label>Current Password</mat-label>\n        <input matInput [(ngModel)]=\"data.currentPassword\" (change)=\"onInputChange()\" />\n      </mat-form-field>\n    </div>\n    <div mat-dialog-content>\n      <mat-form-field>\n        <mat-label>New Password</mat-label>\n        <input matInput [(ngModel)]=\"data.newPassword\" (change)=\"onInputChange()\" />\n      </mat-form-field>\n    </div>\n    <div mat-dialog-content>\n      <mat-form-field>\n        <mat-label>Confirm Password</mat-label>\n        <input matInput [(ngModel)]=\"data.confirmPassword\" (change)=\"onInputChange()\" />\n      </mat-form-field>\n    </div>\n    <p *ngIf=\"errors.currentSameAsNew\" class=\"error\">Your new password cannot be the same as your previous password.</p>\n    <p *ngIf=\"errors.confirmDoesntMatch\" class=\"error\">Your confirmed password must match your new password</p>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <button mat-flat-button color=\"primary\" [disabled]=\"updateDisabled\" (click)=\"onUpdateClick()\">Update</button>\n    </div>\n  `,\n})\nexport class ChangePasswordComponent {\n  public updateDisabled = true;\n  public errors = { currentSameAsNew: false, confirmDoesntMatch: false };\n\n  constructor(public dialogRef: MatDialogRef<ChangePasswordComponent>, @Inject(MAT_DIALOG_DATA) public data: ChangePasswordData) {}\n\n  public onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public onUpdateClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  public onInputChange() {\n    const currentSameAsNew = this.data.currentPassword === this.data.newPassword && this.data.currentPassword !== '';\n    const confirmDoesntMatch = this.data.newPassword !== this.data.confirmPassword && this.data.confirmPassword !== '';\n    const missingRequiredField = this.data.currentPassword === '' || this.data.newPassword === '' || this.data.confirmPassword === '';\n\n    this.errors.currentSameAsNew = currentSameAsNew;\n    this.errors.confirmDoesntMatch = confirmDoesntMatch;\n\n    this.updateDisabled = currentSameAsNew || confirmDoesntMatch || missingRequiredField;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ApiLocationService, ApiRoleService, Role, Location, RoleLocations, User, ApiUserService } from '@xenon/api';\nimport { UiListSelectDialogService } from '../../ui-list-select/ui-list-select.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { UtilLocalStorageService } from '@xenon/utils';\n@Component({\n  selector: 'xenon-roles',\n  styleUrls: ['./roles.component.scss'],\n  template: `<h6>Roles</h6>\n\n    <div *ngIf=\"roleLocationObjects | async as roleLocationObjects\" class=\"mt-2\">\n      <div class=\"list-row\" fxLayoutAlign=\"space-between center\" *ngFor=\"let roleLocationObj of roleLocationObjects\">\n        <div fxLayoutAlign=\"start center\">\n          <mat-icon>person_outline</mat-icon>\n          <p class=\"mb-0 text-body1 ml-3\">{{ roleLocationObj.RoleName }}</p>\n        </div>\n        <span fxLayoutAlign=\"start center\">\n          <button mat-button (click)=\"openLocationDialog(roleLocationObj)\">{{ getLocationString(roleLocationObj.LocationList) }}</button>\n          <button class=\"remove-button\" (click)=\"removeRole(roleLocationObj.RoleID)\" mat-icon-button>\n            <mat-icon>cancel</mat-icon>\n          </button>\n        </span>\n      </div>\n    </div>\n    <button mat-button (click)=\"openRoleDialog()\" class=\"text-left color-primary mt-3 p-0\">\n      <mat-icon class=\"mr-3\">add_circle_outline</mat-icon>\n      Add Role\n    </button>`,\n})\nexport class RolesComponent implements OnInit {\n  @Input() user: User;\n  @Input() currentOrg: number;\n\n  public roleLocationObjects: BehaviorSubject<RoleLocations[]> = new BehaviorSubject(null);\n  private locationList: Location[];\n  private roleList: Role[];\n\n  constructor(\n    private uiListSelectService: UiListSelectDialogService<Role | Location>,\n    private apiLocationService: ApiLocationService,\n    private apiRoleService: ApiRoleService,\n    private apiUserService: ApiUserService,\n    private localStorage: UtilLocalStorageService\n  ) {}\n\n  public ngOnInit(): void {\n    this.refreshData();\n    this.apiRoleService\n      .getRolesByOrg(this.currentOrg)\n      .pipe(take(1))\n      .subscribe((response) => {\n        this.roleList = response.OrgRoleList;\n      });\n    this.apiLocationService\n      .getLocationsByOrgId(this.currentOrg)\n      .pipe(take(1))\n      .subscribe((locations) => {\n        this.locationList = locations;\n      });\n  }\n\n  public openRoleDialog(): void {\n    let oldSelectedRoles;\n    if (this.roleLocationObjects.value) {\n      oldSelectedRoles = this.roleList.filter((role) => {\n        return this.roleLocationObjects.value.some((obj) => obj.RoleID === role.ID);\n      });\n    }\n    this.uiListSelectService.open({\n      inputList: this.roleList,\n      currentSelectedList: oldSelectedRoles,\n      primaryValueSelector1: 'Name',\n      compareValueBy: 'ID',\n      iconClass: 'person_outline',\n    });\n\n    this.uiListSelectService.closed().subscribe((selectedRoles: Role[]) => {\n      if (!selectedRoles) return;\n\n      let newSelectedRoleLocations;\n      let oldSelectedRoleLocations = [];\n\n      let newRoles;\n      if (this.roleLocationObjects.value) {\n        newRoles = selectedRoles.filter((role) => {\n          return !this.roleLocationObjects.value.some((obj) => obj.RoleID === role.ID);\n        });\n      } else {\n        newRoles = selectedRoles;\n      }\n      newSelectedRoleLocations = this.formatRoleIntoRoleLocation(newRoles);\n\n      if (this.roleLocationObjects.value) {\n        oldSelectedRoleLocations = this.roleLocationObjects.value.filter((obj) => selectedRoles.some((role) => role.ID === obj.RoleID));\n      }\n\n      this.roleLocationObjects.next([...oldSelectedRoleLocations, ...newSelectedRoleLocations]);\n\n      if (newSelectedRoleLocations.length > 0) {\n        this.apiLocationService.getLocationsByOrgId(this.currentOrg).subscribe((locations) => {\n          this.uiListSelectService.open({\n            inputList: locations,\n            primaryValueSelector1: 'Name',\n            compareValueBy: 'ID',\n            iconClass: 'domain',\n          });\n\n          this.uiListSelectService.closed().subscribe((selectedLocations: Location[]) => {\n            if (!selectedLocations) return;\n\n            newSelectedRoleLocations.forEach((role) => {\n              this.addRemoveLocations(role.RoleID, selectedLocations);\n            });\n          });\n        });\n      }\n    });\n  }\n\n  public openLocationDialog(roleLocationObj: RoleLocations): void {\n    const oldSelectedLocations = this.locationList.filter((location) => {\n      return roleLocationObj.LocationList.some((locRole) => locRole.ID === location.ID);\n    });\n    this.uiListSelectService.open({\n      inputList: this.locationList,\n      currentSelectedList: oldSelectedLocations,\n      primaryValueSelector1: 'Name',\n      compareValueBy: 'ID',\n      iconClass: 'domain',\n    });\n\n    this.uiListSelectService.closed().subscribe((selectedLocations: Location[]) => {\n      this.addRemoveLocations(roleLocationObj.RoleID, selectedLocations);\n    });\n  }\n\n  public getLocationString(locations: Location[]): string {\n    if (!locations) return 'Add Location';\n    return locations.length === 1 ? locations[0].Name : `${locations.length} Locations`;\n  }\n\n  public updateOrgUser() {\n    const loggedInUser = this.localStorage.getItem('user');\n    if (loggedInUser.CurrentUser.ID === this.user.ID) {\n      const newUser = {\n        ...loggedInUser.CurrentUser,\n        Orgs: loggedInUser.CurrentUser.Orgs.map((org) =>\n          org.OrgID === loggedInUser.CurrentOrg.ID ? { ...org, RoleLocations: this.roleLocationObjects.value } : org\n        ),\n      };\n      const newLoggedInUser = { ...loggedInUser, CurrentUser: newUser };\n      this.localStorage.setItem('user', newLoggedInUser);\n    }\n    this.apiUserService\n      .updateOrgUser({\n        ID: 0, //This needs to be 0 to trigger using the UserID and OrgID on the backend.\n        UserID: this.user.ID,\n        OrgID: this.currentOrg,\n        JobTitle: this.user.JobTitle,\n        RoleLocations: this.formatForUpdateOrgUser(this.roleLocationObjects.value),\n      })\n      .pipe(take(1))\n      .subscribe((_) => {\n        // Open snackbar letting them know it updated\n      });\n  }\n\n  public removeRole(roleID: number): void {\n    this.roleLocationObjects.next(this.roleLocationObjects.value.filter((obj) => obj.RoleID !== roleID));\n    this.updateOrgUser();\n  }\n\n  private formatRoleIntoRoleLocation(roles: Role[]): RoleLocations[] {\n    let newArray = [];\n    roles.forEach((roleItem) => {\n      if (newArray.length === 0) {\n        return (newArray = [\n          {\n            OrgID: roleItem.OrgID,\n            XenUserID: roleItem.CreatedBy,\n            RoleID: roleItem.ID,\n            RoleName: roleItem.Name,\n            LocationList: [],\n          },\n        ]);\n      } else {\n        newArray.push({\n          OrgID: roleItem.OrgID,\n          XenUserID: roleItem.CreatedBy,\n          RoleID: roleItem.ID,\n          RoleName: roleItem.Name,\n          LocationList: [],\n        });\n      }\n    });\n    return newArray;\n  }\n\n  private formatForUpdateOrgUser(roleLocations: RoleLocations[]): [{ RoleID: number; LocationID: number }] {\n    let newFormattedArray = null;\n    roleLocations.forEach((roleLocation) => {\n      roleLocation.LocationList.forEach((location) => {\n        if (newFormattedArray) {\n          newFormattedArray.push({ RoleID: roleLocation.RoleID, LocationID: location.ID });\n        } else {\n          newFormattedArray = [{ RoleID: roleLocation.RoleID, LocationID: location.ID }];\n        }\n      });\n    });\n    return newFormattedArray;\n  }\n\n  private addRemoveLocations(roleID: number, selectedLocations: Location[]): void {\n    const newRoleLocationObjects = this.roleLocationObjects.value.map((obj) => {\n      if (selectedLocations.length <= 0) return { ...obj, LocationList: [] };\n      if (obj.RoleID === roleID) {\n        return { ...obj, LocationList: selectedLocations };\n      } else {\n        return obj;\n      }\n    });\n    this.roleLocationObjects.next(newRoleLocationObjects);\n    this.updateOrgUser();\n  }\n\n  private refreshData(): void {\n    this.apiUserService\n      .getOrgUserLocation(this.currentOrg, this.user.ID)\n      .pipe(take(1))\n      .subscribe((roleLocationList) => {\n        this.roleLocationObjects.next(roleLocationList.UserLocationRoles);\n      });\n  }\n}\n","import { Component, Inject, OnDestroy, OnInit, ChangeDetectorRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n  ApiUserService,\n  BaseResponse,\n  ChangePasswordRequest,\n  Role,\n  Location,\n  UpdateUserRequest,\n  UploadPhotoResponse,\n  User,\n  ApiAuthenticationService,\n  LoggedInUser,\n} from '@xenon/api';\nimport { UtilCloneService, UtilLocalStorageService } from '@xenon/utils';\nimport { USER_FORM_FIELDS } from './user-form.data';\nimport { BehaviorSubject, of, Subscription } from 'rxjs';\nimport { flatMap, take } from 'rxjs/operators';\nimport { FormGroup } from '@angular/forms';\nimport { UiFormFieldTableComponent } from '../../ui-form/components/ui-form-field-table/ui-form-field-table.component';\nimport { UiFormFieldInput } from '../../ui-form/models/ui-form-field-input';\nimport { UiFormFieldSelect } from '../../ui-form/models/ui-form-field-select';\nimport { UiFormFieldTextArea } from '../../ui-form/models/ui-form-field-text-area';\nimport { UiPromptService } from '../../modules/ui-prompt/services/ui-prompt.service';\nimport { NotificationType, UiNotificationService } from '../../services/ui-notification.service';\nimport { UiFormService } from '../../ui-form/services/ui-form.service';\nimport { ChangePasswordComponent, ChangePasswordData } from './change-password/change-password.component';\nimport { UiConfirmationComponent } from '../ui-confirmation/ui-confirmation.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'xenon-ui-user-form',\n  styleUrls: ['./ui-user-form.component.scss'],\n  templateUrl: './ui-user-form.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UIUserFormComponent implements OnInit, OnDestroy {\n  @ViewChild(UiFormFieldTableComponent) uiFormFieldTableComponent: UiFormFieldTableComponent;\n  public user = ([] as unknown) as User;\n  public accessLevels = ['Administrator', 'Editor', 'Viewer', 'Owner'];\n  public tableHeaders = {\n    LocationName: 'Location',\n    RoleName: 'Role',\n    Delete: 'Delete',\n  };\n  public addRoleError = false;\n  public deleteRoleError = false;\n  public currentTab: BehaviorSubject<string> = new BehaviorSubject('account');\n  public form: FormGroup;\n  public fieldsAsObject: object;\n  public fields: (UiFormFieldInput | UiFormFieldSelect | UiFormFieldTextArea)[];\n  public subscriptions = new Subscription();\n  public loggedInUser: LoggedInUser;\n  public showPhoto: boolean;\n  orgLocations: any[];\n\n  public layoutOptions = {\n    sideNavMenuOptions: [\n      {\n        selector: 'account',\n        title: 'Account',\n        icon: 'admin_panel_settings',\n      },\n      {\n        selector: 'profile',\n        title: 'Profile',\n        icon: 'account_circle',\n      },\n      {\n        selector: 'permissions',\n        title: 'Permissions',\n        icon: 'assignment_ind',\n      },\n    ],\n    pageTitle: 'Edit Location',\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: { user: User; refresh: () => {}; roles: Role[]; locations: Location[] },\n    public uiPromptService: UiPromptService,\n    public notificationService: UiNotificationService,\n    private dialogRef: MatDialogRef<UIUserFormComponent>,\n    private apiUserService: ApiUserService,\n    private authService: ApiAuthenticationService,\n    private utilLocalStorageService: UtilLocalStorageService,\n    private cdr: ChangeDetectorRef,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.fields = UtilCloneService.deepClone(USER_FORM_FIELDS);\n    this.loggedInUser = this.utilLocalStorageService.getItem('user');\n    this.showPhoto = this.user?.PhotoURL?.trim()?.length > 0;\n    this.orgLocations = this.data.locations;\n\n    this.setForm();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  public hidePhoto = () => (this.showPhoto = false);\n\n  public close(): void {\n    if (this.form.pristine) {\n      this.dialogRef.close();\n      return;\n    }\n    if (this.form.valid) this.updateUser();\n    else this.openPrompt();\n  }\n\n  public openChangePassword() {\n    const dialogRef = this.dialog.open(ChangePasswordComponent, {\n      width: '250px',\n      data: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: '',\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((data: ChangePasswordData) => {\n      if (data) {\n        const request: ChangePasswordRequest = {\n          email: this.user.Email,\n          password: data.currentPassword,\n          newpassword: data.newPassword,\n          newpassword2: data.confirmPassword,\n        };\n\n        this.authService\n          .changePassword(request)\n          .then((response: BaseResponse) => {\n            this.notificationService.show(NotificationType.success, 'Action done', 'Password Updated', 5000);\n          })\n          .catch((err) => {\n            this.notificationService.show(NotificationType.error, 'Error', `${err?.error?.Error}`, 5000);\n          });\n      }\n    });\n  }\n\n  public onSelectProfilePic(event): void {\n    if (event.target.files && event.target.files[0]) {\n      const photoToSave: File = event.target.files[0];\n\n      this.apiUserService.uploadPhoto(photoToSave, this.user.ID.toString()).subscribe((response: UploadPhotoResponse) => {\n        this.user.PhotoURL = response.Uploaded;\n        this.form.patchValue({ PhotoURL: response.Uploaded });\n        this.cdr.detectChanges();\n        this.data.refresh();\n      });\n    }\n  }\n\n  public deleteUser() {\n    const confirmationDialog = this.dialog.open(UiConfirmationComponent, {\n      data: {\n        title: 'Delete User?',\n        description: 'This will permanently delete the user.',\n        acceptMessage: 'Delete',\n        declineMessage: 'Cancel',\n      },\n    });\n\n    confirmationDialog\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result) {\n          this.subscriptions.add(\n            this.apiUserService.deleteUser(this.loggedInUser.CurrentOrg.ID, this.user.ID).subscribe((response: BaseResponse) => {\n              if (response.Status === 'success') {\n                this.snackBar.open('User deleted', 'Close', {\n                  duration: 5000,\n                });\n                this.data.refresh();\n              } else {\n                this.snackBar.open(response.Message, 'Close', { duration: 5000 });\n              }\n            })\n          );\n        }\n      });\n  }\n\n  public openUnsavedChangesPrompt(dialogRef: MatDialogRef<any>, prompt: string, stayMessage: string, showValidationErrors = false) {\n    const sub = this.uiPromptService\n      .prompt(prompt)\n      .afterClosed()\n      .pipe(\n        flatMap((r: { ok: boolean }) => {\n          if (r.ok) {\n            if (showValidationErrors) this.showValidationErrors();\n            return of({ Message: stayMessage });\n          } else {\n            dialogRef.close();\n            return of({ Message: 'Changes not saved.' });\n          }\n        })\n      )\n      .subscribe((m) => {\n        this.notificationService.show(NotificationType.success, '', m.Message, 2500);\n      });\n\n    this.subscriptions.add(sub);\n  }\n\n  private updateUser(): void {\n    const request: UpdateUserRequest = {\n      ID: this.user.ID,\n    };\n\n    this.fields.forEach((field) => {\n      const formField = this.form.controls[field.name];\n      if (formField.touched && !formField.pristine && formField.valid && field.name !== 'PhotoUpload') {\n        request[field.name] = formField.value;\n      }\n    });\n    if (this.form.touched && !this.form.pristine) {\n      if (this.user.ID === this.loggedInUser.CurrentUser.ID) {\n        let newLoggedInUser = this.utilLocalStorageService.getItem('user');\n        newLoggedInUser = { ...newLoggedInUser, CurrentUser: { ...this.loggedInUser.CurrentUser, ...request } };\n        this.utilLocalStorageService.setItem('user', newLoggedInUser);\n      }\n      const sub = this.apiUserService.updateUser(request).subscribe(\n        (response: BaseResponse) => {\n          if (response.Status === 'error') {\n            const prompt = `An error occurred updating user. Error: ${response.Message}. Would you like to stay on the page?`;\n            const stayMessage = response.Message;\n            this.openUnsavedChangesPrompt(this.dialogRef, prompt, stayMessage);\n          } else {\n            this.dialogRef.close();\n            this.data.refresh();\n          }\n        },\n        (err) => {\n          const prompt = `An error occurred updating user. Error: ${err?.error?.Error}. Would you like to stay on the page?`;\n          const stayMessage = err;\n          this.openUnsavedChangesPrompt(this.dialogRef, prompt, stayMessage);\n        }\n      );\n\n      this.subscriptions.add(sub);\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  private setForm() {\n    this.user = this.data.user;\n    this.fields.forEach((field) => (field.value = this.user[field.name]));\n\n    this.fieldsAsObject = UiFormService.buildFieldsAsObject(this.fields);\n    this.fieldsAsObject['LocationNames'].options = this.orgLocations\n      ? this.orgLocations.map((location: any) => {\n          return { value: location.ID, label: location.Name };\n        })\n      : [];\n\n    this.fieldsAsObject['Roles'].options = this.data.roles\n      ? this.data.roles.map((role) => {\n          return { value: role.ID, label: role.Name };\n        })\n      : [];\n\n    this.form = UiFormService.buildForm(this.fields);\n\n    // Password should only be required when creating a new user.\n    this.form.get('Password').clearValidators();\n    this.form.get('Password').updateValueAndValidity();\n  }\n\n  private openPrompt() {\n    const prompt = `You have unsaved changes. Would you like to stay on the page and fix errors?`;\n    const stayMessage = 'Fix errors.';\n    this.openUnsavedChangesPrompt(this.dialogRef, prompt, stayMessage, true);\n  }\n\n  private showValidationErrors(): void {\n    this.form.markAllAsTouched();\n    Object.keys(this.form.controls).forEach((key) => {\n      this.form.get(key).updateValueAndValidity();\n    });\n  }\n}\n","<xenon-ui-side-nav-layout [layoutOptions]=\"layoutOptions\" (backClick)=\"close()\" (sideNavClick)=\"currentTab.next($event)\">\n  <div fxLayout=\"row\" class=\"h-100 w-100 background-white\">\n    <form [formGroup]=\"form\" class=\"w-100\">\n      <div *ngIf=\"(currentTab | async) === 'account'\" class=\"w-100\">\n        <section>\n          <h6 class=\"mb-0\">Account</h6>\n        </section>\n        <section>\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n              <h6 class=\"text-subtitle1 mb-1\">Username</h6>\n              <div fxLayoutAlign=\"start bottom\">\n                <mat-icon class=\"mr-3 mt-2 material-icons-outlined\">account_circle</mat-icon>\n                <xenon-ui-form-field-input class=\"w-100\" [fieldOptions]=\"fieldsAsObject['Email']\" [fieldFormGroup]=\"form\"> </xenon-ui-form-field-input>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section>\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n              <h6 class=\"text-subtitle1 mb-1\">Password</h6>\n              <div fxLayoutAlign=\"start center\">\n                <mat-icon class=\"mr-3 material-icons-outlined\">lock</mat-icon>\n                <button mat-button (click)=\"openChangePassword()\" class=\"text-left color-primary p-0\">CHANGE PASSWORD</button>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section>\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n              <h6 class=\"text-subtitle1 mb-1\">Delete Account</h6>\n              <div fxLayoutAlign=\"start center\">\n                <mat-icon class=\"mr-3\">delete_outline</mat-icon>\n                <button mat-button (click)=\"deleteUser()\" class=\"text-left color-primary p-0\">DELETE ACCOUNT</button>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <div *ngIf=\"(currentTab | async) === 'profile'\" class=\"w-100\">\n        <section fxLayoutAlign=\"start center\">\n          <div class=\"mr-3\">\n            <img class=\"edit-user-profile-pic\" *ngIf=\"showPhoto\" src=\"{{ user.PhotoURL }}\" alt=\"Profile Pic\" (error)=\"hidePhoto()\" />\n            <ng-template *ngIf=\"!showPhoto\"><div class=\"background-gray-light edit-user-profile-pic\"></div></ng-template>\n          </div>\n          <div>\n            <h6>{{ user.FirstName }} {{ user.LastName }}</h6>\n            <p class=\"text-body1\">{{ user.JobTitle }}</p>\n            <p class=\"text-body1\">{{ user.Org }}</p>\n            <div fxLayoutAlign=\"start center\">\n              <mat-icon class=\"material-icons-outlined mr-2\">call</mat-icon>\n              <p class=\"m-0 text-body1\">{{ user.Phone.slice(0, 3) + '-' + user.Phone.slice(3, 6) + '-' + user.Phone.slice(6, 10) }}</p>\n            </div>\n            <div fxLayoutAlign=\"start center\">\n              <mat-icon class=\"material-icons-outlined mr-2\">email</mat-icon>\n              <p class=\"m-0 text-body1\">{{ user.Email }}</p>\n            </div>\n          </div>\n        </section>\n\n        <section>\n          <h6 class=\"mb-0\">Profile</h6>\n\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"70\">\n              <xenon-ui-form-field-input [fieldOptions]=\"fieldsAsObject['FirstName']\" [fieldFormGroup]=\"form\"> </xenon-ui-form-field-input>\n            </div>\n\n            <div fxFlex=\"30\">\n              <xenon-ui-form-field-input [fieldOptions]=\"fieldsAsObject['LastName']\" [fieldFormGroup]=\"form\"> </xenon-ui-form-field-input>\n            </div>\n          </div>\n\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"70\">\n              <xenon-ui-form-field-input [fieldOptions]=\"fieldsAsObject['JobTitle']\" [fieldFormGroup]=\"form\"> </xenon-ui-form-field-input>\n            </div>\n          </div>\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n              <xenon-ui-form-field-image-upload\n                [fieldOptions]=\"fieldsAsObject['PhotoUpload']\"\n                [fieldFormGroup]=\"form\"\n                [buttonText]=\"'Select Profile Pic'\"\n                (pictureChanged)=\"onSelectProfilePic($event)\"\n              >\n              </xenon-ui-form-field-image-upload>\n            </div>\n          </div>\n        </section>\n\n        <section>\n          <h6>Contact Information</h6>\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"30\">\n              <xenon-ui-form-field-input [fieldOptions]=\"fieldsAsObject['Phone']\" [fieldFormGroup]=\"form\"> </xenon-ui-form-field-input>\n            </div>\n          </div>\n\n          <div fxLayout=\"row wrap\">\n            <div fxFlex=\"70\">\n              <xenon-ui-form-field-input [fieldOptions]=\"fieldsAsObject['Email']\" [fieldFormGroup]=\"form\"> </xenon-ui-form-field-input>\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <div *ngIf=\"(currentTab | async) === 'permissions'\" class=\"w-100\">\n        <section class=\"roles\">\n          <xenon-roles [user]=\"user\" [currentOrg]=\"loggedInUser.CurrentOrg.ID\"></xenon-roles>\n        </section>\n      </div>\n    </form>\n  </div>\n</xenon-ui-side-nav-layout>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UIUserFormComponent } from './ui-user-form.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { UiFormModule } from '../../ui-form/ui-form.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RolesComponent } from './roles/roles.component';\nimport { UiSideNavLayoutModule } from '../ui-side-nav-layout/ui-side-nav-layout.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatListModule,\n    MatTableModule,\n    UiFormModule,\n    FlexLayoutModule,\n    UiSideNavLayoutModule,\n  ],\n  declarations: [UIUserFormComponent, ChangePasswordComponent, RolesComponent],\n  exports: [UIUserFormComponent],\n})\nexport class UiUserFormModule {}\n","import { UiFormFieldType } from '../../ui-form/enums/ui-form-field-type.enum';\nimport { UiFormFieldValidator } from '../../ui-form/enums/ui-form-field-validator.enum';\nimport { UiFormFieldInput } from '../../ui-form/models/ui-form-field-input';\nimport { UiFormFieldTextArea } from '../../ui-form/models/ui-form-field-text-area';\nimport { UiFormFieldSelect } from '../../ui-form/models/ui-form-field-select';\nimport { UiFormFieldImageUpload } from '../../ui-form/models/ui-form-field-image-upload';\n\nexport const USER_FORM_FIELDS = [\n  // FirstName\n  {\n    name: 'FirstName',\n    label: 'First Name',\n    type: UiFormFieldType.Input,\n    validators: [{ validator: UiFormFieldValidator.Required }],\n  } as UiFormFieldInput,\n\n  // LastName\n  {\n    name: 'LastName',\n    label: 'Last Name',\n    type: UiFormFieldType.TextArea,\n    validators: [{ validator: UiFormFieldValidator.Required }],\n  } as UiFormFieldTextArea,\n\n  // Email\n  {\n    name: 'Email',\n    label: 'Email / Username',\n    type: UiFormFieldType.Input,\n    validators: [{ validator: UiFormFieldValidator.Required }],\n  } as UiFormFieldInput,\n\n  // Phone\n  {\n    name: 'Phone',\n    label: 'Phone',\n    type: UiFormFieldType.Input,\n    validators: [{ validator: UiFormFieldValidator.Required }],\n  } as UiFormFieldInput,\n\n  // PhotoUpload\n  {\n    name: 'PhotoUpload',\n    label: 'Profile Pic',\n    type: UiFormFieldType.File,\n    validators: [],\n  } as UiFormFieldImageUpload,\n\n  // PhotoURL\n  {\n    name: 'PhotoURL',\n    label: 'Photo URL',\n    type: UiFormFieldType.Input,\n    validators: [],\n  } as UiFormFieldInput,\n\n  // JobTitle\n  {\n    name: 'JobTitle',\n    label: 'Job Title',\n    type: UiFormFieldType.Input,\n    validators: [],\n  } as UiFormFieldInput,\n\n  // Org\n  {\n    name: 'Org',\n    label: 'Organization',\n    type: UiFormFieldType.Input,\n    validators: [],\n  } as UiFormFieldInput,\n\n  // Password\n  {\n    name: 'Password',\n    label: 'Password',\n    type: UiFormFieldType.Input,\n    /* Note that this required validation is being removed on the edit user form */\n    validators: [{ validator: UiFormFieldValidator.Required }],\n  } as UiFormFieldInput,\n\n  // LocationNames\n  {\n    name: 'LocationNames',\n    label: 'Locations',\n    type: UiFormFieldType.Select,\n    validators: [],\n    options: [],\n  } as UiFormFieldSelect,\n\n  // Roles\n  {\n    name: 'Roles',\n    label: 'Roles',\n    type: UiFormFieldType.Select,\n    validators: [],\n    options: [],\n  } as UiFormFieldSelect,\n\n  // Location Permission Level\n  {\n    name: 'Permission',\n    label: 'Permission Level',\n    type: UiFormFieldType.Select,\n    validators: [],\n    options: [],\n  } as UiFormFieldSelect,\n];\n","import { Component, Input, OnInit } from '@angular/core';\nimport { User } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-ui-user-photo',\n  styleUrls: ['./ui-user-photo.component.scss'],\n  template: `\n    <span *ngIf=\"userArray.length > 0\" class=\"first-picture\" [ngClass]=\"borderPrimary ? 'border-primary' : 'border-gray'\">\n      <img *ngIf=\"showPhoto\" src=\"{{ userArray[0].PhotoURL }}\" alt=\"user\" (error)=\"hidePhoto()\" class=\"profile-pic\" />\n      <span *ngIf=\"!showPhoto\" class=\"profile-initials color-primary-dark background-primary-light text-center \"\n        >{{ userArray[0].FirstName[0] }}{{ userArray[0].LastName[0] }}</span\n      >\n    </span>\n    <span *ngIf=\"userArray.length > 1\" class=\"middle-picture\" [ngClass]=\"borderPrimary ? 'border-primary' : 'border-gray'\">\n      <img *ngIf=\"userArray[1]?.PhotoURL.trim().length\" src=\"{{ userArray[1].PhotoURL }}\" alt=\"user\" class=\"profile-pic\" />\n      <span *ngIf=\"!userArray[1]?.PhotoURL.trim().length\" class=\"profile-initials color-primary-dark background-primary-light text-center\"\n        >{{ userArray[1].FirstName[0] }}{{ userArray[1].LastName[0] }}</span\n      >\n    </span>\n    <span *ngIf=\"userArray.length > 2\" class=\"last-picture\" [ngClass]=\"borderPrimary ? 'border-primary' : 'border-gray'\">\n      <img *ngIf=\"userArray[2]?.PhotoURL.trim().length\" src=\"{{ userArray[2].PhotoURL }}\" alt=\"user\" class=\"profile-pic\" />\n      <span *ngIf=\"!userArray[2]?.PhotoURL.trim().length\" class=\"profile-initials color-primary-dark background-primary-light text-center\"\n        >{{ userArray[2].FirstName[0] }}{{ userArray[2].LastName[0] }}</span\n      >\n    </span>\n  `,\n})\nexport class UiUserPhotoComponent implements OnInit {\n  @Input() userArray: User[];\n  @Input() borderPrimary = true;\n  public showPhoto: boolean;\n\n  ngOnInit() {\n    this.showPhoto = this.userArray[0]?.PhotoURL?.trim()?.length > 0;\n  }\n\n  public hidePhoto = () => (this.showPhoto = false);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UiUserPhotoComponent } from './ui-user-photo.component';\n\n@NgModule({\n  declarations: [UiUserPhotoComponent],\n  exports: [UiUserPhotoComponent],\n  imports: [CommonModule],\n})\nexport class UiUserPhotoModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nexport type docType = 'license' | 'terms' | 'privacy' | 'none';\n\n@Component({\n  selector: 'xenon-ui-user-terms-document',\n  styleUrls: ['./ui-user-terms-document.component.scss'],\n  template: ` <div fxLayout=\"column\" class=\"h-100\">\n    <h5 class=\"text-center color-primary\">{{ docName }}</h5>\n\n    <p class=\"text-caption1 break-lines overflow-y-auto\">\n      {{ docBody }}\n    </p>\n    <div fxLayoutAlign=\"center\">\n      <button mat-flat-button color=\"primary\" class=\"py-2\" (click)=\"back.emit()\">\n        Back\n      </button>\n    </div>\n  </div>`,\n})\nexport class UiUserTermsDocumentComponent {\n  @Input() set documentType(documentType: docType) {\n    switch (documentType) {\n      case 'license':\n        this.docName = 'License Agreement';\n        this.docBody = licenseBody;\n        break;\n      case 'terms':\n        this.docName = 'Terms and Conditions';\n        this.docBody = termsBody;\n        break;\n      case 'privacy':\n        this.docName = 'Privacy Policy';\n        this.docBody = privacyBody;\n        break;\n    }\n  }\n  @Output() back = new EventEmitter();\n  public docName: string;\n  public docBody: string;\n}\n\nconst privacyBody = `XENON PRIVACY POLICY\nUpdated August 11, 2020\n\n\nINTRODUCTION\n\n\nThis Privacy Policy discloses the privacy practices for the Xenon website (collectively, the “Xenon website” or the “Website” located at www.xenonmed.com).  This policy does not apply to information collected through other means such as by telephone or in person, although that information may be protected by other privacy policies.  Xenon Medical Technologies LLC  (referred to as “Xenon”, us”, “we” and “our”), a Utah limited liability corporation, is committed to protecting your privacy online.  Please read the following to learn what information we collect from you (the “User” or the “End User”) and how we use that information.  If you have any questions about our privacy policy, please email us.\n\nPlease read this Privacy Policy carefully.  By accessing or using our website, you acknowledge that you have read, understand and agree to be bound to all the terms of this privacy policy and our website’s terms of use.  If you do not agree to these terms, exit this page and do not access or use the website.\n\nTHE TYPES OF INFORMATION THAT WE COLLECT\n\n\nTwo types of information are collected from visitors of our website: personally identifiable and non-personally identifiable information.\n\nIf you purchase our products or services, we request certain personally identifiable information from you on our order form.  This may include contact information such as your name, email address, and shipping address, as well as financial information such as a credit card number and its expiration date.  We use the personally identifiable information that we collect for billing purposes and to fill your orders.  If we have trouble processing an order, we also will use this information to contact you.  Note that we do not store any financial data, including debit/credit card details.\n\nIf you contact us by email through our website, we may keep a record of your contact information and correspondence.  In any event, we reserve the right to use your email address and any other personally identifiable information that you provide to us to respond to you and to send you marketing materials for our own products and services.  We will not share your information with outside parties who wish to market other products and services to you.\n\nIf at any time you would like to change your personally identifiable information, or if you no longer wish to receive materials from us or would like your personal information removed from our database, please contact us at info@xenonmed.com.  Alternatively, if you receive materials from us by email you can make use of the “unsubscribe” provision in our communications so that we know that you no longer wish to receive any materials from us.\n\nOur website may incorporate “pixel tags”, “cookies” or similar tracking technologies that allow us to track the actions of visitors of our website.  Pixel tags and cookies are used to collect non- personally identifiable information, such as the name of your internet service provider, the IP address of the computer you are using, the type of browser software and operating system that you use, the date and time you access our website, the website address, if any, from which you linked directly to our website, the website address, if any, to which you travel from our website, your home page customization preferences and other similar traffic-related information.  Cookies are also used to enable certain features on our website.  We may aggregate your information with similar data collected from other visitors to help us improve our website and the products, services, applications, content and features that we provide through our website.  We do not use non-personally identifiable information in any way to create or maintain a personal profile of you or collect personally identifiable information from you.\n\nYou may disable cookies and similar items by adjusting your browser preferences at any time; however, this may limit your ability to take advantage of all the features on this website.  Note that we may not currently respond to web browser “Do Not Track” signals that provide a method to opt out of the collection of information about online activities over time and across third-party websites or online services because, among other reasons, there is no common definition of such signals and no industry-accepted standards for how such signals should be interpreted.\n\nWe may use analytics companies to gather information and aggregate data from our website visitors such as which pages are visited and how often they are visited, and to enable certain features on our websites.  Information is captured using various technologies and may include cookies.\n\nWHAT WE DO WITH THE INFORMATION WE COLLECT ABOUT YOU\n\n\nGenerally, we will not disclose the personally identifiable information that we collect through your use of our website to unaffiliated third parties.  We reserve the right, however, to provide such information to our employees, contractors, agents, and designees to the extent necessary to enable them to perform certain services for us, including order fulfillment and website-related services such as web hosting, to improve website-related services and features, to perform maintenance services, and to distribute advertisements and other marketing materials on our behalf.  We also reserve the right to disclose any personally identifiable information that we collect to any third party if we believe that we are required to do so for any or all of the following reasons:\n\nto comply with the law;\nto comply with legal processes or governmental requests;\nto prevent, investigate, detect, or prosecute criminal offenses or attacks on the technical integrity of our website or our network; and/or\nto protect the rights, property, safety and security of Xenon and its employees, our website visitors, and/or the public.\n\nIf you submit information or a posting to a chat room, page comment, bulletin board, or similar “chat” related portion of this website, the information you submit along with your screen name will be visible to all visitors, and such visitors may share with others.  Therefore, please be thoughtful in what you write and understand that this information may become public.\n\nWe may also share personal information with other third party companies that we collaborate with or hire to perform services on our behalf.  For example, we may hire a company to help us send and manage email, and we might provide the company with your email address and certain other information in order for them to send you an email message on our behalf.  Similarly, we may hire companies to host or operate some of our websites and related computers and software applications.\n\n\nOur website is only offered to those of age 18 and over.  We do not knowingly solicit or collect information from anyone below 18 years of age.  Whenever children use their computers, parents should supervise their activities.\n\nPROTECTION OF INFORMATION\n\n\nOur physical, electronic, and procedural safeguards meet or exceed current federal standards regarding the protection of customer information.  We also require contractors and outside companies who work with us to adhere to strict privacy standards through their contracts with us.  Unfortunately, no security system, or system of transmitting data over the Internet, is impenetrable.  Consequently, while we use commercially reasonable efforts to protect your personally identifiable information, we cannot guarantee the security of our servers, the means by which information is transmitted between your computer and our servers, or any information provided to us or to any third party through or in connection with the website.  Any information that you provide to us is done so entirely at your own risk.\n\nCHANGES TO THIS PRIVACY STATEMENT\n\n\nFrom time to time we review this Privacy Policy to ensure that it complies with applicable law.  Consequently, we reserve the right to update and revise this Privacy Policy at any time.  You will know if this Privacy Policy has been revised since your last visit to the website by referring to the “Updated” date at the top of this page.  Your use of our website constitutes your acceptance of the terms of the Privacy Policy as amended or revised by us from time to time, and you should therefore review this Privacy Policy regularly to ensure that you are aware of its terms.\n\nPRIVACY POLICY IN THE EVENT OF A BUSINESS TRANSFER\n\n\nAs with any other business, we could merge with, or be acquired by another company.  If this occurs, the successor company would acquire the information we maintain, including Personally Identifiable Information.  However, Personally Identifiable Information would remain subject to this Privacy Policy.\n\nPRIVACY POLICIES OF THIRD PARTY WEBSITES\n\n\nThis Privacy Policy only addresses the use and disclosure of information we collect from you on www.xenonmed.com.  Other websites that may be accessible through this Website have their own privacy policies and data collection, use and disclosure practices.  If you link to any such website, we urge you review the website’s privacy policy.  We are not responsible for the policies or practices of third parties.\n\nSOCIAL SECURITY NUMBER PROTECTION POLICY\n\n\nProtecting personal information is important to Xenon.  It is our policy to protect the confidentiality of Social Security numbers (\"SSNs”) that we may receive or collect in the course of business.  We secure the confidentiality of SSNs through various means, including physical, technical, and administrative safeguards that are designed to protect against unauthorized access.  It is our policy to limit access to SSNs to that which is lawful, and to prohibit unlawful disclosure of SSNs.\n\nNOTICE OF PRIVACY PRACTICES (ESPECIALLY WITH RESPECT TO HIPAA)\n\n\nXenon Medical Technologies LLC does not foresee the collection of any individually identifiable health information protected by the Health Insurance Portability and Accountability Act of 1996 (HIPAA).  In the event that such information is collect, Xenon will amend this Privacy Policy with a description of how health information about you may be used and disclosed and how you can get access to your individually identifiable health information.\n\nCONTACTING US\n\n\nIf you have any questions about this Privacy Policy, please contact Xenon at info@xenonmed.com.\n\n`;\n\nconst termsBody = `XENON TERMS AND CONDITIONS\nUpdated August 11, 2020\n\n\nXenon Medical Technologies, Inc. (“Xenon”, “we”, “us”, “our”, “The Company”), is the owner and operator of the website https://www.xenonchex.com and its landing pages (the “Site”).  The following Terms and Conditions govern the use of the Site and Xenon Products (the “Products”). “Client”, “You” and “Your” refers to you, the person accessing this website and by doing so, accepts the Company’s Terms and Conditions.  Please read these Terms and Conditions carefully.\n\nXenon reserves the right to alter these Terms and Conditions, with the new terms becoming effective as of the date or publishing, indicated at the beginning of the post.  These terms are binding upon you and you should read them whenever you use the Site or Products.\n\nPRIVACY\n\nPlease review our Privacy Policy, which governs your visit to the Site.\n\nNO MEDICAL ADVICE\n\nAny information supplied through this website, software applications, services, or by any of our employees or agents, whether by telephone, e-mail, letter, fax, electronic communication, live chat or other form of communication, is for informational purposes or general guidance and does not constitute medical advice or diagnosis.  Health-related information provided through this website is not a substitute for medical advice and it is important that you not make medical decisions without first consulting your personal physician or other healthcare professional.  Xenon products and services are not intended to provide clinical diagnosis, nor to treat, cure or prevent any disease, and that for a medical evaluation of hearing health the purchaser should consult with a medical professional.\n\nThe receipt of any questions or feedback you submit to us does not create a professional relationship and does not create any privacy interests other than those described in our Privacy Policy.\n\nPERMITTED USE\n\nThe Site and Products are not intended for anyone under 18 years of age.  You warrant to Xenon that you will not use the Site or Products for anything that is unlawful or prohibited by these Terms and Conditions or local laws and regulations.  Xenon reserves the right to refuse service, discontinue transactions, terminate accounts, cancel orders, or disable Products at our sole discretion.\n\nCHILDREN\n\nXenon does not sell products or services for purchase by children.  Children should not submit any Personal Information to us.  If you are under 18 years of age, you may only use the Site with your parent or guardian.  Parents should be aware that Xenon’s Privacy Policy governs our use of Personal Information.  That information which is voluntarily given by children or others in chat sessions, email exchanges, bulletin boards, live chats or the like may be used to generate unsolicited mail.  Xenon encourages all parents to instruct their children about the safe and responsible use of their Personal Information while using the Internet.\n\nYOUR ACCOUNT\n\nIf you use this Site, you are responsible for maintaining the confidentiality of your account and other related login and account information and for restricting access to your computer, and you agree to accept responsibility for all activities that occur under your account or password.  You agree to immediately notify us of any unauthorized use of your account or any other breach of security.  In consideration of your use of this website, you agree to (a) provide true, accurate, current and complete information about yourself as prompted by the forms for your account, prescription and order information (the “Account Information”) and (b) maintain and promptly update the Account Information to keep it true, accurate, current and complete.  If you provide any information that is untrue, inaccurate, not current or incomplete, or we have reasonable grounds to suspect that such information is untrue, inaccurate, not current or incomplete, we may suspend or terminate your account and refuse any and all current and future use of this website.  Account Information and certain other information about you are also subject to our Privacy Policy.  We reserve the right to refuse service, terminate accounts, or remove or edit content in our sole discretion.\n\nREVIEWS, COMMENTS, COMMUNICATIONS AND OTHER CONTENT\n\nYou may post reviews, comments and other content and submit suggestions, ideas, comments, questions or other information, so long as the content is not illegal, obscene, threatening, defamatory, invasive of privacy, infringing of intellectual property rights or otherwise injurious to third parties or objectionable and does not consist of or contain software viruses, political campaigning, commercial solicitation, chain letters, mass mailings or any form of “spam.”  We reserve the right (but not the obligation) to remove or edit such content, but we may not regularly review posted content.\n\nIf you do post content or submit material, and unless we indicate otherwise, you grant Xenon a nonexclusive, royalty-free, perpetual, irrevocable and fully sublicensable right to use, reproduce, modify, adapt, publish, translate, create derivative works from, distribute and display such content throughout the world in any media.  You grant Xenon and any of our sublicensees the right to use the name that you submit in connection with such content, if they choose.  You represent and warrant that you own or otherwise control all of the rights to the content that you post; that the content is accurate; that use of the content you supply does not violate this agreement and will not cause injury to any person or entity; and that you will indemnify Xenon for all claims resulting from content you supply.  If you use a public forum, you are solely responsible for your own communications and the consequences of posting those communications.  We take no responsibility and assume no liability for any content posted by you or any third party.\n\nWARRANTIES\n\nNeither Xenon nor its employees, agents, Suppliers, third party information providers, merchants, licensors or the like warrant that the Site, Products, or their operation will be accurate, reliable, uninterrupted or error-free.\n\nWithout limiting the foregoing, everything on the Site or in Xenon Products is provided to you “as is” and “as available” without warranty of any kind, either expressed or implied, covering the products available on the Site and the accuracy of the information contained within your account or within the Site.  Xenon makes no warranties about the accuracy, reliability, completeness or timeliness of the Site or Product’s content, software text, graphics, and links, or about results to be obtained from using the Site or Xenon’s Products and Services.\n\nIf your use of Xenon products or services results in the need for servicing or replacing property, material, equipment or data, Xenon is not responsible for those costs.  No agent or representative has the authority to create any warranty regarding the Site or Products on behalf of Xenon.  Xenon reserves the right to change or discontinue at any time any aspect or feature of the Site or Products.  Xenon does not assume any liability for the contents of any material provided on the Site or in its Products.  Reliance on any information presented on the Site or in Products is at your own risk.\n\nYou acknowledge that, in connection with the Site and Products, information may be transmitted over local exchange, interexchange and Internet backbone carrier lines and through routers, switches and other devices owned, maintained and serviced by third party local exchange and long distance carriers, utilities, Internet service providers and others, all of which are beyond the control and jurisdiction of Xenon.  Accordingly, Xenon assumes no liability for or relating to the delay, failure, interruption or corruption of any data or other information transmitted in connection with use of the Site or Products.\n\nLIMITATION OF LIABILITY\n\nIn no event will Xenon or its affiliates, or any party involved in creating, producing or delivering this service, be liable for any direct, indirect, special or punitive damages and costs (including, without limitation, health problems, incidental and consequential damages, lost profits or damages resulting from lost data or business interruption) arising out of your access, use, misuse or inability to use the Site or Products, or in connection with any failure of performance, error, omission, interruption, defect, delay in operation or transmission, computer virus or line or system failure.  Xenon reserves the right to alter the content of the Site or Products in any way, at any time, for any reason, without prior notification, and will not be liable for possible consequences of such changes.  These limitations apply even if Xenon has been advised of the possibility of such damages.  Because some states and countries do not allow the exclusion or limitation of liability for consequential or incidental damages, the liability in such jurisdictions shall be limited to the extent permitted by the law.\n\nINDEMNIFICATION\n\nUpon a request by Xenon, you agree to defend, indemnify and hold Xenon, its officers, directors, employees and agents, licensors and suppliers harmless from and against any claims, actions or demands, liabilities and settlements, including, without limitation, reasonable legal and accounting fees, resulting from, or alleged to result from, your use of the Site or Products in a manner that violates or is alleged to violate these Terms and Conditions.\n\nSOFTWARE\n\nYou agree to our End User License Agreement (EULA).  Please review our EULA and Third Party Software Agreement, which govern your use of the Xenon Digital Medical Assistant, Xenon Chex Application, other computer software; and, as applicable, associated media, databases, printed materials, web services, and “online” or electronic documentation.\n\nLINKS\n\nOccasionally, we may make available a link to a third party’s website.  These links will let you leave this website.  The linked websites are not under our control, and we are not responsible for the contents of any linked website or any link contained in a linked website, or any changes or updates to such websites.  We are not responsible for webcasting or any other form of transmission received from any linked website.  We provide the links to you only as a convenience.  We do not endorse any third party linked website or its use or contents.\n\nCOPYRIGHTS\n\nXenon retains full copyright ownership, rights and protection in all material contained on the Site (including all software, HTML code, Java applets, Active X controls and other code).  Except as otherwise expressly provided in these Terms and Conditions, you may not copy, distribute, transmit, display, perform, reproduce, publish, license, rewrite, create derivative works from, transfer, or sell any material contained on the Site without the prior consent of the copyright owner.  You agree not to modify any documents, graphics, images or other material found on the Site.\n\nYou may, however, make single copies of materials displayed on the Site for your own personal and noncommercial use only, provided any copies include the copyright and other notices displayed with the materials on the Site.  You may not distribute such copies to others, whether or not for a charge or other consideration, without prior written permission from Xenon or the copyright owner of the copied material.\n\nNone of the material contained on the Site or in the Product may be reverse-engineered, disassembled, decompiled, transcribed, stored in a retrieval system, translated into any language or computer language, retransmitted in any form or by any means (electronic, mechanical, photo reproduction, recordation or otherwise), resold or redistributed without the prior written consent of Xenon.\n\nTRADEMARKS\n\nAll rights in the product names, company names, trademarks, service marks, slogans, logos, product packaging and designs (“The Xenon Marks”) of all Xenon’s or third-party products or services, whether or not appearing in large print or with the trademark symbol, belong exclusively to Xenon or their respective owners, and are protected from reproduction, imitation, dilution or confusing or misleading uses under national and international trademark and copyright laws.  You may not use the Xenon Marks without written authorization from Xenon and by using the Site, you acknowledge that the Xenon Marks are valid trademarks.  Third party trademarks used on the Site are the property of their respective owners.\n\nTERMINATION\n\nYou agree that Xenon may terminate your use of the Site or Products for any reason, with or without notice to you.  You also agree that Xenon may modify or discontinue the Site or Products, with or without notice to you and that we will not be liable to you or any third party as a result of such modification or discontinuation.\n\nGENERAL PROVISIONS\n\nYou expressly agree that exclusive jurisdiction for any dispute with Xenon, or in any way relating to your use of the Site or Products (“Legal Action”), shall be the courts of Utah, State of Utah.  You further agree and expressly consent to the exercise of personal jurisdiction in the courts of the State of Utah in connection with any such dispute.  Any Legal Action that is subject to the jurisdiction of federal courts shall be instituted in a federal court in the District of Utah.  These Terms and Conditions are governed by the internal substantive laws of the State of\nUtah, without regard to conflict of law principles.  If any provision of these Terms and Conditions are found to be invalid by any court having competent jurisdiction, the invalidity of such provision shall not affect the validity of the remaining provisions of these Terms and Conditions, which shall remain in full force and effect.  No waiver of these Terms and Conditions shall be deemed a further or continuing waiver of such term or condition or any other term or condition.  Any cause of action you may have with respect to Xenon must be commenced within one year after the claim or cause of action arises or such claim or cause of action is barred.\n\nNOTIFICATION OF CHANGES\n\nXenon reserves the right to amend this Agreement at any time.  You are bound by any such revisions and should therefore periodically visit this page to review the then-current Terms and Conditions to which you are bound.  Your use of the Site or Products after the posting of modifications to the Terms and Conditions will constitute your acceptance of this agreement, as modified.  If at any time you do not wish to accept this agreement, you are not thereafter authorized to use the Site or Products.\n\nSURVIVAL\n\nThe provisions “Disclaimer of Warranties,” “Limitation of Liability,” “Indemnification,” “Trademarks,” and “General Provisions” will survive termination of this agreement.\n\nQUESTIONS\n\nIf you have any questions about these Terms and Conditions, please contact Xenon at info@xenonmed.com.\n`;\n\nconst licenseBody = `XENON END USER LICENSE AGREEMENT\nUpdated August 11, 2020\n\n\nIMPORTANT—PLEASE READ CAREFULLY: This End-User License Agreement is a legal contract between You and Xenon Medical Technologies, Inc., (“Licensor”) that covers your use of the Xenon Medical Digital Assistant and Xenon Chex Application, which include computer software and, as applicable, associated media, databases, printed materials, web services, and “online” or electronic documentation (the “Software“).\n\nBY INSTALLING OR OTHERWISE USING THE SOFTWARE, YOU AGREE TO BE BOUND BY THE TERMS OF THIS AGREEMENT AND THE ADDITIONAL TERMS FOUND ON https://www.xenonchex.com/terms, INCLUDING THE DISCLAIMER OF WARRANTIES, LIMITATIONS OF LIABILITY AND TERMINATION PROVISIONS BELOW.\n\nIF YOU DO NOT ACCEPT THESE TERMS OF THIS END USER LICENSE AGREEMENT AND/OR THE ADDITIONAL TERMS, YOU WILL NOT BE GRANTED ACCESS TO USE THE SOFTWARE OR THE LICENSOR WEB SITE (www.xenonmed.com, or the “Site”).\n\nIF YOU DO NOT AGREE TO THE TERMS OF THIS END USER LICENSE AGREEMENT AND/OR THE ADDITIONAL TERMS, DO NOT INSTALL OR USE THE SOFTWARE, AND EXIT NOW.\n\nUSE OF THE SOFTWARE WITHOUT SIGNIFYING YOUR AGREEMENT TO THESE TERMS IN THE MANNER INDICATED ABOVE IS STRICTLY PROHIBITED.\n\nADDITIONAL TERMS\n\nThis End User License Agreement, together with the Additional Terms, as they might change from time-to-time, shall constitute the entire agreement (collectively the Agreement).\n\nNOT MEDICAL ADVICE\n\nThe information expressed in the Software and the Site is not medical advice.  You acknowledge that the Software does not and should not be construed to provide health-related or medical advice, or clinical decision support, or to provide, support or replace any diagnosis, recommendation, advice, treatment or decision by an appropriately trained and licensed physician, or to create a patient-physician relationship. You hereby agree that the Software will not be relied on or used, in whole or in part, for any of the preceding purposes by or on Your behalf with respect to any individual(s).  If You believe You suffer from any medical condition, whether or not the Software test results support this belief, You should immediately seek professional medical advice or consult with a qualified medical professional.\n\nDISCLAIMER OF WARRANTIES\n\nTHE SOFTWARE AND THE SITE ARE COPYRIGHTED AND LICENSED (NOT SOLD).  THIS AGREEMENT REPRESENTS THE ENTIRE AGREEMENT CONCERNING THE SOFTWARE BETWEEN YOU AND LICENSOR, AND IT SUPERSEDES ANY PRIOR PROPOSAL, REPRESENTATION, OR UNDERSTANDING BETWEEN THE PARTIES.\n\nTHE SOFTWARE IS LICENSED “WHERE IS” AND “AS IS,” AND LICENSOR DISCLAIMS ANY AND ALL WARRANTIES TO THE EXTENT PERMITTED BY LAW, WHETHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES AS TO THE ACCURACY, RELIABILITY, COMPLETENESS, OR CORRECTNESS OF THE SOFTWARE, AND OF ANY TEST RESULTS.\n\nTO THE EXTENT PERMITTED BY LAW, LICENSOR DISCLAIMS, AMONG OTHERS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND ALL WARRANTIES ARISING FORM COURSE OF DEALING OR USAGE OF TRADE.\n\nYOU ACKNOWLEDGE THAT THERE ARE RISKS INHERENT IN THE USE OF THE SOFTWARE, HARDWARE AND INTERNET CONNECTIVITY THAT MAY RESULT IN INTERRUPTIONS OR ERRORS IN THE SERVICE, LOSS OF PRIVACY, CONFIDENTIALITY, INFORMATION OR PROPERTY, AS WELL AS OTHER LOSSES, DAMAGES OR ADVERSE OCCURRENCES, REGARDLESS OF THE MEASURES TAKEN TO AVOID SUCH OCCURRENCES.\n\nIN NO EVENT WILL LICENSOR BE LIABLE TO YOU OR ANY THIRD PARTY IN CONTRACT, TORT, STRICT LIABILITY OR OTHERWISE, FOR ANY INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, INACCURATE OR INCOMPLETE TEST RESULTS, LOST PROFITS OR DAMAGES EXTENDING FROM THE LOSS OR CORRUPTION OF DATA, AND CLAIMS RELATED TO TEST RESULTS, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\nLICENSE GRANT\n\nLicensor hereby grants to You, and You accept, a nonexclusive and nontransferable personal license to use the Software according to the terms set out herein.  The license granted extends only to use of the Software in connection with services offered by Licensor.  All other uses are strictly prohibited.\n\nThe Software may only be used by You personally.  Use by an individual other than yourself is not permitted without separate authorization from Licensor.  You hereby agree not to use, promote, advertise, market, publish, transfer, distribute, rent, license, sell, copy, modify, create derivative works from, or use in a timesharing arrangement, the Software, or any copy thereof, in whole or in part, except as expressly provided in this Agreement.  You hereby agree not to reverse engineer, disassemble, decompile, translate, modify, violate, circumvent or otherwise tamper with the Software, or otherwise attempt to derive the source code of any of the Software’s software.  You hereby agree not to develop, distribute or sell applications that are capable of launching, being launched from, or are otherwise integrated with, the Software.  You hereby agree not to use and You are granted no license or right with respect to any current or future sign, logo, mascot, insignia, slogan, trade name, trademark, or service mark of Licensor or its affiliates, in whole or in part, for any purpose, including, without limitation, any marketing, advertising, publicity, or promotion in connection with the Software or otherwise.\n\nLicensor reserves the right to refuse service, terminate accounts, remove or edit content, or cancel logins in its sole and absolute discretion.\n\nLICENSOR’S RIGHTS\n\nYou acknowledge and agree that the Software is the proprietary property of Licensor and is protected under copyright and / or patent law both in the U.S. and in countries foreign thereto.  You further acknowledge and agree that all right, title, and interest in and to the Software, including intellectual property rights associated therewith, are and shall remain with Licensor.  This Agreement does not convey to You an interest in or to the Software, but only a limited right of use revocable in accordance with the terms of this Agreement.\n\nYOUR ACCOUNT\n\nYou may be given an account and/or password that grants You access to the Software and/or additional features accessible through the Site.  You are responsible for maintaining the confidentiality of your account or password.  You may not transfer this account or the License granted hereunder to a third party without prior written consent of Licensor.  You agree to accept full responsibility for all activities that occur under your account or password.  Licensor reserves the right to refuse service, terminate accounts, remove or edit content, in its sole discretion.\n\nRESTRICTIONS\n\nYou agree that You may not modify, adapt, translate, reverse engineer, or create derivative works based upon the Software or any part thereof.  You also agree that You may not reverse assemble, reverse compile, or otherwise translate the Software or any portion thereof.\nYou further agree that You will not assign, sublicense, transfer, pledge, lease, rent, loan, or share your rights under this Agreement.\n\nYou still further agree that You may not use the Software for the direct benefit of, or for purpose of rendering services to, any third party business entities or organizations, except as authorized by Licensor.\n\nADDITIONAL TERMS\n\nTERM\n\nThis Agreement is effective upon your acceptance of its terms and conditions and your successful activation of the Software and shall continue until terminated.  Licensor may terminate this Agreement with or without notice to You at any time and for any reason.  Upon termination of this Agreement, You shall cease all access to and use of the Software and destroy all copies, full or partial, of the Software.  Licensor reserves the right to modify, suspend, discontinue or disable access to the Software (or any part or content thereof), and may impose limits on the use of or access to certain features or portions of the Software, at any time with or without notice to You, and Licensor will not be liable to You or to any third party should it exercise such rights.\n\n3rd PARTY SOFTWARE\n\nThe Software may contain or be provided with open source libraries, components, utilities and other 3rd Party software (collectively, “3rd Party Software”), which 3rd Party Software may have applicable license terms as identified on the 3rd Party Software Agreements section designated by Licensor or otherwise provided by Licensor.  Notwithstanding anything to the contrary herein, use of the 3rd Party Software shall be subject to the applicable 3rd Party Software license terms and conditions to the extent required by the applicable licensor (which terms shall not restrict the license rights granted to You hereunder but may contain additional rights).  Licensor expressly disclaims any warranty or other assurance to you regarding the 3rd Party Software.\n\nMAINTENANCE OF EQUIPMENT AND SOFTWARE\n\nYou acknowledge that updates to the Software may cause changes to the minimum system requirements to use the Software.  Licensor reserves the right to make changes to the minimum system requirements from time to time.  You agree to obtain, maintain and operate—at your own expense—all hardware and non-Xenon software required to use the Software.  You agree, at your own expense, to periodically update the same as necessary due to updates in the Software.\n\nDISPUTE RESOLUTION\n\nThis Agreement shall be governed in all respects by the laws of the State of Utah as they apply to agreements entered into and to be performed entirely within Utah between Utah residents, without regard to conflict of law provisions.  You agree that any claim or dispute You may have against Licensor must be resolved by a court located in Utah County, Utah, except as otherwise agreed by the parties.  You agree to submit to the personal jurisdiction of the courts located within Utah County, Utah, for the purpose of litigating all such claims or disputes.\n\nNO AGENCY\n\nNo agency, partnership, joint venture, employee-employer or franchiser-franchisee relationship is intended or created by this Agreement.\n\nAMENDMENTS TO THE AGREEMENT\n\nLicensor may amend this Agreement at any time by posting the amended terms on the Site at https://www.xenonmed.com/terms-eula.  Except as stated elsewhere, all amended terms shall automatically be effective 30 days after they are initially posted.  Additionally, we will endeavor to notify You of any such change using the contact information that You provided to us when You register on the site.\n\nThis Agreement may not be otherwise amended except in a writing signed by You and Licensor.  This Agreement sets forth the entire understanding and agreement between us with respect to the subject matter hereof.  The following Sections survive any termination of this Agreement: Disclaimer of Warranties, Limitation of Liability, Indemnity, Restrictions, Dispute Resolution, and Proprietary Information.\n\nLIMITATION OF LIABILITY\n\nLicensor’s cumulative liability to You or any other party for any loss or damages resulting from any claims, demands, or actions arising out of or relating to this Agreement or the Software shall not exceed the license fee paid to Licensor for the use of the Software and Site, if any.\nUnder no circumstances shall Licensor be responsible for user error including, but not limited to, erroneous data input, misuse of the Software or Site, incorrect interpretation of data or missing data.  Licensor shall additionally not be responsible for errors in the transmission or storage of your data that are beyond its control or supervision.\n\nPRIVACY POLICY\n\nYou hereby agree to Licensor’s Privacy Policy.  If you have additional questions about Licensor’s Privacy Policy, refer to www.xenonmed.com/privacy and/or contact Licensor directly.\n\nPROPRIETARY INFORMATION\n\nThe Software and all information and materials related thereto constitute proprietary information and trade secrets of Licensor.  You shall use your best efforts to ensure the confidentiality of the Software and all related materials and information supplied by Licensor.\nYou warrant that You will not disclose, use, modify, copy, or reproduce the Software or any of the information or materials supplied by Licensor except in accordance with this Agreement or after first obtaining the written permission of Licensor.\n\nYou specifically agree to prevent your employees, agents, attorneys and representatives, if any, from disclosing such proprietary information and shall hold Licensor harmless and protect and indemnify Licensor in the event of any disclosure by such persons.\n\nThe non-disclosure provisions of this section shall continue beyond the term of the contract and shall be binding and enforceable even after termination of this Agreement.\n\nINDEMNITY\n\nYou will indemnify and hold the Licensor, including our officers, directors, agents, subsidiaries, joint ventures and employees (collectively, “Indemnitees”), harmless from any costs, expenses (including legal costs and attorneys’ fees), liabilities, penalties, fines, losses, damages, demands, third-party claims, judgments and/or other forms of liability, whether arising from personal or bodily injury, illness, or death, or tangible or intangible property damage or loss, or otherwise (collectively, “Claims”), in connection with, arising out of, or relating to: (a) any use of or inability to use, or reliance on, the Software by or on behalf of user; (b) any misstatements, inaccuracies, errors, omissions, delays, or interruptions in connection with the application; and/or (c) any diagnosis, recommendation, advice, treatment, procedure, or other action by or on behalf of user in connection with the purchase, download, access, viewing, or use of, inability to use, or reliance on the application with respect to any individual(s), regardless of the legal basis for the claim(s).  You hereby assume and bear the entire risk with respect to the foregoing, and to the fullest extent permitted by law, releases Licensor and its Indemnitees from any liability relating to the foregoing.\n\nTRADEMARKS\n\nXenon Medical TechnologiesTM, Xenon Digital Medical AssistantTM, and Xenon ChexTM and additional trademarks identified at www.xenonmed.com are trademarks of Licensor.  All rights reserved.  No right, license, or interest to such trademarks are granted hereunder, and You agree that no such right, license, or interest shall be asserted by You with respect to such trademarks.\n\nGOVERNING LAW\n\nThis Agreement shall be construed and governed in accordance with the laws of the State of Utah, without regard to the choice of law provisions of that state, and all actions, regardless of the form or nature of such, to enforce this license or for the breach of same shall be brought within one (1) year from the occurrence of the grounds for such action in either state or federal court in Utah County, Utah.\n\nCOSTS OF LITIGATION\n\nIf any action is brought by either party to this Agreement against the other party regarding the subject matter hereof, the prevailing party shall be entitled to recover, in addition to any other relief granted, reasonable attorney fees and expenses of litigation.\n\nSEVERABILITY\n\nShould any term of this Agreement be declared void or unenforceable by any court of competent jurisdiction, such declaration shall have no effect on the remaining terms hereof.\n\nNO WAIVER\n\nThe failure of either party to enforce any rights granted hereunder or to take action against the other party in the event of any breach hereunder shall not be deemed a waiver by that party as to subsequent enforcement of rights or subsequent actions in the event of future breaches.\nIt is specifically agreed that the breach of this Agreement, and in particular the section concerning non-disclosure of proprietary information, will result in irreparable injury and the party who claims such a breach shall be entitled to specific performance and injunctive relief to correct and enjoin such breach in addition to all other remedies which might be available.`;\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UiUserPhotoModule } from '../ui-user-photo/ui-user-photo.module';\nimport { UiUserTermsDocumentComponent } from './ui-user-terms-document.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, FlexLayoutModule, UiUserPhotoModule],\n  declarations: [UiUserTermsDocumentComponent],\n  exports: [UiUserTermsDocumentComponent],\n})\nexport class UiUserTermsDocumentModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-ui-prompt',\n  styleUrls: ['./ui-prompt.component.scss'],\n  template: `\n    <div mat-dialog-title>Prompt</div>\n    <div mat-dialog-content>{{ question }}</div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n      <button mat-flat-button (click)=\"onNoClick()\">No Thanks</button>\n      <button mat-flat-button color=\"primary\" (click)=\"onOkClick()\">Ok</button>\n    </div>\n  `,\n})\nexport class UiPromptComponent {\n  question: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<UiPromptComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { ok: boolean; question: string }\n  ) {\n    this.question = this.data.question;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ ok: false });\n  }\n\n  onOkClick() {\n    this.dialogRef.close({ ok: true });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { UiPromptComponent } from '../components/ui-prompt/ui-prompt.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UiPromptService {\n  constructor(public dialog: MatDialog) {}\n\n  prompt(message): MatDialogRef<UiPromptComponent> {\n    return this.dialog.open(UiPromptComponent, {\n      width: '250px',\n      height: '220px',\n      data: {\n        question: message,\n        ok: false,\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UiPromptComponent } from './components/ui-prompt/ui-prompt.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [UiPromptComponent],\n  imports: [CommonModule, MatDialogModule, MatButtonModule, FlexModule],\n})\nexport class UiPromptModule {}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, TextOnlySnackBar } from '@angular/material/snack-bar';\nimport { MatSnackBarConfig } from '@angular/material/snack-bar/snack-bar-config';\n\nexport enum NotificationType {\n  success = 'success',\n  warning = 'warning',\n  error = 'error',\n  info = 'info',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UiNotificationService {\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  public show(type: NotificationType, title: string, message: string, duration?: number): MatSnackBarRef<TextOnlySnackBar> {\n    const config: MatSnackBarConfig = {};\n    config.panelClass = `ui-notification-${type}`;\n    if (duration) {\n      config.duration = duration;\n    }\n    return this.matSnackBar.open(message, title, config);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UiScrollService {\n  constructor() {}\n\n  static scrollTo(elementId: string, hard: boolean = false): void {\n    const target = document.getElementById(elementId);\n    if (target) {\n      target.scrollIntoView({\n        behavior: hard ? 'auto' : 'smooth',\n      });\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UiFormFieldImageUpload } from '../../models/ui-form-field-image-upload';\n\n@Component({\n  selector: 'xenon-ui-form-field-image-upload',\n  styleUrls: ['./ui-form-field-image-upload.component.scss'],\n  template: `\n    <mat-form-field appearance=\"outline\" [formGroup]=\"fieldFormGroup\">\n      <mat-label>{{ fieldOptions.label }}</mat-label>\n      <ngx-mat-file-input\n        formControlName=\"{{ fieldOptions.name }}\"\n        (change)=\"uploadChanged($event)\"\n      ></ngx-mat-file-input>\n      <mat-icon matSuffix>folder</mat-icon>\n    </mat-form-field>\n  `,\n})\nexport class UiFormFieldImageUploadComponent {\n  @Input() fieldFormGroup: FormGroup;\n  @Input() fieldOptions: UiFormFieldImageUpload;\n  @Input() buttonText = 'Upload Image';\n  @Output() pictureChanged = new EventEmitter<HTMLInputElement>();\n\n  public uploadChanged($event): void {\n    this.pictureChanged.emit($event);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UiFormFieldInput } from '../../models/ui-form-field-input';\n\n@Component({\n  selector: 'xenon-ui-form-field-input',\n  styleUrls: ['./ui-form-field-input.component.scss'],\n  template: `\n    <mat-form-field [formGroup]=\"fieldFormGroup\">\n      <mat-label>{{ fieldOptions.label }}</mat-label>\n      <input\n        type=\"{{ inputType }}\"\n        matInput\n        formControlName=\"{{ fieldOptions.name }}\"\n      />\n    </mat-form-field>\n  `,\n})\nexport class UiFormFieldInputComponent {\n  @Input() fieldFormGroup: FormGroup;\n  @Input() fieldOptions: UiFormFieldInput;\n  @Input() inputType = 'text';\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UiFormFieldSelect } from '../../models/ui-form-field-select';\n\n@Component({\n  selector: 'xenon-ui-form-field-select',\n  styleUrls: ['./ui-form-field-select.component.scss'],\n  template: `\n    <mat-form-field [formGroup]=\"fieldFormGroup\">\n      <mat-label>{{ fieldOptions.label }}</mat-label>\n      <mat-select formControlName=\"{{ fieldOptions.name }}\">\n        <mat-option *ngFor=\"let o of fieldOptions.options\" [value]=\"o.value\">{{ o.label }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `,\n})\nexport class UiFormFieldSelectComponent implements OnInit {\n  @Input() fieldFormGroup: FormGroup;\n  @Input() fieldOptions: UiFormFieldSelect;\n\n  ngOnInit(): void {\n    const selectedQuery = this.fieldOptions.options.filter((o) => o.selected);\n    const selected = selectedQuery.length ? selectedQuery[0] : null;\n    if (selected) {\n      this.fieldFormGroup.controls[this.fieldOptions.name].setValue(selected.value);\n    }\n\n    this.fieldFormGroup.controls[this.fieldOptions.name].valueChanges.subscribe((v) => {\n      this.fieldOptions.value = v;\n    });\n  }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'xenon-ui-form-field-table',\n  styleUrls: ['./ui-form-field-table.component.scss'],\n  template: `\n    <mat-table #table [dataSource]=\"dataSource\">\n      <ng-container [matColumnDef]=\"tableData\" *ngFor=\"let tableData of objectKeys(columnHeader)\">\n        <mat-header-cell *matHeaderCellDef>{{ columnHeader[tableData] }}</mat-header-cell>\n        <mat-cell *matCellDef=\"let element; let i = index\">\n          <span>{{ element[tableData] }}</span>\n\n          <span *ngIf=\"columnHeader[tableData] === 'Delete'\" (click)=\"onDeleteRow(element, i)\">\n            <mat-icon color=\"primary\">\n              delete\n            </mat-icon>\n          </span>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"objectKeys(columnHeader)\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: objectKeys(columnHeader)\"></mat-row>\n    </mat-table>\n  `,\n})\nexport class UiFormFieldTableComponent implements OnInit {\n  @Input() tableData;\n  @Input() columnHeader;\n  @Output() deleteRow = new EventEmitter<any>();\n  public objectKeys = Object.keys;\n  public dataSource: MatTableDataSource<any>;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.tableData);\n  }\n\n  public onDeleteRow(element, index) {\n    const deleted = { data: element, index: index };\n    this.deleteRow.emit(deleted);\n  }\n\n  public addElement(element) {\n    this.tableData ? this.tableData.push(element) : (this.tableData = [element]);\n    // this.tableData.push(element);\n    this.dataSource = new MatTableDataSource(this.tableData);\n  }\n\n  public refreshTable(index) {\n    this.tableData.splice(index, 1);\n    this.dataSource = new MatTableDataSource(this.tableData);\n    this.cdr.detectChanges();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UiFormFieldTextArea } from '../../models/ui-form-field-text-area';\n\n@Component({\n  selector: 'xenon-ui-form-field-text-area',\n  styleUrls: ['./ui-form-field-text-area.component.scss'],\n  template: `\n    <mat-form-field [formGroup]=\"fieldFormGroup\">\n      <mat-label>{{ fieldOptions.label }}</mat-label>\n      <textarea matInput formControlName=\"{{ fieldOptions.name }}\"></textarea>\n    </mat-form-field>\n  `,\n})\nexport class UiFormFieldTextAreaComponent {\n  @Input() fieldFormGroup: FormGroup;\n  @Input() fieldOptions: UiFormFieldTextArea;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'xenon-ui-form-field-x-email',\n  templateUrl: './ui-form-field-x-email.component.html',\n  styleUrls: ['./ui-form-field-x-email.component.scss'],\n})\nexport class UiFormFieldXEmailComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>ui-form-field-x-email works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'xenon-ui-form-field-x-phone',\n  templateUrl: './ui-form-field-x-phone.component.html',\n  styleUrls: ['./ui-form-field-x-phone.component.scss'],\n})\nexport class UiFormFieldXPhoneComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>ui-form-field-x-phone works!</p>\n","export enum UiFormFieldType {\n  Input = 'input',\n  Select = 'select',\n  TextArea = 'text-area',\n  Checkbox = 'checkbox',\n  Radio = 'radio',\n  File = 'file',\n}\n","export enum UiFormFieldValidator {\n  Required = 'required',\n  Email = 'email',\n  Max = 'max',\n  MaxLength = 'max-length',\n  Min = 'min',\n  MinLength = 'min-length',\n  Pattern = 'pattern',\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UiFormFieldInput } from '../models/ui-form-field-input';\nimport { UiFormFieldSelect } from '../models/ui-form-field-select';\nimport { UiFormFieldTextArea } from '../models/ui-form-field-text-area';\nimport { UiFormFieldValidator } from '../enums/ui-form-field-validator.enum';\nimport * as _ from 'lodash-es';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UiFormService {\n  static buildForm(\n    fields: (UiFormFieldInput | UiFormFieldSelect | UiFormFieldTextArea)[]\n  ): FormGroup {\n    const formGroupBuild = new FormGroup({});\n    fields.forEach(\n      (field: UiFormFieldInput | UiFormFieldSelect | UiFormFieldTextArea) => {\n        const arrayOfValidators = [];\n        field.validators.forEach((v) => {\n          switch (v.validator) {\n            case UiFormFieldValidator.Required:\n              arrayOfValidators.push(Validators.required);\n              break;\n            case UiFormFieldValidator.Email:\n              arrayOfValidators.push(Validators.email);\n              break;\n            case UiFormFieldValidator.Max:\n              arrayOfValidators.push(Validators.max(v.value));\n              break;\n            case UiFormFieldValidator.MaxLength:\n              arrayOfValidators.push(Validators.maxLength(v.value));\n              break;\n            case UiFormFieldValidator.Min:\n              arrayOfValidators.push(Validators.min(v.value));\n              break;\n            case UiFormFieldValidator.MinLength:\n              arrayOfValidators.push(Validators.minLength(v.value));\n              break;\n            case UiFormFieldValidator.Pattern:\n              arrayOfValidators.push(Validators.pattern(v.value));\n              break;\n          }\n        });\n        formGroupBuild.addControl(\n          field.name,\n          new FormControl(field.value, arrayOfValidators)\n        );\n      }\n    );\n    return formGroupBuild;\n  }\n\n  static buildFieldsAsObject(\n    fields: (UiFormFieldInput | UiFormFieldSelect | UiFormFieldTextArea)[],\n    property: string = 'name'\n  ): object {\n    return _.keyBy(fields, property);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { UiFormFieldTextAreaComponent } from './components/ui-form-field-text-area/ui-form-field-text-area.component';\nimport { UiFormFieldInputComponent } from './components/ui-form-field-input/ui-form-field-input.component';\nimport { UiFormFieldImageUploadComponent } from './components/ui-form-field-image-upload/ui-form-field-image-upload.component';\nimport { UiFormFieldSelectComponent } from './components/ui-form-field-select/ui-form-field-select.component';\nimport { UiFormFieldTableComponent } from './components/ui-form-field-table/ui-form-field-table.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { UiFormService } from './services/ui-form.service';\nimport { UiFormFieldXPhoneComponent } from './components/ui-form-field-x-phone/ui-form-field-x-phone.component';\nimport { UiFormFieldXEmailComponent } from './components/ui-form-field-x-email/ui-form-field-x-email.component';\n\n@NgModule({\n  providers: [UiFormService],\n  declarations: [\n    UiFormFieldInputComponent,\n    UiFormFieldImageUploadComponent,\n    UiFormFieldSelectComponent,\n    UiFormFieldTableComponent,\n    UiFormFieldTextAreaComponent,\n    UiFormFieldXPhoneComponent,\n    UiFormFieldXEmailComponent,\n  ],\n  exports: [\n    UiFormFieldInputComponent,\n    UiFormFieldImageUploadComponent,\n    UiFormFieldSelectComponent,\n    UiFormFieldTableComponent,\n    UiFormFieldTextAreaComponent,\n    UiFormFieldXPhoneComponent,\n    UiFormFieldXEmailComponent,\n  ],\n  imports: [\n    // Core Modules\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    // Third Party\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MaterialFileInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTableModule,\n    MatFormFieldModule,\n  ],\n})\nexport class UiFormModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { UiNotificationService } from './services/ui-notification.service';\nimport { UiChartDonutComponent } from './components/ui-chart-donut/ui-chart-donut.component';\nimport { ChartistModule } from 'ng-chartist';\nimport { UiStringSearchComponent } from './components/ui-string-search/ui-string-search.component';\nimport { UiCalendarDatepickerComponent } from './components/ui-calendar-datepicker/ui-calendar-datepicker.component';\nimport { UiDateRangePickerComponent } from './components/ui-date-range-picker/ui-date-range-picker.component';\nimport { UiScrollService } from './services/ui-scroll.service';\nimport { ApiModule, TokenInterceptor } from '@xenon/api';\nimport { UiFormModule } from './ui-form/ui-form.module';\n\n@NgModule({\n  providers: [\n    UiNotificationService,\n    UiScrollService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true,\n    },\n  ],\n  exports: [UiChartDonutComponent, UiCalendarDatepickerComponent, UiDateRangePickerComponent, UiStringSearchComponent, UiFormModule],\n  imports: [\n    // Core Modules\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    // Library Modules\n    ApiModule,\n\n    // Third Party Modules\n    ChartistModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatTreeModule,\n    NgbModule,\n\n    // In House Modules\n    UiFormModule,\n  ],\n  declarations: [UiChartDonutComponent, UiCalendarDatepickerComponent, UiDateRangePickerComponent, UiStringSearchComponent],\n})\nexport class UiModule {}\n","export * from './lib/utils.module';\n\nexport * from './lib/pipes/util-string-search.pipe';\nexport * from './lib/services/util-clone.service';\nexport * from './lib/services/util-date-tools.service';\nexport * from './lib/services/util-local-storage.service';\nexport * from './lib/services/util-moment.service';\nexport * from './lib/services/util-string.service';\nexport * from './lib/services/util-window-ref.service';\nexport * from './lib/services/unsaved-changes.modal.service';\nexport * from './lib/services/unsaved-changes-guard.service';\n","import { Component } from '@angular/core';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-unsaved-changes-modal',\n  template: `\n    <div id=\"unsavedChangesModal\">\n      <p mat-dialog-title class=\"text-subtitle1\">There are unsaved changes</p>\n      <div mat-dialog-content>\n        <p class=\"text-body2\">Would you like to save your changes before leaving this page?</p>\n      </div>\n      <div class=\"submit-buttons\" mat-dialog-actions fxLayoutAlign=\"space-between\">\n        <button type=\"submit\" (click)=\"onSave()\" class=\"submit-button\" color=\"primary\" mat-flat-button cdkFocusInitial>\n          Save\n        </button>\n        <button mat-stroked-button (click)=\"onCancel()\">\n          Don't save\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./unsaved-changes-modal.component.scss'],\n})\nexport class UnsavedChangesModalComponent {\n  constructor(public dialog: MatDialog, public dialogRef: MatDialogRef<UnsavedChangesModalComponent>) {}\n\n  public onSave() {\n    this.dialogRef.close(true);\n  }\n\n  public onCancel() {\n    this.dialogRef.close(false);\n  }\n}\n","import { UnsavedChangesModalComponent } from './unsaved-changes-modal.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@NgModule({\n  declarations: [UnsavedChangesModalComponent],\n  imports: [CommonModule, MatButtonModule, FlexLayoutModule],\n})\nexport class UnsavedChangesModelModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'xenon-search-pipe',\n})\nexport class SearchPipe implements PipeTransform {\n  /**\n   * Used for on page search / filtering\n   * @param dataToSearch The list of objects to search through\n   * @param filterText The text to search by\n   * @param columnsToFilterBy The parameters in the 'dataToSearch' that you'd like to search by\n   */\n  public transform(\n    dataToSearch: any[],\n    filterText: string,\n    columnsToFilterBy: string[]\n  ) {\n    if (filterText !== '') {\n      return dataToSearch\n        ? dataToSearch.filter((item) => {\n            let contains = false;\n\n            for (let i = 0; i < columnsToFilterBy.length; i++) {\n              const column = columnsToFilterBy[i];\n              if (column === 'FullName')\n                contains =\n                  (item['FirstName'] + ' ' + item['LastName'])\n                    .toString()\n                    .search(new RegExp(filterText, 'i')) > -1;\n              else\n                contains =\n                  item[column]?.toString().search(new RegExp(filterText, 'i')) >\n                  -1;\n              if (contains) break;\n            }\n\n            return contains;\n          })\n        : [];\n    } else {\n      return dataToSearch;\n    }\n  }\n}\n","import { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n  nextState: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnsavedChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  canDeactivate(\n    component: ComponentCanDeactivate,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot\n  ): boolean | Observable<boolean> {\n    component.nextState = nextState.url;\n    return component.canDeactivate();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { UnsavedChangesModalComponent } from '../components/unsaved-changes-modal/unsaved-changes-modal.component';\n\n@Injectable()\nexport class UnsavedChangesModalService {\n  constructor(public dialog: MatDialog, private router: Router) {}\n\n  private userClickedCancel = false;\n\n  public handleUnsavedChangesModal(checkForUnsavedChanges: () => boolean, save: () => Promise<void>, nextState: string): boolean {\n    const userCanLeavePage = true;\n    const unsavedChanges: boolean = checkForUnsavedChanges();\n\n    if (unsavedChanges && !this.userClickedCancel) {\n      const dialogRef = this.dialog.open(UnsavedChangesModalComponent, { width: '300px' });\n\n      dialogRef.afterClosed().subscribe((saveBeforeLeaving) => {\n        if (saveBeforeLeaving) {\n          save()\n            .then(() => {\n              this.router.navigate([nextState]);\n              return userCanLeavePage;\n            })\n            .catch(() => {\n              return !userCanLeavePage;\n            });\n        } else {\n          this.userClickedCancel = true;\n          this.router.navigate([nextState]);\n          return userCanLeavePage;\n        }\n      });\n    } else {\n      this.userClickedCancel = false;\n      return userCanLeavePage;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as clone from 'clone';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilCloneService {\n  static deepClone<T>(value): T {\n    return clone<T>(value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilDateToolsService {\n  constructor() {}\n\n  // input\n  // - dateString format = 2020-09-18T06:13:59Z\n  // returns date\n  static utcToLocal(dateString: string): Date {\n    return moment(`${dateString.replace('T', ' ').replace('Z', '')} UTC`).toDate();\n  }\n\n  // returns YYYY-mm-dd\n  static convertToDateString(date: Date): string {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n    return `${year}-${month}-${day}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtilWindowRefService } from './util-window-ref.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilLocalStorageService {\n  private storage;\n\n  constructor(private windowRefService: UtilWindowRefService) {\n    this.storage = this.windowRefService.nativeWindow.localStorage;\n  }\n\n  setItem(index: string, value: any): void {\n    this.storage.setItem(index, JSON.stringify(value));\n  }\n\n  removeItem(index: string): void {\n    this.storage.removeItem(index);\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(index: string): any {\n    const item = this.storage.getItem(index);\n    return JSON.parse(item);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilMomentService {\n  /**\n   * Used to add a location.\n   * @param inp? moment.MomentInput\n   * @param format?: moment.MomentFormatSpecification\n   * @param language?: string\n   * @param strict?: boolean\n   * @returns moment.Moment\n   */\n  static new(\n    inp?: moment.MomentInput,\n    format?: moment.MomentFormatSpecification,\n    language?: string,\n    strict?: boolean\n  ): moment.Moment {\n    return moment(inp, format, language, strict);\n  }\n\n  /**\n   * Used to convert utc iso date string to local.\n   * @param isoUTCDateString The isoDateString formatted as 'YYYY-MM-DDTHH:mm:ss.SS[Z]'\n   * @returns Date object\n   */\n  static utcToLocal(isoUTCDateString: string): Date {\n    return this.new(isoUTCDateString, 'YYYY-MM-DDTHH:mm:ss.SS[Z]')\n      .utc()\n      .local()\n      .toDate();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilStringService {\n  static isJson(str: string): boolean {\n    try {\n      return !!JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nfunction _window(): Window {\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilWindowRefService {\n  get nativeWindow(): Window {\n    return _window();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UtilLocalStorageService } from './services/util-local-storage.service';\nimport { UtilWindowRefService } from './services/util-window-ref.service';\nimport { UtilDateToolsService } from './services/util-date-tools.service';\nimport { UtilCloneService } from './services/util-clone.service';\nimport { UtilMomentService } from './services/util-moment.service';\nimport { SearchPipe } from './pipes/util-string-search.pipe';\nimport { UnsavedChangesModalService } from './services/unsaved-changes.modal.service';\nimport { UnsavedChangesGuard } from './services/unsaved-changes-guard.service';\nimport { UnsavedChangesModelModule } from './components/unsaved-changes-modal/unsaved-changes-model.module';\n@NgModule({\n  providers: [\n    UtilCloneService,\n    UtilDateToolsService,\n    UtilLocalStorageService,\n    UtilMomentService,\n    UtilWindowRefService,\n    SearchPipe,\n    UnsavedChangesModalService,\n    UnsavedChangesGuard,\n  ],\n  declarations: [],\n  imports: [CommonModule, UnsavedChangesModelModule],\n})\nexport class UtilsModule {}\n","var map = {\n\t\"./af\": \"../../node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../../node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../../node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../../node_modules/moment/locale/az.js\",\n\t\"./be\": \"../../node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../../node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"../../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"../../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../../node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../../node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../../node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../../node_modules/moment/locale/da.js\",\n\t\"./de\": \"../../node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../../node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../../node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"../../node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"../../node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"../../node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"../../node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../../node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"../../node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"../../node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../../node_modules/moment/locale/es.js\",\n\t\"./et\": \"../../node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../../node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"../../node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"../../node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"../../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"../../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../../node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../../node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../../node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../../node_modules/moment/locale/id.js\",\n\t\"./is\": \"../../node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../../node_modules/moment/locale/is.js\",\n\t\"./it\": \"../../node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../../node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../../node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../../node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../../node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../../node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../../node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../../node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"../../node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"../../node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../../node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../../node_modules/moment/locale/se.js\",\n\t\"./si\": \"../../node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../../node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../../node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../../node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../../node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../../node_modules/moment/locale/th.js\",\n\t\"./tk\": \"../../node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"../../node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"../../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"../../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"../../node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Subscription } from 'rxjs';\nimport { UtilLocalStorageService, UtilMomentService } from '@xenon/utils';\nimport { User, LoggedInUser } from '@xenon/api';\nimport * as moment from 'moment';\n\nconst today = moment().toDate();\nexport const DEFAULT_STRING_DATE_RANGE = {\n  start: UtilMomentService.new(today).format('YYYY-MM-DD'),\n  end: UtilMomentService.new(today).add(1, 'months').format('YYYY-MM-DD'),\n};\n\nexport const DEFAULT_DATE_RANGE = {\n  start: UtilMomentService.new(today).toDate(),\n  end: UtilMomentService.new(today).add(1, 'months').toDate(),\n};\n\nexport class AppBase {\n  loggedInUser: LoggedInUser;\n  organizationId: number;\n  locationId: number;\n  stringDateRange: { start: string; end: string } = DEFAULT_STRING_DATE_RANGE;\n  dateRange: { start: Date; end: Date } = DEFAULT_DATE_RANGE;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(localStorage: UtilLocalStorageService) {\n    this.loggedInUser = localStorage.getItem('user');\n    this.organizationId = this.loggedInUser.CurrentOrg.ID;\n    this.locationId = this.loggedInUser.CurrentLocation.ID;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MainLayoutComponent, SubLayoutComponent } from '@xenon/layouts';\nimport { PageLoginComponent, AuthGuard, PageNotFoundComponent, AppList, PasswordResetFromEmailComponent, PermissionsAuthGuard } from '@xenon/auth';\n\nconst routes = [\n  {\n    path: '',\n    redirectTo: 'client',\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    component: MainLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'client',\n        canActivate: [PermissionsAuthGuard],\n        loadChildren: () => import('./features/client/client.module').then((m) => m.ClientModule),\n      },\n      {\n        path: 'admin',\n        canActivate: [PermissionsAuthGuard],\n        loadChildren: () => import('./features/admin/admin.module').then((m) => m.AdminModule),\n      },\n    ],\n  },\n  {\n    component: SubLayoutComponent,\n    canActivate: [AuthGuard],\n    data: {\n      app: AppList.FormBuilder,\n    },\n    path: 'admin/form-builder',\n    children: [\n      {\n        path: 'layout',\n        data: {\n          app: AppList.FormBuilder,\n        },\n        loadChildren: () => import('./features/admin/form-builder/layout/layout.module').then((m) => m.LayoutModule),\n      },\n      {\n        path: 'tasks',\n        data: {\n          app: AppList.FormBuilder,\n        },\n        loadChildren: () => import('./features/admin/form-builder/tasks/tasks.module').then((m) => m.TasksModule),\n      },\n      {\n        path: 'settings',\n        data: {\n          app: AppList.FormBuilder,\n        },\n        loadChildren: () => import('./features/admin/form-builder/settings/settings.module').then((m) => m.SettingsModule),\n      },\n    ],\n  },\n  {\n    /** id = some id, e = email, o = orgID, uu = UUID, ai = accept invitation*/\n    path: 'passwordreset/:id/:e/:o/:uu/:ai',\n    component: PasswordResetFromEmailComponent,\n  },\n  {\n    path: 'login',\n    component: PageLoginComponent,\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { AppList, AppNavigationService, PermissionsHelperService } from '@xenon/auth';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'xenon-root',\n  template: ` <router-outlet></router-outlet> `,\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private appNavigationService: AppNavigationService,\n    private localStorage: UtilLocalStorageService,\n    private permissionsHelperService: PermissionsHelperService,\n    private router: Router\n  ) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        if (event.url.indexOf('/admin') > -1 || event.urlAfterRedirects.indexOf('/admin') > -1) {\n          this.appNavigationService.setApp(AppList.Admin);\n        }\n        if (event.url.indexOf('/client') > -1 || event.urlAfterRedirects.indexOf('/client') > -1) {\n          this.appNavigationService.setApp(AppList.Client);\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.appNavigationService.setApp(AppList.Client);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { DriveModule } from './features/client/drive/drive.module';\nimport { XenonFormsModule } from './features/client/forms/xenon-forms.module';\nimport { TasksModule } from './features/client/tasks/tasks.module';\nimport { TeamModule } from './features/client/team/team.module';\nimport { HomeModule } from './features/client/home/home.module';\nimport { LayoutsModule } from '@xenon/layouts';\nimport { SharedModule } from './shared/shared.module';\nimport { AuthModule } from '@xenon/auth';\nimport { environment } from '../environments/environment';\nimport { AdminModule } from './features/admin/admin.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    // Core Modules\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    AppRoutingModule,\n\n    // Shared\n    SharedModule,\n    LayoutsModule,\n    AuthModule.forRoot(environment),\n\n    // Features\n    AdminModule,\n    DriveModule,\n    HomeModule,\n    TasksModule,\n    TeamModule,\n    XenonFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PermissionsAuthGuard } from '@xenon/auth';\nimport { AdminComponent } from './admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'locations',\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    component: AdminComponent,\n    children: [\n      {\n        path: 'locations',\n        canActivate: [PermissionsAuthGuard],\n        loadChildren: () => import('./locations/locations.module').then((m) => m.LocationsModule),\n      },\n      {\n        path: 'billing',\n        loadChildren: () => import('./billing/billing.module').then((m) => m.BillingModule),\n      },\n      {\n        path: 'users',\n        canActivate: [PermissionsAuthGuard],\n        loadChildren: () => import('./users/users.module').then((m) => m.UsersModule),\n      },\n      {\n        path: 'roles',\n        canActivate: [PermissionsAuthGuard],\n        loadChildren: () => import('./roles/roles.module').then((m) => m.RolesModule),\n      },\n      {\n        path: 'task-templates',\n        canActivate: [PermissionsAuthGuard],\n        loadChildren: () => import('./task-templates/task-templates.module').then((m) => m.TaskTemplatesModule),\n      },\n      {\n        path: 'form-templates',\n        canActivate: [PermissionsAuthGuard],\n        loadChildren: () => import('./form-templates/form-templates.module').then((m) => m.FormTemplatesModule),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xenon-admin',\n  template: ` <router-outlet></router-outlet> `,\n})\nexport class AdminComponent {\n  constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\n\n@NgModule({\n  declarations: [AdminComponent],\n  imports: [CommonModule, AdminRoutingModule],\n})\nexport class AdminModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ModalData {\n  folderName: string;\n}\n\n@Component({\n  selector: 'xenon-add-folder-modal',\n  template: `\n    <h6 mat-dialog-title>New Folder</h6>\n    <div mat-dialog-content>\n      <mat-form-field>\n        <mat-label>Untitled Folder</mat-label>\n        <input matInput [(ngModel)]=\"data.folderName\" />\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-button (click)=\"onNoClick()\">CANCEL</button>\n      <button mat-button [mat-dialog-close]=\"data.folderName\" cdkFocusInitial>\n        CREATE\n      </button>\n    </div>\n  `,\n})\nexport class AddFolderModalComponent {\n  constructor(public dialogRef: MatDialogRef<AddFolderModalComponent>, @Inject(MAT_DIALOG_DATA) public data: ModalData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilWindowRefService } from '@xenon/utils';\nimport { ApiDriveService, DriveItem } from '@xenon/api';\nimport { TextFileComponent } from '../../../../shared/components/text-file/text-file.component';\nimport { LeaveAppDialogComponent } from '../../../../shared/components/leave-app-dialog/leave-app-dialog.component';\n\n@Component({\n  selector: 'xenon-drive-explorer',\n  styleUrls: ['./drive-explorer.component.scss'],\n  template: `\n    <div class=\"drive-list\" *ngIf=\"driveItems\">\n      <div style=\"width: {{ driveItems.length * 336 }}px; display: inline-block;\">\n        <div class=\"folder\" *ngFor=\"let driveItem of driveItems\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n          <div\n            class=\"folder-item clickable\"\n            [class.active]=\"selectedDriveItem?.id === item.id\"\n            fxLayout=\"row\"\n            *ngFor=\"let item of driveItem\"\n            (drop)=\"drop($event, item)\"\n            (dragover)=\"allowDrop($event)\"\n            draggable=\"true\"\n            (dragstart)=\"drag(item)\"\n            (click)=\"setSelected(item)\"\n            [class.selected]=\"selectedIndex === item.id\"\n          >\n            <div class=\"type\" (click)=\"clickDriveItem(item)\" fxFlex=\"72px\" fxLayoutAlign=\"center center\">\n              <mat-icon color=\"primary\" class=\"circle\">{{ item.icon }}</mat-icon>\n            </div>\n\n            <span (click)=\"clickDriveItem(item)\" fxFlex fxLayoutAlign=\"space-between center\" class=\"handle-overflow w-100\">\n              {{ item.name }}\n            </span>\n\n            <div fxFlex=\"72px\" fxLayoutAlign=\"center center\" mat-icon-button [matMenuTriggerFor]=\"menu\">\n              <mat-icon>more_vert</mat-icon>\n            </div>\n\n            <mat-menu #menu=\"matMenu\">\n              <xenon-drive-vert-menu [item]=\"item\" (refresh)=\"refreshDrive.emit()\"></xenon-drive-vert-menu>\n            </mat-menu>\n          </div>\n        </div>\n      </div>\n\n      <div #content id=\"drive-content\"></div>\n    </div>\n  `,\n})\nexport class DriveExplorerComponent {\n  @Input() driveItems: DriveItem[][] = [];\n  @Output() driveItemClicked = new EventEmitter();\n  @Output() moveDriveItem = new EventEmitter();\n  @Output() showError = new EventEmitter();\n  @Output() refreshDrive = new EventEmitter();\n\n  @ViewChild('content') content: ElementRef;\n  public selectedDriveItem: DriveItem;\n  public agreed = false;\n\n  private draggedItem: DriveItem;\n\n  constructor(private renderer: Renderer2, private windowRefService: UtilWindowRefService, private driveService: ApiDriveService, public dialog: MatDialog) {}\n\n  public drop(event: DragEvent, moveTo: DriveItem) {\n    event.preventDefault();\n\n    if (moveTo) {\n      // if item is not already in folder, then move it\n      if (this.draggedItem.details.ParentID !== moveTo.id) {\n        this.moveDriveItem.emit({\n          id: this.draggedItem.id,\n          parentId: moveTo.id,\n          parentItem: moveTo,\n        });\n      }\n\n      this.selectedDriveItem = null; // prevents multiple moves from happening\n    } else if (this.selectedDriveItem) {\n      // if item is not already in folder, then move it\n      if (this.draggedItem.details.ParentID !== this.selectedDriveItem.id) {\n        this.moveDriveItem.emit({\n          id: this.draggedItem.id,\n          parentId: this.selectedDriveItem.id,\n          parentItem: this.selectedDriveItem,\n        });\n      } else {\n        this.moveDriveItem.emit({ id: this.draggedItem.id, parentId: 0 });\n      }\n    }\n  }\n\n  public allowDrop(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  public drag(item) {\n    this.draggedItem = item;\n  }\n\n  public setSelected(driveItem: DriveItem) {\n    this.selectedDriveItem = driveItem;\n  }\n\n  public clickDriveItem(item: DriveItem) {\n    if (!item.active) {\n      this.clearContent();\n      switch (item.details.ContentType) {\n        case 1:\n          // folder\n          break;\n        case 2:\n          // text\n          const textFileDialogRef = this.dialog.open(TextFileComponent, {\n            data: { driveItem: item },\n            panelClass: 'full-page-dialog',\n          });\n\n          textFileDialogRef.afterClosed().subscribe(() => {\n            this.refreshDrive.emit();\n          });\n\n          // const p: HTMLParagraphElement = this.renderer.createElement('p');\n          // p.innerHTML = item.details.Content;\n          // this.renderer.appendChild(this.content.nativeElement, p);\n          break;\n        case 3:\n          // // Note: We cannot use iframes\n          // // https://stackoverflow.com/questions/60494390/refused-to-display-url-in-a-frame-because-it-set-x-frame-options-to-sameori\n          // const iframe: HTMLIFrameElement = this.renderer.createElement('iframe');\n          // iframe.src = item.details.ContentPath;\n          // this.renderer.appendChild(this.content.nativeElement, iframe);\n          const dialogRef = this.dialog.open(LeaveAppDialogComponent, {\n            width: '250px',\n            data: { agreed: this.agreed },\n          });\n\n          dialogRef.afterClosed().subscribe((result) => {\n            this.agreed = result;\n            if (this.agreed) {\n              this.windowRefService.nativeWindow.open(item.details.ContentPath, '_blank');\n            }\n          });\n          break;\n        case 4:\n          // file\n          break;\n      }\n      this.driveItemClicked.emit(item);\n    }\n  }\n\n  private clearContent(): void {\n    this.content.nativeElement.childNodes.forEach((child) => this.renderer.removeChild(this.content.nativeElement, child));\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface RenameData {\n  newName: string;\n}\n\n@Component({\n  selector: 'xenon-rename-drive-item',\n  template: `\n    <h6 mat-dialog-title>Rename</h6>\n    <div mat-dialog-content>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"data.newName\" placeholder=\"New Name\" />\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-button (click)=\"onNoClick()\">CANCEL</button>\n      <button mat-button [mat-dialog-close]=\"data.newName\" cdkFocusInitial>\n        SAVE\n      </button>\n    </div>\n  `,\n})\nexport class RenameDriveItemModal {\n  constructor(public dialogRef: MatDialogRef<RenameDriveItemModal>, @Inject(MAT_DIALOG_DATA) public data: RenameData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport interface DriveFilterItem {\n  active: boolean;\n  label: string;\n  value: string;\n}\n\n@Component({\n  selector: 'xenon-drive-filter',\n  styleUrls: ['./drive-filter.component.scss'],\n  template: `\n    <div fxLayout=\"row\" class=\"drive-filters\">\n      <div class=\"title-bar\">\n        <mat-chip-list aria-label=\"Filter selection\">\n          <mat-chip [selected]=\"item.active\" *ngFor=\"let item of items\" [class.active]=\"item.active\" (click)=\"changeFilter(item.value)\">\n            {{ item.label }}\n          </mat-chip>\n        </mat-chip-list>\n      </div>\n    </div>\n  `,\n})\nexport class DriveFilterComponent {\n  @Input() items: DriveFilterItem[];\n  @Output() filterChange = new EventEmitter<DriveFilterItem[]>();\n\n  changeFilter(filter: string): void {\n    this.items.forEach((item) => {\n      if (item.value === filter) {\n        item.active = !item.active;\n      }\n    });\n    this.filterChange.emit(this.items);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DriveComponent } from './drive.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DriveComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DriveRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AppBase } from '../../../app-base';\nimport { BehaviorSubject } from 'rxjs';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { AddContentRequest, AddContentResponse, ApiDriveService, BaseResponse, ContentType, DriveItem } from '@xenon/api';\nimport { DriveFilterItem } from './drive-filter/drive-filter.component';\nimport { AddFolderModalComponent } from './add-folder-modal.component';\nimport { NotificationType, UiNotificationService } from '@xenon/ui';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TextFileComponent } from '../../../shared/components/text-file/text-file.component';\nimport { PermissionsHelperService } from '@xenon/auth';\n\n@Component({\n  selector: 'xenon-drive',\n  styleUrls: ['./drive.component.scss'],\n  template: `\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"between center\">\n      <h5 class=\"title\">Drive</h5>\n      <mat-divider></mat-divider>\n\n      <xenon-drive-filter [items]=\"filterItems$ | async\" (filterChange)=\"filterChange($event)\"></xenon-drive-filter>\n    </div>\n\n    <p class=\"error color-red\" [hidden]=\"!errorMessage\">{{ errorMessage }}</p>\n\n    <div class=\"page-body\">\n      <xenon-drive-explorer\n        [driveItems]=\"driveItems$ | async\"\n        (driveItemClicked)=\"driveItemClicked($event)\"\n        (showError)=\"handleError($event)\"\n        (moveDriveItem)=\"moveDriveItem($event)\"\n        (refreshDrive)=\"getDrives()\"\n      ></xenon-drive-explorer>\n\n      <button\n        *ngIf=\"permissionsHelperService.hasPermissionByName('createAddFiles')\"\n        mat-fab\n        mat-flat-button\n        class=\"add-button\"\n        color=\"primary\"\n        aria-label=\"Create new file or folder\"\n        (click)=\"toggleAddButtons()\"\n      >\n        <mat-icon>add</mat-icon>\n      </button>\n\n      <div [hidden]=\"hideAddButtons\">\n        <input hidden id=\"fileInput\" type=\"file\" (change)=\"addFile($event.target.files[0])\" />\n        <button mat-fab mat-flat-button class=\"new-file\" color=\"basic\" aria-label=\"Create new file\" (click)=\"clickToAddFile()\">\n          <mat-icon>publish</mat-icon>\n        </button>\n\n        <button mat-fab mat-flat-button class=\"new-folder\" color=\"basic\" aria-label=\"Create new folder\" (click)=\"addFolder()\">\n          <mat-icon>folder_open</mat-icon>\n        </button>\n\n        <button mat-fab mat-flat-button class=\"new-text-file\" color=\"basic\" aria-label=\"Create new file\" (click)=\"addTextFile()\">\n          <mat-icon fontSet=\"material-icons-outlined\">insert_drive_file</mat-icon>\n        </button>\n      </div>\n    </div>\n  `,\n})\nexport class DriveComponent extends AppBase implements OnInit, OnDestroy {\n  public hideAddButtons = true;\n  public errorMessage = undefined;\n\n  driveItems$: BehaviorSubject<DriveItem[][]> = new BehaviorSubject<DriveItem[][]>([]);\n\n  filterItems = [\n    {\n      active: false,\n      label: 'Starred',\n      value: 'starred',\n    },\n  ];\n\n  filterItems$: BehaviorSubject<DriveFilterItem[]> = new BehaviorSubject(this.filterItems);\n\n  private selectedFolderID: number;\n\n  constructor(\n    private notificationService: UiNotificationService,\n    private localStorage: UtilLocalStorageService,\n    private driveService: ApiDriveService,\n    private dialog: MatDialog,\n    public permissionsHelperService: PermissionsHelperService\n  ) {\n    super(localStorage);\n  }\n\n  ngOnInit(): void {\n    this.getDrives();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  public toggleAddButtons(): void {\n    this.hideAddButtons = !this.hideAddButtons;\n  }\n\n  public clickToAddFile(): void {\n    document.getElementById('fileInput').click();\n    this.toggleAddButtons(); // hide buttons\n  }\n\n  public addFile(file: File) {\n    console.log(file);\n    if (file) {\n      const contentType: ContentType = 3;\n\n      /* tslint:disable-next-line */\n      let requestInfo: AddContentRequest = {\n        Name: file.name,\n        ContentType: contentType,\n        ParentID: this.selectedFolderID,\n        OrgID: this.organizationId,\n        Description: '',\n        Content: '',\n        StarredInd: false,\n        ContentPath: '',\n        PreviewPath: '',\n      };\n\n      this.driveService\n        .addFile(requestInfo, file)\n        .then((success: boolean) => {\n          if (success) {\n            let driveItem: DriveItem;\n            const all = this.driveItems$.getValue();\n            all.forEach((driveI) => {\n              driveI.forEach((i) => {\n                if (i.id === this.selectedFolderID) driveItem = i;\n              });\n            });\n\n            this.getDrives(driveItem);\n          } else {\n            this.showUploadError(`${file?.name} upload failed.`);\n          }\n        })\n        .catch((err) => {\n          this.showUploadError(`${file?.name} upload failed.`);\n        });\n    }\n  }\n\n  public addFolder() {\n    this.toggleAddButtons(); // hide buttons\n\n    const folderInfo: AddContentRequest = {\n      Name: '',\n      ContentType: 1,\n      OrgID: this.organizationId,\n      Description: '',\n      Content: '',\n      StarredInd: false,\n      ContentPath: '',\n      PreviewPath: '',\n      ParentID: this.selectedFolderID,\n    };\n\n    const dialogRef = this.dialog.open(AddFolderModalComponent, {\n      width: '250px',\n      data: { folderName: folderInfo.Name },\n    });\n\n    dialogRef.afterClosed().subscribe((folderName) => {\n      if (folderName) {\n        folderInfo.Name = folderName;\n        this.saveFolder(folderInfo, this.selectedFolderID);\n      }\n    });\n  }\n\n  public addTextFile() {\n    this.toggleAddButtons(); // hide buttons\n\n    const fileInfo: AddContentRequest = {\n      Name: '',\n      ContentType: 2,\n      OrgID: this.organizationId,\n      Description: '',\n      Content: '',\n      StarredInd: false,\n      ContentPath: '',\n      PreviewPath: '',\n      ParentID: this.selectedFolderID,\n    };\n\n    const dialogRef = this.dialog.open(TextFileComponent, {\n      data: { addContentRequest: fileInfo, editFile: true },\n      panelClass: 'full-page-dialog',\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.getDrives();\n    });\n  }\n\n  public driveItemClicked(item: DriveItem) {\n    // TODO: This is messy START ---------------------\n\n    const driveItems = this.driveItems$.getValue();\n    const newDriveItems = [];\n    let itemLevel = 0;\n    let itemFound = false;\n    driveItems.forEach((items) => {\n      items.forEach((i) => {\n        if (i.id === item.id) {\n          itemFound = true;\n        }\n      });\n      if (!itemFound) {\n        itemLevel++;\n      }\n    });\n    driveItems.forEach((items, index) => {\n      if (index <= itemLevel) {\n        newDriveItems.push(items);\n      }\n    });\n\n    this.driveItems$.next(newDriveItems);\n\n    // TODO: This is messy END ---------------------\n\n    if (item.icon === 'folder') {\n      this.selectedFolderID = item.details.ID;\n      if (item.details.ID) {\n        const sub = this.driveService.getDriveFolderContent(item.details.ID, this.driveItems$.getValue()).subscribe((r) => this.driveItems$.next(r));\n        this.subscriptions.push(sub);\n      }\n    } else this.selectedFolderID = null;\n  }\n\n  public moveDriveItem(info: { id: number; parentId: number; parentItem?: DriveItem }) {\n    this.driveService\n      .moveDriveItem(info.id, info.parentId)\n      .then((response: BaseResponse) => {\n        this.getDrives(info.parentItem);\n      })\n      .catch((err) => {\n        this.handleError('An error occurred moving drive item.');\n      });\n  }\n\n  public filterChange(event: DriveFilterItem[]): void {\n    const starActive = event[0].active;\n    const driveItems = this.localStorage.getItem('drives');\n    if (starActive) {\n      const newDriveItems: DriveItem[][] = [];\n      driveItems.forEach((drives) => {\n        const newDrives = [];\n        drives.forEach((d) => {\n          if (d.starred) {\n            newDrives.push(d);\n          }\n        });\n        newDriveItems.push(newDrives);\n      });\n      this.driveItems$.next(newDriveItems);\n    } else {\n      this.driveItems$.next(driveItems);\n    }\n    this.filterItems$.next(event);\n  }\n\n  public handleError(errorMessage: string): void {\n    this.errorMessage = errorMessage;\n\n    setTimeout(() => {\n      this.errorMessage = null;\n    }, 5000);\n  }\n\n  /**\n   * @param driveToSelect After getting the latest drives, this will select a certain folder.\n   */\n  public getDrives(driveToSelect?: DriveItem): void {\n    const driveServiceSub = this.driveService.getDrivesByOrg(this.organizationId).subscribe((r) => {\n      this.localStorage.setItem('drives', r);\n      this.driveItems$.next(r);\n      if (driveToSelect) {\n        this.driveItemClicked(driveToSelect);\n      }\n    });\n    this.subscriptions.push(driveServiceSub);\n  }\n\n  private getDriveItem(request: AddContentRequest, isFolder: boolean, id: number): DriveItem {\n    const driveItem: DriveItem = {\n      id: id,\n      name: request.Name,\n      icon: isFolder ? 'folder' : 'file',\n      starred: false,\n      active: false,\n      details: {\n        ID: id,\n        OrgID: request.OrgID,\n        LocationID: 0,\n        Name: request.Name,\n        Description: request.Description,\n        ContentType: request.ContentType,\n        Content: request.Content,\n        StarredInd: request.StarredInd,\n        ContentPath: request.ContentPath,\n        PreviewPath: request.PreviewPath,\n        MetaList: null,\n        ParentID: request.ParentID,\n      },\n    };\n\n    return driveItem;\n  }\n\n  private saveFolder(folderInfo: AddContentRequest, currentFolderId: number) {\n    this.driveService\n      .saveContentInfo(folderInfo)\n      .then((response: AddContentResponse) => {\n        const driveItem = this.getDriveItem(folderInfo, true, currentFolderId);\n        this.getDrives(driveItem);\n      })\n      .catch((err) => {\n        this.showUploadError('Error: Folder Not Created.');\n      });\n  }\n\n  private showUploadError(message: string) {\n    this.notificationService.show(NotificationType.error, 'Error', message, 5000);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DriveRoutingModule } from './drive-routing.module';\nimport { DriveComponent } from './drive.component';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { DriveExplorerComponent } from './drive-explorer/drive-explorer.component';\nimport { DriveFilterComponent } from './drive-filter/drive-filter.component';\nimport { AddFolderModalComponent } from './add-folder-modal.component';\nimport { RenameDriveItemModal } from './drive-explorer/rename-drive-item.modal';\n\n@NgModule({\n  declarations: [DriveComponent, DriveExplorerComponent, DriveFilterComponent, AddFolderModalComponent, RenameDriveItemModal],\n  imports: [SharedModule, DriveRoutingModule],\n})\nexport class DriveModule {}\n","import { EventEmitter, Output, SimpleChanges } from '@angular/core';\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Form } from '@xenon/api';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'xenon-forms-list',\n  styleUrls: ['./forms-list.component.scss'],\n  templateUrl: './forms-list.component.html',\n})\nexport class FormsListComponent implements OnChanges {\n  public hideTable = true;\n  @Input() forms: Form[] = [];\n  @Output() openEditForm = new EventEmitter<Form>();\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  public displayedColumns: string[] = ['Organization', 'Name', 'CreatedAt', 'ItemsComplete', 'ItemsExpired', 'ItemsRemaining', 'ItemsTotal'];\n  public dataSource: MatTableDataSource<any> = new MatTableDataSource([]);\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes.firstChange && this.forms?.length > 0) {\n      this.dataSource = new MatTableDataSource(this.forms);\n      this.dataSource.sort = this.sort;\n      this.hideTable = false;\n    } else this.hideTable = true;\n  }\n\n  public editForm(form: Form) {\n    this.openEditForm.emit(form);\n  }\n\n  public sortData(sortBy: { active: string; direction: string }) {\n    const isAscending = sortBy.direction === 'asc';\n\n    switch (sortBy.active) {\n      case 'Name':\n      case 'Organization':\n        this.sortByString(sortBy.active, isAscending);\n        break;\n      case 'ItemsComplete':\n      case 'ItemsExpired':\n      case 'ItemsRemaining':\n      case 'ItemsTotal':\n        this.sortByNumber(sortBy.active, isAscending);\n        break;\n      case 'CreatedAt':\n        this.sortByDate(sortBy.active, isAscending);\n        break;\n    }\n\n    this.dataSource = new MatTableDataSource(this.forms);\n  }\n\n  private sortByString(property: string, isAscending: boolean) {\n    this.forms = this.forms.sort((a, b) => (a[property]?.toLowerCase() < b[property]?.toLowerCase() ? -1 : 1) * (isAscending ? 1 : -1));\n  }\n\n  private sortByNumber(property: string, isAscending: boolean) {\n    this.forms = this.forms.sort((a, b) => {\n      if (isAscending) return a[property] - b[property];\n      else return b[property] - a[property];\n    });\n  }\n\n  private sortByDate(property: string, isAscending: boolean) {\n    this.forms = this.forms.sort((a, b) => {\n      const c = moment(a[property]).toDate().getTime();\n      const d = moment(b[property]).toDate().getTime();\n      return isAscending ? c - d : d - c;\n    });\n  }\n}\n","<table mat-table matSort [hidden]=\"hideTable\" [dataSource]=\"dataSource\" (matSortChange)=\"sortData($event)\" class=\"mat-elevation-z8 table\">\n  <ng-container matColumnDef=\"Organization\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n      Organization\n    </th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.Org?.Name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.Name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"CreatedAt\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n      Created Date\n    </th>\n    <td mat-cell *matCellDef=\"let element\">\n      {{ element.CreatedAt | date: 'yyyy-MM-dd' }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"ItemsComplete\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n      Items Complete\n    </th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.ItemsComplete }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"ItemsExpired\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n      Items Late\n    </th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.ItemsExpired }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"ItemsRemaining\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n      Items Remaining\n    </th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.ItemsRemaining }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"ItemsTotal\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n      Items Total\n    </th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.ItemsTotal }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"editForm(row)\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { FormsComponent } from './forms.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), MatSidenavModule],\n  exports: [RouterModule],\n})\nexport class FormsRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ApiFormService, ApiFormTemplateService, Form } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { AppBase } from '../../../app-base';\nimport { FormTemplate } from '@xenon/api';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { TaskFormComponent } from '../../../shared/modules/task-form/task-form.component';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'xenon-forms',\n  styleUrls: ['./forms.component.scss'],\n  template: `\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <h5 class=\"title\">Forms</h5>\n\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Form Templates</mat-label>\n          <mat-select (selectionChange)=\"updateFormList()\" [(ngModel)]=\"selectedTemplate\" name=\"template\">\n            <mat-option *ngFor=\"let template of formTemplates\" [value]=\"template\">\n              {{ template.Name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </form>\n    </div>\n\n    <div class=\"page-body\">\n      <xenon-forms-list [forms]=\"forms$ | async\" (openEditForm)=\"openTaskFormComponent($event)\"> </xenon-forms-list>\n\n      <button\n        [disabled]=\"!selectedTemplate\"\n        mat-fab\n        mat-flat-button\n        class=\"add-button\"\n        color=\"primary\"\n        aria-label=\"Create new file or folder\"\n        (click)=\"addNewForm()\"\n      >\n        <mat-icon>add</mat-icon>\n      </button>\n\n      <div class=\"error\" [hidden]=\"hideError\">\n        <p>{{ errorMessage }}</p>\n      </div>\n    </div>\n  `,\n})\nexport class FormsComponent extends AppBase implements OnInit, OnDestroy {\n  public selectedTemplate: FormTemplate;\n  public formTemplates: FormTemplate[];\n  public forms$: BehaviorSubject<Form[]> = new BehaviorSubject(null);\n  public hideError = true;\n  public errorMessage: string;\n\n  constructor(\n    private localStorage: UtilLocalStorageService,\n    private formTemplateService: ApiFormTemplateService,\n    private bottomSheet: MatBottomSheet,\n    private formService: ApiFormService\n  ) {\n    super(localStorage);\n  }\n\n  ngOnInit() {\n    this.getFormTemplates();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  public addNewForm() {\n    this.formService.createFormFromTemplateID(this.selectedTemplate?.ID).subscribe(\n      (form: Form) => {\n        this.openTaskFormComponent(form);\n      },\n      (err) => {\n        this.showError(`An error occurred adding a new form`, 5000);\n      }\n    );\n  }\n\n  public updateFormList() {\n    const sub = this.formService.getFormsByTemplate(this.selectedTemplate?.ID).subscribe(\n      (formArray: Form[]) => {\n        this.forms$.next(formArray);\n      },\n      (err) => {\n        this.showError(`An error occurred retrieving the form list`, 5000);\n      }\n    );\n\n    this.subscriptions.push(sub);\n  }\n\n  public openTaskFormComponent(form: Form) {\n    const bottomSheet = this.bottomSheet\n      .open(TaskFormComponent, {\n        data: {\n          form: form,\n        },\n        backdropClass: 'task-form-backdrop',\n        panelClass: 'task-form-panel',\n      })\n      .afterDismissed()\n      .subscribe((res) => {\n        this.updateFormList();\n      });\n\n    this.subscriptions.push(bottomSheet);\n  }\n\n  private getFormTemplates(): void {\n    this.formTemplateService.getFormTemplatesByOrg(this.organizationId).subscribe(\n      (response: FormTemplate[]) => {\n        this.formTemplates = response;\n      },\n      (err) => {\n        this.showError(`An error occurred retrieving form templates.`);\n      }\n    );\n  }\n\n  private showError(message: string, milliseconds?: number): void {\n    this.hideError = false;\n    this.errorMessage = message;\n\n    if (milliseconds) {\n      setTimeout(() => {\n        this.hideError = true;\n      }, milliseconds);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsRoutingModule } from './forms-routing.module';\nimport { FormsComponent } from './forms.component';\nimport { FormsListComponent } from './forms-list/forms-list.component';\n\n@NgModule({\n  declarations: [FormsListComponent, FormsComponent],\n  imports: [SharedModule, FormsRoutingModule],\n})\nexport class XenonFormsModule {} // named this way to avoid conflict with the Angular FormsModule\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, forkJoin } from 'rxjs';\nimport { AppBase } from '../../../app-base';\nimport { ApiFormService, ApiKpiService, ApiTaskService, KPI, Task } from '@xenon/api';\nimport { Chart } from '@xenon/ui';\nimport { UtilDateToolsService, UtilLocalStorageService } from '@xenon/utils';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { TaskFormComponent } from '../../../shared/modules/task-form/task-form.component';\nimport * as Chartist from 'chartist';\n\n@Component({\n  selector: 'xenon-home',\n  styleUrls: ['home.component.scss'],\n  template: `\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <h5 class=\"title\">Task Completion</h5>\n      <div>\n        <xenon-ui-date-range-picker [dateRange]=\"dateRange\" (rangeChange)=\"dateRangeChanged($event)\"></xenon-ui-date-range-picker>\n      </div>\n    </div>\n\n    <div class=\"page-body\">\n      <div class=\"my-5\">\n        <div *ngIf=\"kpi$ | async as kpi\" class=\"ml-3\" fxLayoutAlign=\"center center\">\n          <div class=\"ct-chart ct-perfect-fourth text-body1 set-size\">\n            <div class=\"complete-label text-center\">\n              <h4 class=\"mb-0\">{{ kpi.PercentComplete + '%' }}</h4>\n              <p class=\"mb-0 text-body1\">Complete</p>\n            </div>\n          </div>\n          <div fxLayout=\"column\" class=\"ml-5\">\n            <div class=\"key-row my-1\" fxLayoutAlign=\"start center\">\n              <div class=\"color-square-open\"></div>\n              <p class=\"text-body1 mx-3 mb-0\">{{ kpi.PercentOpen + '%' }}</p>\n              <p class=\"text-body1 mb-0\">Open</p>\n            </div>\n            <div class=\"key-row my-1\" fxLayoutAlign=\"start center\">\n              <div class=\"color-square-overdue\"></div>\n              <p class=\"text-body1 mx-3 mb-0\">{{ kpi.PercentOverdue + '%' }}</p>\n              <p class=\"text-body1 mb-0\">Overdue</p>\n            </div>\n            <div class=\"key-row my-1\" fxLayoutAlign=\"start center\">\n              <div class=\"color-square-complete\"></div>\n              <p class=\"text-body1 mx-3 mb-0\">{{ kpi.PercentComplete + '%' }}</p>\n              <p class=\"text-body1 mb-0\">Complete</p>\n            </div>\n            <div class=\"key-row my-1\" fxLayoutAlign=\"start center\">\n              <div class=\"color-square-expired\"></div>\n              <p class=\"text-body1 mx-3 mb-0\">{{ kpi.PercentExpired + '%' }}</p>\n              <p class=\"text-body1 mb-0\">Expired</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <xenon-task-list (itemClicked)=\"itemClicked($event)\" [tasks]=\"tasks$ | async\"></xenon-task-list>\n      <xenon-checklist-panel [checkListData]=\"infoForChecklist$ | async\" [currentUserID]=\"loggedInUser.CurrentUser?.ID\" (refresh)=\"refreshData()\">\n      </xenon-checklist-panel>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent extends AppBase implements OnDestroy {\n  public tasks$: BehaviorSubject<Task[]> = new BehaviorSubject<Task[]>([]);\n  public infoForChecklist$: BehaviorSubject<Task> = new BehaviorSubject<Task>(null);\n  public kpi$: BehaviorSubject<KPI> = new BehaviorSubject<KPI>({\n    PercentComplete: 0,\n    PercentExpired: 0,\n    PercentOverdue: 0,\n    PercentOpen: 0,\n  });\n\n  public charts$: BehaviorSubject<{\n    complete: Chart;\n    overdue: Chart;\n    expired: Chart;\n    open: Chart;\n  }> = new BehaviorSubject<{ complete: Chart; overdue: Chart; expired: Chart; open: Chart }>({\n    complete: null,\n    overdue: null,\n    expired: null,\n    open: null,\n  });\n\n  constructor(\n    private localStorage: UtilLocalStorageService,\n    private taskService: ApiTaskService,\n    private kpiService: ApiKpiService,\n    private formService: ApiFormService,\n    private bottomSheet: MatBottomSheet\n  ) {\n    super(localStorage);\n\n    this.loggedInUser = this.localStorage.getItem('user');\n    this.refreshData();\n\n    this.taskService.stringDateRange$.next(this.stringDateRange);\n    this.taskService.organizationId$.next(this.organizationId);\n    this.taskService.locationId$.next(this.locationId);\n\n    this.kpiService.stringDateRange$.next(this.stringDateRange);\n    this.kpiService.organizationId$.next(this.organizationId);\n    this.kpiService.locationId$.next(this.locationId);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n\n  public locationChanged(event: number): void {\n    this.locationId = event;\n    this.taskService.locationId$.next(event);\n  }\n\n  public dateRangeChanged(event: { start: Date; end: Date }): void {\n    const startStringDate = UtilDateToolsService.convertToDateString(event.start);\n    const endStringDate = UtilDateToolsService.convertToDateString(event.end);\n    const stringDateRange = { start: startStringDate, end: endStringDate };\n    this.kpiService.stringDateRange$.next(stringDateRange);\n    this.taskService.stringDateRange$.next(stringDateRange);\n  }\n\n  public itemClicked(event: Task) {\n    if (event.TaskType === 1) {\n      const bottomSheet = forkJoin([this.formService.get(event.TaskTypeID), this.formService.getTypes()]).subscribe(([form, formItemTypes]) => {\n        const bs = this.bottomSheet\n          .open(TaskFormComponent, {\n            data: { form: form, formItemTypes: formItemTypes },\n            backdropClass: 'task-form-backdrop',\n            panelClass: 'task-form-panel',\n          })\n          .afterDismissed()\n          .subscribe(() => this.refreshData());\n        this.subscriptions.push(bs);\n      });\n      this.subscriptions.push(bottomSheet);\n    } else {\n      // cloning so ngOnChanges is triggered when the user opens the same task twice.\n      const clone = JSON.parse(JSON.stringify(event));\n      this.infoForChecklist$.next(clone);\n    }\n  }\n\n  public refreshData(): void {\n    const taskServiceSub = this.taskService.search$.subscribe((r) => this.tasks$.next(r));\n    this.subscriptions.push(taskServiceSub);\n\n    const kpiServiceSub = this.kpiService.get$.subscribe((r) => {\n      this.kpi$.next(r);\n\n      // tslint:disable-next-line: no-unused-expression\n      new Chartist.Pie(\n        '.ct-chart',\n        {\n          labels: [' ', ' ', ' ', ' '],\n          series: [r.PercentOpen, r.PercentOverdue, r.PercentComplete, r.PercentExpired],\n        },\n        {\n          donut: true,\n          donutWidth: 30,\n          height: 200,\n          donutSolid: true,\n          showLabel: true,\n        }\n      );\n    });\n    this.subscriptions.push(kpiServiceSub);\n  }\n\n  private buildChart(percent: number): Chart {\n    return {\n      type: 'Pie',\n      data: {\n        series: [percent, 100 - percent],\n      },\n      options: {\n        donut: true,\n        height: 400,\n        showLabel: false,\n      },\n    } as Chart;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { LocationsSelectComponent } from './locations-select/locations-select.component';\nimport { TasksSummaryDonutsComponent } from './tasks-summary-donuts/tasks-summary-donuts.component';\n\n@NgModule({\n  declarations: [HomeComponent, LocationsSelectComponent, TasksSummaryDonutsComponent],\n  imports: [SharedModule, HomeRoutingModule],\n})\nexport class HomeModule {}\n","import { Component, Input, OnInit, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiOrganizationService, Organization, Location } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-locations-select',\n  styleUrls: ['locations-select.component.scss'],\n  template: `\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Locations</mat-label>\n      <mat-select [(value)]=\"selected\" (selectionChange)=\"changeLocation()\" required>\n        <mat-option [value]=\"option.ID\" *ngFor=\"let option of locations$ | async\">{{ option.Name }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LocationsSelectComponent implements OnInit {\n  @Input() organizationId: number;\n  @Input() locationId: number;\n\n  @Output() locationChange = new EventEmitter<number>();\n\n  selected: number;\n  locations$: Observable<Location[]>;\n\n  constructor(private organizationService: ApiOrganizationService) {}\n\n  ngOnInit(): void {\n    this.locations$ = this.organizationService.getOrg(this.organizationId).pipe(\n      map((response: Organization) => {\n        this.selected = response.LocationList && response.LocationList.length ? response.LocationList[0].ID : undefined;\n        return response.LocationList;\n      })\n    );\n  }\n\n  changeLocation() {\n    this.locationChange.emit(this.selected);\n  }\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { KPI } from '@xenon/api';\nimport { Chart } from '@xenon/ui';\n\n@Component({\n  selector: 'xenon-tasks-summary-donuts',\n  styleUrls: ['./tasks-summary-donuts.component.scss'],\n  template: `\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around\" *ngIf=\"kpi && charts\" class=\"summary-donuts\">\n      <div class=\"donut open\">\n        <div class=\"legend text-center\">\n          <div class=\"percent\">{{ kpi.PercentOpen }}%</div>\n          <div class=\"title\">Open</div>\n        </div>\n        <xenon-ui-chart-donut [chart]=\"charts.open\"> </xenon-ui-chart-donut>\n      </div>\n      <div class=\"donut complete\">\n        <div class=\"legend text-center\">\n          <div class=\"percent\">{{ kpi.PercentComplete }}%</div>\n          <div class=\"title\">Complete</div>\n        </div>\n        <xenon-ui-chart-donut [chart]=\"charts.complete\"> </xenon-ui-chart-donut>\n      </div>\n      <div class=\"donut overdue\">\n        <div class=\"legend text-center\">\n          <div class=\"percent\">{{ kpi.PercentOverdue }}%</div>\n          <div class=\"title\">Overdue</div>\n        </div>\n        <xenon-ui-chart-donut [chart]=\"charts.overdue\"> </xenon-ui-chart-donut>\n      </div>\n      <div class=\"donut missed\">\n        <div class=\"legend text-center\">\n          <div class=\"percent\">{{ kpi.PercentExpired }}%</div>\n          <div class=\"title\">Expired</div>\n        </div>\n        <xenon-ui-chart-donut [chart]=\"charts.expired\"> </xenon-ui-chart-donut>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TasksSummaryDonutsComponent {\n  @Input() kpi: KPI;\n  @Input() charts: { complete: Chart; overdue: Chart; expired: Chart; open: Chart };\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TasksByDate, Task } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-task-list-by-date',\n  styleUrls: ['./task-list-by-date.component.scss'],\n  template: `\n    <div *ngIf=\"filteredEmptyTasksByDate.length > 0\" class=\"h-100\">\n      <div class=\"task-list-by-date\" fxLayout=\"row\" *ngFor=\"let mTask of filteredEmptyTasksByDate\">\n        <div fxFlex=\"82px\" class=\"date text-center\" [id]=\"mTask.dateString\" [class.active]=\"mTask.active\" [class.date-is-today]=\"mTask.dateIsToday\">\n          <div class=\"title\">\n            {{\n              mTask.dateString.split('-')[2] === '01'\n                ? (mTask.dateString | amParse: 'YYYY-MM-DD' | amDateFormat: 'MMM')\n                : (mTask.dateString | amParse: 'YYYY-MM-DD' | amDateFormat: 'ddd')\n            }}\n          </div>\n          <div class=\"day clickable\" *ngIf=\"mTask\" (click)=\"clickedDay(mTask.dateString)\">\n            {{ mTask.dateString.split('-')[2] }}\n          </div>\n        </div>\n        <div fxFlex class=\"tasks clickable\">\n          <div *ngFor=\"let task of mTask.tasks\" class=\"clickable\">\n            <mat-card class=\"m-3 p-0\" [ngClass]=\"{ 'task-selected': task.ID === selectedTaskID }\"\n              ><xenon-task-by-date [task]=\"task\" (clickedItem)=\"clickedItem(task)\"> </xenon-task-by-date\n            ></mat-card>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"filteredEmptyTasksByDate.length === 0\" class=\"h-100\">No tasks. Select a different day.</div>\n  `,\n})\nexport class TaskListByDateComponent {\n  @Input() set tasksByDate(tasksByDate: TasksByDate[]) {\n    this.filteredEmptyTasksByDate = tasksByDate.filter((taskObject) => taskObject.tasks.length > 0);\n  }\n  @Input() set setTaskID(setTaskID: number) {\n    this.selectedTaskID = setTaskID;\n  }\n  @Output() dayClicked = new EventEmitter<string>();\n  @Output() itemClicked = new EventEmitter<Task>();\n\n  filteredEmptyTasksByDate: TasksByDate[];\n  selectedTaskID: number;\n\n  clickedDay(dateString: string) {\n    this.dayClicked.emit(dateString);\n  }\n\n  clickedItem(item: Task) {\n    item.ID === this.selectedTaskID ? (this.selectedTaskID = null) : (this.selectedTaskID = item.ID);\n    this.itemClicked.emit(item);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TasksComponent } from './tasks.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TasksComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n","import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { AppBase } from '../../../app-base';\nimport { switchMap } from 'rxjs/operators';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport * as _ from 'lodash-es';\nimport { UtilCloneService, UtilLocalStorageService, UtilMomentService } from '@xenon/utils';\nimport { TasksByDate, Task, ApiTaskService, ApiFormService, CreateTaskResponse } from '@xenon/api';\nimport { UiScrollService } from '@xenon/ui';\nimport { TaskFilterItem } from '../../../shared/components/tasks-filter/tasks-filter.component';\nimport { TaskFormComponent } from '../../../shared/modules/task-form/task-form.component';\nimport * as moment from 'moment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'xenon-tasks',\n  styleUrls: ['./tasks.component.scss'],\n  templateUrl: './tasks.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TasksComponent extends AppBase implements OnDestroy {\n  filterItems = [\n    {\n      active: true,\n      label: 'All Tasks',\n      value: 'all-tasks',\n    },\n    {\n      active: true,\n      label: 'Scheduled',\n      value: 'scheduled',\n    },\n    {\n      active: true,\n      label: 'Open',\n      value: 'open',\n    },\n    {\n      active: true,\n      label: 'Overdue',\n      value: 'overdue',\n    },\n    {\n      active: true,\n      label: 'Complete',\n      value: 'complete',\n    },\n    {\n      active: true,\n      label: 'Expired',\n      value: 'expired',\n    },\n    {\n      active: false,\n      label: 'Unassigned Tasks',\n      value: 'unassigned-tasks',\n    },\n    {\n      active: false,\n      label: 'My Tasks',\n      value: 'my-tasks',\n    },\n    {\n      active: false,\n      label: 'Team Assignments',\n      value: 'team-assignments',\n    },\n    {\n      active: false,\n      label: 'Role Assignments',\n      value: 'role-assignments',\n    },\n  ];\n\n  public date$: BehaviorSubject<NgbDateStruct> = new BehaviorSubject(null);\n  public filterItems$: BehaviorSubject<TaskFilterItem[]> = new BehaviorSubject(this.filterItems);\n  public search$: BehaviorSubject<string> = new BehaviorSubject('');\n  public tasksByDate$: BehaviorSubject<TasksByDate[]> = new BehaviorSubject<TasksByDate[]>([]);\n  public infoForChecklist$: BehaviorSubject<Task> = new BehaviorSubject<Task>(null);\n  public data$: Observable<TasksByDate[]> = combineLatest([this.tasksByDate$, this.date$, this.filterItems$, this.search$]).pipe(\n    switchMap(([tbd, date, filter, search]) => {\n      // build tasks by date array\n      const data = tbd ? tbd : this.localStorage.getItem('tasks-data');\n      let newTbd: TasksByDate[] = this.buildTasksByDateArray(data);\n      // filter by search\n      if (search && search.length) {\n        newTbd = this.filterBySearch(newTbd, search);\n      }\n\n      // filter by filterItems\n      if (filter) {\n        newTbd = this.filterByFilters(newTbd, filter);\n      }\n\n      // filter by date\n      if (date) {\n        newTbd = this.filterByDate(newTbd, date);\n      }\n\n      // if currently selected not in newTbd re-add it\n      if (this.setSelectedTaskID.value > 0 && newTbd.every((newTbdItem) => newTbdItem.tasks.every((task) => task.ID !== this.setSelectedTaskID.value))) {\n        let selectedTask;\n        this.tasksByDate$.value.forEach((taskByDate) => {\n          if (taskByDate.dateIsToday) {\n            selectedTask = taskByDate.tasks.find((task) => task.ID === this.setSelectedTaskID.value);\n          }\n        });\n        newTbd.map((tbdItem) => (tbdItem.dateIsToday ? tbdItem.tasks.push(selectedTask) : newTbd));\n        this.taskHiddenSnackbar = true;\n      }\n      return of(newTbd);\n    })\n  );\n\n  public setSelectedTaskID: BehaviorSubject<number> = new BehaviorSubject(null);\n  public closeChecklistPanel: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  public taskHiddenSnackbar = false;\n\n  private today = moment().toDate();\n\n  constructor(\n    private localStorage: UtilLocalStorageService,\n    private taskService: ApiTaskService,\n    private formService: ApiFormService,\n    private bottomSheet: MatBottomSheet,\n    private snackBar: MatSnackBar\n  ) {\n    super(localStorage);\n\n    this.taskService.stringDateRange$.next(this.getTaskDateRange());\n    this.taskService.organizationId$.next(this.organizationId);\n    this.taskService.locationId$.next(this.locationId);\n    this.refreshData();\n    this.reset();\n    const localFilters = this.localStorage.getItem('tasksFilterItems');\n    if (localFilters) {\n      this.filterChange(localFilters);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n  }\n\n  public reset(date?: Date): void {\n    if (!date) date = this.today;\n\n    this.date$.next({\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    });\n    this.filterItems.forEach((i) => (i.active = i.value === 'all-tasks'));\n    this.filterItems$.next(this.filterItems);\n    this.search$.next('');\n    this.scrollToDate(false, date);\n  }\n\n  public dateChange(event: NgbDateStruct): void {\n    const date = {\n      day: event.day < 10 ? `0${event.day}` : event.day,\n      month: event.month < 10 ? `0${event.month}` : event.month,\n      year: event.year,\n    } as NgbDateStruct;\n    const targetDate = UtilMomentService.new(`${date.year}-${date.month}-${date.day}`, 'YYYY-MM-DD').format('YYYY-MM-DD');\n    setTimeout(() => UiScrollService.scrollTo(targetDate), 0);\n    this.date$.next(date);\n\n    const myDate = new Date(event.year, event.month - 1, event.day);\n    const updatedDateRange = this.getTaskDateRange(myDate);\n    this.taskService.stringDateRange$.next(updatedDateRange);\n    this.reset(myDate);\n  }\n\n  filterChange(event: TaskFilterItem[]): void {\n    this.filterItems$.next(event);\n  }\n\n  searchChange(event: string): void {\n    this.search$.next(event);\n  }\n\n  public itemClicked(event: Task | { TaskType: number; TaskTypeID: number }): void {\n    if (event.TaskType === 1) {\n      this.closeChecklistPanel.next(!this.closeChecklistPanel.value);\n      const bottomSheet = forkJoin([this.formService.get(event.TaskTypeID), this.formService.getTypes()]).subscribe(([form, formItemTypes]) => {\n        const bs = this.bottomSheet\n          .open(TaskFormComponent, {\n            data: {\n              form: form,\n              formItemTypes: formItemTypes,\n            },\n            backdropClass: 'task-form-backdrop',\n            panelClass: 'task-form-panel',\n          })\n          .afterDismissed()\n          .subscribe(() => {\n            this.deselectTask();\n            this.refreshData();\n          });\n        this.subscriptions.push(bs);\n      });\n      this.subscriptions.push(bottomSheet);\n    } else {\n      // cloning so ngOnChanges is triggered when the user opens the same task twice.\n      const clone = JSON.parse(JSON.stringify(event));\n      this.infoForChecklist$.next(clone);\n    }\n  }\n\n  public createTask(): void {\n    const data = this.localStorage.getItem('user');\n    const availTime = moment().hours() + ':00';\n    const dueTime = moment().hours() + 5 + ':00';\n    const expireTime = moment().hours() + 10 + ':00';\n    const newTask = {\n      CreatedBy: this.loggedInUser.CurrentUser.ID,\n      OrgID: data.CurrentOrg.ID,\n      LocationID: data.CurrentLocation.ID,\n      TaskType: 2,\n      TaskTypeID: 0,\n      DriveID: 0,\n      Name: 'Untitled Task',\n      Description: 'Description',\n      AvailableDate: moment.utc(moment().toDate()).format(moment.HTML5_FMT.DATE),\n      AvailableTime: availTime.length === 4 ? `0${availTime}` : availTime,\n      DueDate: moment.utc(moment().toDate()).format(moment.HTML5_FMT.DATE),\n      DueTime: dueTime.length === 4 ? `0${dueTime}` : dueTime,\n      ExpireDate: moment.utc(moment().toDate()).add(1, 'd').format(moment.HTML5_FMT.DATE),\n      ExpireTime: expireTime.length === 4 ? `0${expireTime}` : expireTime,\n    };\n    this.taskService\n      .addTask(newTask)\n      .then((response: CreateTaskResponse) => {\n        this.itemClicked({ ...newTask, ID: response.NewTask.ID, AssignedUsers: [], CurrentStatus: 'open' });\n        if (this.tasksByDate$.value.some((date) => date.dateIsToday)) {\n          const newTasksByDateAdd = this.tasksByDate$.value.map((date) => {\n            if (date.dateIsToday) {\n              return { ...date, tasks: [...date.tasks, response.NewTask] };\n            } else {\n              return date;\n            }\n          });\n          this.tasksByDate$.next(newTasksByDateAdd);\n        } else {\n          const newTasksByDateAdd = [\n            ...this.tasksByDate$.value,\n            { active: true, dateIsToday: true, dateString: moment().format('YYYY-MM-DD'), tasks: [response.NewTask] },\n          ] as TasksByDate[];\n          this.tasksByDate$.next(newTasksByDateAdd);\n        }\n\n        this.scrollToDate();\n\n        this.setSelectedTaskID.next(response.NewTask.ID);\n        const snackBarRef = this.snackBar.open('Task Created', 'Undo', {\n          duration: 4000,\n        });\n        snackBarRef.afterDismissed().subscribe((info) => {\n          if (info.dismissedByAction) {\n            this.setSelectedTaskID.next(-1);\n            this.hideTask(response.NewTask);\n            this.closeChecklistPanel.next(!this.closeChecklistPanel.value);\n            this.taskService.deleteTask(response.NewTask.ID).subscribe(() => {\n              const newTasksByDateDelete = this.tasksByDate$.value.map((date) => {\n                if (date.dateIsToday) {\n                  return { ...date, tasks: date.tasks.filter((task) => task.ID !== response.NewTask.ID) };\n                } else {\n                  return date;\n                }\n              });\n\n              this.tasksByDate$.next(newTasksByDateDelete);\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        this.snackBar.open('Error created Task', 'Close', {\n          duration: 4000,\n        });\n      });\n  }\n\n  public dayClicked(event: string): void {\n    const frag = event.split('-');\n    const date = {\n      day: parseInt(frag[2], 10),\n      month: parseInt(frag[1], 10),\n      year: parseInt(frag[0], 10),\n    } as NgbDateStruct;\n    const targetDate = UtilMomentService.new(`${date.year}-${date.month}-${date.day}`, 'YYYY-MM-DD').format('YYYY-MM-DD');\n    setTimeout(() => UiScrollService.scrollTo(targetDate), 0);\n    this.date$.next(date);\n  }\n\n  public refreshData(): void {\n    const sub = this.taskService.getTasksListByDate$.subscribe((res) => {\n      this.localStorage.setItem('tasks-data', UtilCloneService.deepClone(res));\n      this.tasksByDate$.next(res);\n    });\n    this.subscriptions.push(sub);\n  }\n\n  public hideTask(taskToHide: Task): void {\n    if (!taskToHide) {\n      this.refreshData();\n      return;\n    }\n    this.tasksByDate$.next(\n      this.tasksByDate$.getValue().map((byDate) => {\n        if (byDate.dateString === taskToHide.AvailableDate) {\n          return { ...byDate, tasks: byDate.tasks.filter((byDateFilter) => byDateFilter.ID !== taskToHide.ID) };\n        } else {\n          return byDate;\n        }\n      })\n    );\n  }\n\n  public deselectTask(): void {\n    if (this.taskHiddenSnackbar) {\n      const snackBarRef = this.snackBar.open('New task hidden by filters', 'Clear Filters', {\n        duration: 5000,\n      });\n      snackBarRef.afterDismissed().subscribe((info) => {\n        if (info.dismissedByAction) {\n          const tempDate = this.date$.value;\n          const tempFilterItems = this.filterItems$.value;\n          const tempSearch = this.search$.value;\n          this.reset();\n          const snackBarRef2 = this.snackBar.open('Filters cleared', 'Undo', {\n            duration: 5000,\n          });\n          snackBarRef2.afterDismissed().subscribe((info2) => {\n            if (info2.dismissedByAction) {\n              this.date$.next(tempDate);\n              this.filterItems$.next(tempFilterItems);\n              this.search$.next(tempSearch);\n              this.scrollToDate();\n            }\n          });\n        }\n      });\n      this.taskHiddenSnackbar = false;\n    }\n    this.setSelectedTaskID.next(this.setSelectedTaskID.value <= 0 ? this.setSelectedTaskID.value - 1 : 0);\n  }\n\n  public scrollToDate(hard: boolean = false, date: Date = this.today): void {\n    const targetDate = UtilMomentService.new(date).format('YYYY-MM-DD');\n    setTimeout(() => UiScrollService.scrollTo(targetDate, hard), 0);\n  }\n\n  private filterByDate(data: TasksByDate[], date: NgbDateStruct): TasksByDate[] {\n    const targetDate = UtilMomentService.new(`${date.year}-${date.month}-${date.day}`, 'YYYY-MM-D').format('YYYY-MM-DD');\n    data.forEach((item: TasksByDate) => {\n      item.active = item.dateString === targetDate;\n    });\n    return data;\n  }\n\n  private filterBySearch(data: TasksByDate[], search: string): TasksByDate[] {\n    data.forEach((item: TasksByDate) => {\n      const filteredTasks = [];\n      item.tasks.forEach((task: Task) => {\n        if (task.Name.toLowerCase().indexOf(search.toLowerCase()) > -1) {\n          filteredTasks.push(task);\n        }\n      });\n      item.tasks = filteredTasks;\n    });\n    return data;\n  }\n\n  private filterByFilters(data: TasksByDate[], filter: TaskFilterItem[]): TasksByDate[] {\n    const activeItems = filter.filter((i) => i.active);\n    data.forEach((item: TasksByDate) => {\n      const filteredTasks = [];\n      item.tasks.forEach((task: Task) => {\n        let shouldInclude = false;\n        shouldInclude = this.checkFilterByStatus(activeItems, task);\n        if (shouldInclude) {\n          shouldInclude = this.checkFilterByMyAssignments(activeItems, task);\n        }\n        if (shouldInclude) {\n          shouldInclude = this.checkFilterByTeamAssignments(activeItems, task);\n        }\n        if (shouldInclude) {\n          shouldInclude = this.checkFilterByRoleAssignments(activeItems, task);\n        }\n        if (shouldInclude) {\n          filteredTasks.push(task);\n        }\n      });\n      item.tasks = filteredTasks;\n    });\n    return data;\n  }\n\n  private buildTasksByDateArray(tbd: TasksByDate[]): TasksByDate[] {\n    const newTbd = [];\n    const dateRange = this.getTaskDateRange();\n    let dateBuild = dateRange.start;\n\n    let tbdItem = null;\n    do {\n      const index = _.findIndex(tbd, { dateString: dateBuild });\n      if (index > -1) {\n        tbdItem = tbd[index];\n      } else {\n        const dateIsToday = UtilMomentService.new(this.today).format('YYYY-MM-DD') === dateBuild;\n        tbdItem = {\n          active: false,\n          dateString: dateBuild,\n          tasks: [],\n          dateIsToday: dateIsToday,\n        };\n      }\n      newTbd.push(tbdItem);\n      dateBuild = UtilMomentService.new(dateBuild, 'YYYY-MM-DD').add(1, 'day').format('YYYY-MM-DD');\n    } while (dateBuild !== dateRange.end);\n    return newTbd;\n  }\n\n  private checkFilterByStatus(activeItems: TaskFilterItem[], task: Task): boolean {\n    if (activeItems.some((checkItem) => checkItem.value.toLowerCase() === 'all-tasks') || activeItems.length === 0) {\n      return true;\n    } else {\n      return activeItems.some((checkItem) => checkItem.value.toLowerCase() === task.CurrentStatus.toLowerCase());\n    }\n  }\n\n  private checkFilterByMyAssignments(activeItems: TaskFilterItem[], task: Task): boolean {\n    const filterByUnassigned = activeItems.some((checkItem) => checkItem.value === 'unassigned-tasks');\n    const filterByMyTasks = activeItems.some((checkItem) => checkItem.value === 'my-tasks');\n    if (!filterByUnassigned && !filterByMyTasks) {\n      return true;\n    }\n    if (task.AssignedUsers.length === 0) {\n      return filterByUnassigned;\n    } else if (task.AssignedUsers.some((checkUser) => checkUser.ID === this.loggedInUser.CurrentUser.ID)) {\n      return filterByMyTasks;\n    }\n  }\n\n  private checkFilterByTeamAssignments(activeItems: TaskFilterItem[], task: Task): boolean {\n    const allTeamItems = activeItems.filter((item) => item.value.includes('_teamID'));\n    if (allTeamItems.length === 0) {\n      return true;\n    }\n\n    return allTeamItems.some((checkItem) => task.AssignedUsers.some((assignedUser) => assignedUser.ID.toString() === checkItem.value.substring(7, 8)));\n  }\n\n  private checkFilterByRoleAssignments(activeItems: TaskFilterItem[], task: Task): boolean {\n    const allRoleItems = activeItems.filter((item) => item.value.includes('_roleID'));\n    if (task.AssignedRoles.length === 0 && activeItems.some((item) => item.value === 'none')) {\n      return true;\n    } else if (allRoleItems.length === 0) {\n      return true;\n    }\n    return allRoleItems.some((checkItem) => task.AssignedRoles.some((assignedRole) => assignedRole.ID.toString() === checkItem.value.substring(7, 8)));\n  }\n\n  private getTaskDateRange(date?: Date): { start: string; end: string } {\n    if (!date) date = this.today;\n\n    return {\n      start: UtilMomentService.new(date).format('YYYY-MM-DD'),\n      end: UtilMomentService.new(date).add(7, 'days').format('YYYY-MM-DD'),\n    };\n  }\n}\n","<div fxLayout=\"row\" class=\"task-layout\">\n  <div fxFlex=\"336px\" class=\"task-filters overflow-y-auto overflow-hidden\">\n    <xenon-tasks-calender-filter [selectedDate]=\"date$ | async\" (dateChange)=\"dateChange($event)\"></xenon-tasks-calender-filter>\n\n    <mat-divider></mat-divider>\n\n    <xenon-tasks-filter [items]=\"filterItems$ | async\" (filterChange)=\"filterChange($event)\"></xenon-tasks-filter>\n  </div>\n  <div fxFlex class=\"task-details\">\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayout=\"row\">\n        <h5 class=\"title mr-4\">Tasks</h5>\n        <button mat-stroked-button (click)=\"scrollToDate(true)\">Today</button>\n      </div>\n\n      <xenon-ui-string-search [searchString]=\"search$ | async\" (searchChange)=\"searchChange($event)\"> </xenon-ui-string-search>\n    </div>\n\n    <mat-drawer-container autosize>\n      <div class=\"page-body background-gradient\">\n        <xenon-task-list-by-date\n          id=\"task-list-by-date\"\n          [tasksByDate]=\"data$ | async\"\n          [setTaskID]=\"setSelectedTaskID | async\"\n          (dayClicked)=\"dayClicked($event)\"\n          (itemClicked)=\"itemClicked($event)\"\n        >\n        </xenon-task-list-by-date>\n        <button mat-fab mat-flat-button (click)=\"createTask()\" class=\"save-button\" color=\"primary\" aria-label=\"Save changes\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n\n      <xenon-checklist-panel\n        [checkListData]=\"infoForChecklist$ | async\"\n        [currentUserID]=\"loggedInUser.CurrentUser?.ID\"\n        [closeChecklist]=\"closeChecklistPanel | async\"\n        (refresh)=\"refreshData()\"\n        (closed)=\"deselectTask()\"\n        (hideItem)=\"hideTask($event)\"\n      >\n      </xenon-checklist-panel>\n    </mat-drawer-container>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TasksComponent } from './tasks.component';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { TaskListByDateComponent } from './task-list-by-date/task-list-by-date.component';\n\n@NgModule({\n  declarations: [TaskListByDateComponent, TasksComponent],\n  exports: [TasksComponent],\n  imports: [SharedModule, TasksRoutingModule],\n})\nexport class TasksModule {}\n","import { Component, Input } from '@angular/core';\nimport { User } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-team-list',\n  styles: [\n    '.profile-initials { height: 30px; width: 30px; border-radius: 50%; background: #e6f5fe; padding: 10px; margin-right: 10px; }',\n    '.mat-cell { height: 56px; border: none; }',\n    '.mt--32 { margin-top: -32px; }',\n  ],\n  template: `\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z0\">\n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td mat-cell *matCellDef=\"let element\" fxLayoutAlign=\"start center\">\n          <xenon-ui-user-photo class=\"mt--32\" [userArray]=\"[element]\"></xenon-ui-user-photo>\n          <p class=\"ml-3 mb-0\">{{ element.FirstName }} {{ element.LastName }}</p>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"JobTitle\">\n        <th mat-header-cell *matHeaderCellDef>Title</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.JobTitle?.trim().length ? element.JobTitle : 'Unknown' }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Organization\">\n        <th mat-header-cell *matHeaderCellDef>Organization</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.Org?.Name }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Email\">\n        <th mat-header-cell *matHeaderCellDef>Email</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.Email }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Phone\">\n        <th mat-header-cell *matHeaderCellDef>Phone</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.Phone }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  `,\n})\nexport class TeamListComponent {\n  displayedColumns: string[] = ['Name', 'JobTitle', 'Organization', 'Email', 'Phone'];\n\n  @Input() users: User[];\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TeamComponent } from './team.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), MatSidenavModule],\n  exports: [RouterModule],\n})\nexport class TeamRoutingModule {}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { AppBase } from '../../../app-base';\nimport { map, switchMap } from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport { ApiOrganizationService, ApiUserService, Organization, User } from '@xenon/api';\nimport { UtilCloneService, UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-team',\n  template: `\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <h6 class=\"title\">Team</h6>\n      <xenon-ui-string-search [searchString]=\"search$ | async\" (searchChange)=\"searchChange($event)\"> </xenon-ui-string-search>\n    </div>\n\n    <div class=\"page-body\">\n      <xenon-team-list [users]=\"usersData$ | async\"></xenon-team-list>\n    </div>\n  `,\n})\nexport class TeamComponent extends AppBase {\n  queue = [];\n  users: User[];\n  users$ = this.userService.getUsersByOrganization(this.organizationId).pipe(\n    switchMap((response: User[]) => {\n      this.users = response;\n      const orgIds = _.uniq(response.map((r) => r.PrimaryOrgID));\n      orgIds.forEach((id) => this.queue.push(this.organizationService.getOrg(id)));\n      return forkJoin(this.queue);\n    }),\n    map((organizations: Organization[]) => {\n      this.users.forEach((u) => {\n        const orgIndex = _.findIndex(organizations, { ID: u.PrimaryOrgID });\n        if (orgIndex > -1) {\n          u.Org = organizations[orgIndex];\n        }\n      });\n      return this.users;\n    })\n  );\n\n  search$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n  usersData$: Observable<User[]> = combineLatest([this.users$, this.search$]).pipe(\n    switchMap(([users, search]) => {\n      let newUserList: User[] = UtilCloneService.deepClone(users);\n      if (search) {\n        newUserList = newUserList.filter((u: User) => {\n          const searchStr = `${u.FirstName} ${u.LastName} ${u.JobTitle} ${u.Email} ${u.Phone}`.toLowerCase();\n          const searchIndex = searchStr.indexOf(search.toLowerCase());\n          return searchIndex > -1;\n        });\n      }\n      return of(newUserList);\n    })\n  );\n\n  constructor(private localStorage: UtilLocalStorageService, private userService: ApiUserService, private organizationService: ApiOrganizationService) {\n    super(localStorage);\n  }\n\n  searchChange(event: string) {\n    this.search$.next(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TeamRoutingModule } from './team-routing.module';\nimport { TeamComponent } from './team.component';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { TeamListComponent } from './team-list/team-list.component';\nimport { UiUserPhotoModule } from '@xenon/ui';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [TeamListComponent, TeamComponent],\n  imports: [SharedModule, TeamRoutingModule, UiUserPhotoModule, MatTableModule, FlexLayoutModule],\n})\nexport class TeamModule {}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { ApiTaskService, BaseResponse, SubTask, UpdateSubTaskNameRequest, UpdateSubTaskStatusRequest, UpdateSubTaskStatusResponse } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { UiNotificationService, NotificationType } from '@xenon/ui';\n\n@Component({\n  selector: 'xenon-checklist-panel-subtask-list',\n  styleUrls: ['./checklist-panel-subtask-list.component.scss'],\n  template: `<div *ngFor=\"let subtask of subtaskList\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <mat-checkbox [checked]=\"subtask.CompletedAt\" (change)=\"updateSubTaskStatus(subtask.ID, currentUserID, $event.checked)\" class=\"mr-2 ml-3\"></mat-checkbox>\n      <mat-form-field class=\"mat-form-field-alternate w-100\">\n        <input class=\"ml-2\" matInput [(ngModel)]=\"subtask.SubTaskDesc\" (keyup.enter)=\"updateSubtaskName(subtask)\" (blur)=\"updateSubtaskName(subtask)\" />\n      </mat-form-field>\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"More options menu\" class=\"ml-auto\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"deleteSubTask(subtask)\">\n          <mat-icon>delete</mat-icon>\n          <span>Delete</span>\n        </button>\n      </mat-menu>\n\n      <mat-divider></mat-divider>\n    </div>\n    <div fxLayout=\"column\">\n      <div fxLayoutAlign=\"space-between center\" *ngIf=\"showAddNewSubTask\">\n        <mat-checkbox class=\"mr-3 ml-3\"></mat-checkbox>\n        <mat-form-field class=\"w-100\" floatLabel=\"never\">\n          <input matInput #newSubTaskEl (keyup.enter)=\"addSubTask(newSubTaskEl, true)\" (blur)=\"addSubTask(newSubTaskEl, false)\" placeholder=\"Enter Subtask\" />\n        </mat-form-field>\n        <mat-icon class=\"mx-3 clickable\">done</mat-icon>\n      </div>\n\n      <button mat-button color=\"primary\" class=\"p-0 text-left mx-3 mt-12px\" (click)=\"clickedShowAddNewSubTask()\">\n        <mat-icon class=\"mr-1\">add_box</mat-icon>\n        Add Subtask\n      </button>\n    </div>`,\n})\nexport class ChecklistPanelSubtaskListComponent {\n  @Input() subtaskList: SubTask[] = [];\n  @Input() taskID: number;\n  @Output() refresh = new EventEmitter();\n  @Output() newSubTaskList = new EventEmitter<SubTask[]>();\n  @ViewChild('newSubTaskEl') newSubTaskEl: HTMLInputElement;\n  @ViewChild('newSubTaskEl') newSubTaskElRef: ElementRef;\n  public showAddNewSubTask = false;\n  public currentUserID = this.localStorage.getItem('user').CurrentUser.ID;\n\n  constructor(private taskService: ApiTaskService, private notificationService: UiNotificationService, private localStorage: UtilLocalStorageService) {}\n  /**\n   * Updates a subtask to either 'complete' or 'incomplete'.\n   */\n  public updateSubTaskStatus(subTaskID: number, checked: boolean) {\n    this.taskService\n      .updateSubTaskStatus(subTaskID, this.currentUserID, checked)\n      .then((_) => {\n        this.refresh.emit();\n      })\n      .catch((_) => {\n        this.showChecklistError(`An error occurred updating the subtask status.`);\n      });\n  }\n\n  public updateSubtaskName(subtask: SubTask) {\n    const request: UpdateSubTaskNameRequest = {\n      ID: subtask.ID,\n      SubTaskDesc: subtask.SubTaskDesc,\n    };\n\n    this.taskService\n      .updateSubTaskName(request)\n      .then((_) => {\n        this.notificationService.show(NotificationType.success, 'Close', 'Updated Subtask', 5000);\n      })\n      .catch((_) => {\n        this.showChecklistError(`An error occurred updating sub task name.`);\n      });\n  }\n\n  emitList(): void {\n    this.newSubTaskList.emit(this.subtaskList);\n  }\n\n  public deleteSubTask(subtask: SubTask) {\n    this.taskService\n      .deleteSubTask(subtask.ID)\n      .then((response: BaseResponse) => {\n        const indexToRemove = this.subtaskList.findIndex((i) => i.ID === subtask.ID);\n        this.subtaskList.splice(indexToRemove, 1);\n        this.emitList();\n      })\n      .catch((err) => {\n        this.showChecklistError(`An error occurred deleting sub task.`);\n      });\n  }\n\n  public addSubTask(newSubTaskEl, showAddNewSubTask: boolean) {\n    if (!newSubTaskEl.value) {\n      this.showAddNewSubTask = false;\n      return;\n    }\n\n    const subTask: UpdateSubTaskStatusRequest = {\n      TaskID: this.taskID,\n      SubTaskDesc: newSubTaskEl.value,\n      CreatedBy: this.currentUserID,\n    };\n\n    this.taskService\n      .addSubTask(subTask)\n      .then((response: UpdateSubTaskStatusResponse) => {\n        newSubTaskEl.value = ''; // reset input\n        this.showAddNewSubTask = showAddNewSubTask; // hide 'add new' input\n        const newSubTaskObject = {\n          ID: response.ID,\n          TaskID: subTask.TaskID,\n          SubTaskDesc: subTask.SubTaskDesc,\n          CompletedAt: null,\n          CreatedBy: this.currentUserID,\n        };\n        this.subtaskList ? this.subtaskList.push(newSubTaskObject) : (this.subtaskList = [newSubTaskObject]);\n        this.emitList();\n      })\n      .catch((err) => {\n        this.showChecklistError(`An error occurred adding task.`);\n      });\n  }\n\n  public clickedShowAddNewSubTask(): void {\n    this.showAddNewSubTask = true;\n    setTimeout(() => this.newSubTaskElRef.nativeElement.focus(), 200);\n  }\n\n  private showChecklistError(message: string): void {\n    this.notificationService.show(NotificationType.error, 'Error', message, 5000);\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiTaskService, ApiTaskTemplateService, ApiUserService, BaseResponse, SubTask, Task, TaskTemplate, UpdateTaskRequest, User } from '@xenon/api';\nimport { EditTaskTemplateComponent, NotificationType, UiListSelectDialogService, UiNotificationService } from '@xenon/ui';\nimport * as moment from 'moment';\nimport { TaskByDateService } from '../task-by-date/task-by-date.service';\n\n@Component({\n  selector: 'xenon-checklist-panel',\n  styleUrls: ['./checklist-panel.component.scss'],\n  templateUrl: './checklist-panel.component.html',\n})\nexport class ChecklistPanelComponent implements OnChanges {\n  public checklist = {\n    name: '',\n    taskDue: null,\n    taskStart: null,\n    taskEnd: null,\n    taskStatusPanelOpen: false,\n    description: '',\n    selectedChecklistTask: [] as SubTask[],\n    id: null,\n    currentStatus: '',\n    itemsComplete: null,\n    itemsTotal: null,\n    assignedRoles: null,\n  };\n\n  public checklistTemplate: TaskTemplate;\n\n  @ViewChild('drawer') sideNav: MatSidenav;\n  @Input() currentUserID: number;\n  @Input() checkListData: Task;\n  @Input() set closeChecklist(closeChecklist: boolean) {\n    if (closeChecklist !== null && !this.sideNav.opened) {\n      this.sideNav.toggle();\n    }\n  }\n  @Output() refresh = new EventEmitter<void>();\n  @Output() hideItem = new EventEmitter<Task>();\n  @Output() closed = new EventEmitter<void>();\n\n  public taskDatePickerFormGroup: FormGroup;\n\n  constructor(\n    private notificationService: UiNotificationService,\n    private taskService: ApiTaskService,\n    private taskByDateService: TaskByDateService,\n    private _snackBar: MatSnackBar,\n    private apiUserService: ApiUserService,\n    private uiListSelectService: UiListSelectDialogService<User>,\n    private apiTaskTemplateService: ApiTaskTemplateService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.checkListData) {\n      const taskNotAlreadyOpen = !this.sideNav.opened || changes?.checkListData?.currentValue?.ID !== changes?.checkListData?.previousValue?.ID;\n\n      if (taskNotAlreadyOpen) {\n        this.openChecklistSidePanel();\n      } else {\n        this.sideNav.toggle();\n      }\n    }\n  }\n\n  public closeChecklistPanel(emptyData: boolean) {\n    this.closed.emit();\n    if (emptyData) {\n      this.taskByDateService.nextTask(null);\n    }\n    this.sideNav.toggle();\n  }\n\n  public updateTask() {\n    const taskDue = this.taskDatePickerFormGroup.value.taskDue ? moment(this.taskDatePickerFormGroup.value.taskDue).format() : this.checklist.taskDue;\n    const taskStart = this.taskDatePickerFormGroup.value.taskStart ? moment(this.taskDatePickerFormGroup.value.taskStart).format() : this.checklist.taskStart;\n    const taskEnd = this.taskDatePickerFormGroup.value.taskEnd ? moment(this.taskDatePickerFormGroup.value.taskEnd).format() : this.checklist.taskEnd;\n    const request: UpdateTaskRequest = {\n      ID: this.checklist.id,\n      Description: this.checklist.description.replace(/\\s/g, '').length > 0 ? this.checklist.description : 'Description',\n      Name: this.checklist.name.replace(/\\s/g, '').length > 0 ? this.checklist.name : 'Untitled Task',\n      DueDate: taskDue.substring(0, 10),\n      DueTime: taskDue.substring(11, 16) === ' :00:' ? '' : taskDue.substring(11, 16),\n      AvailableDate: taskStart.substring(0, 10),\n      AvailableTime: taskStart.substring(11, 16) === ' :00:' ? '' : taskStart.substring(11, 16),\n      ExpireDate: taskEnd.substring(0, 10),\n      ExpireTime: taskEnd.substring(11, 16) === ' :00:' ? '' : taskEnd.substring(11, 16),\n    };\n\n    this.notificationService.show(NotificationType.info, 'Okay', 'Updating', 1000);\n    this.taskService\n      .updateTask(request)\n      .then((response: BaseResponse) => {\n        this.refresh.next();\n      })\n      .catch((err) => {\n        this.showChecklistError(`An error occurred updating task.`);\n      });\n  }\n\n  public getTaskCompletionPercentage(): string {\n    return Math.floor(this.checklist.itemsComplete / this.checklist.itemsTotal).toString();\n  }\n\n  public addAssignedUser(): void {\n    this.apiUserService.getUsersByOrganization(this.checkListData.OrgID).subscribe((userList: User[]) => {\n      this.uiListSelectService.open({\n        inputList: userList,\n        currentSelectedList: this.checkListData.AssignedUsers,\n        primaryValueSelector1: 'FirstName',\n        primaryValueSelector2: 'LastName',\n        secondaryValueSelector: 'JobTitle',\n        compareValueBy: 'ID',\n        displayUserImage: true,\n      });\n\n      this.uiListSelectService.closed().subscribe((selectedUsers) => {\n        if (!selectedUsers) return;\n\n        const assignUsers = selectedUsers.filter((selectedUser) => {\n          return !this.checkListData.AssignedUsers.includes(selectedUser);\n        });\n        const removeUsers = this.checkListData.AssignedUsers.filter((assignedUser) => {\n          return !selectedUsers.includes(assignedUser);\n        });\n\n        assignUsers.forEach((user) => {\n          this.taskService.assignTaskUser({ taskId: this.checkListData.ID, userID: user.ID }).then((response: BaseResponse) => {});\n        });\n\n        removeUsers.forEach((user) => {\n          this.taskService.removeTaskUser({ taskId: this.checkListData.ID, userID: user.ID }).then((response: BaseResponse) => {});\n        });\n        this.checkListData.AssignedUsers = selectedUsers;\n        this.refresh.next();\n      });\n    });\n  }\n\n  public markTaskComplete() {\n    const taskID = this.checklist.id;\n    const complete = true;\n\n    this.taskService\n      .updateTaskStatus(taskID, this.currentUserID, complete)\n      .then((response: BaseResponse) => {\n        this.closeChecklistPanel(false);\n        const snackBarRef = this.notificationService.show(NotificationType.success, 'UNDO', `${this.checklist.name} completed`, 5000);\n        snackBarRef.onAction().subscribe(() => {\n          // User clicked 'UNDO'.\n          this.updateTaskStatus(taskID, !complete);\n        });\n\n        // if user doesn't click 'UNDO' still refresh data.\n        setTimeout(() => {\n          this.refresh.next();\n        }, 5000);\n      })\n      .catch((err) => {\n        this.showChecklistError(`An error occurred updating task status.`);\n      });\n  }\n\n  public editTemplate(): void {\n    const task = this.checklistTemplate ? this.checklistTemplate : this.createTemplateObject();\n    const dialogRef = this.dialog.open(EditTaskTemplateComponent, {\n      data: {\n        task: task,\n      },\n      panelClass: 'full-page-dialog',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (!result) return;\n      this.apiTaskTemplateService.updateTaskTemplateBatch(result).subscribe((_) => {\n        this.notificationService.show(NotificationType.success, 'Action done', 'Task saved', 2500);\n      });\n    });\n  }\n\n  public deleteTask(): void {\n    this.closeChecklistPanel(false);\n    this.hideItem.emit(this.checkListData);\n    const snackBarRef = this._snackBar.open('Task Deleted', 'Undo', {\n      duration: 4000,\n    });\n    snackBarRef.afterDismissed().subscribe((info) => {\n      if (!info.dismissedByAction) {\n        this.taskService.deleteTask(this.checkListData.ID).subscribe(() => {\n          this.refresh.next();\n        });\n      }\n    });\n    snackBarRef.onAction().subscribe(() => {\n      this.hideItem.emit(null);\n    });\n  }\n\n  public createTemplateObject(): TaskTemplate {\n    const { AssignedRoles, AssignedUsers, CreatedBy, Description, ID, LocationID, Name, OrgID, SubTaskList, TaskType, TaskTypeID } = this.checkListData;\n    return {\n      AssignedRoles: AssignedRoles,\n      AssignedUsers: AssignedUsers,\n      CreatedBy: CreatedBy,\n      Description: Description,\n      ID: ID,\n      LocationID: LocationID,\n      Name: Name,\n      OrgID: OrgID,\n      SubTaskList: SubTaskList,\n      TaskType: TaskType,\n      TaskTypeID: TaskTypeID,\n    };\n  }\n\n  private showChecklistError(message: string): void {\n    this.notificationService.show(NotificationType.error, 'Error', message, 5000);\n  }\n\n  private updateTaskStatus(taskID: number, checked: boolean) {\n    this.taskService\n      .updateTaskStatus(taskID, this.currentUserID, checked)\n      .then((response: BaseResponse) => {\n        this.refresh.next();\n      })\n      .catch((err) => {\n        this.showChecklistError(`An error occurred updating the task status.`);\n      });\n  }\n\n  private openChecklistSidePanel() {\n    this.taskByDateService.nextTask(this.checkListData);\n    this.checklist = {\n      name: this.checkListData.Name === 'Untitled Task' ? '' : this.checkListData.Name,\n      taskDue: moment(this.checkListData.DueDate + 'T' + this.checkListData.DueTime + ':00').toDate(),\n      taskStart: moment(this.checkListData.AvailableDate + 'T' + this.checkListData.AvailableTime + ':00').toDate(),\n      taskEnd: moment(this.checkListData.ExpireDate + 'T' + this.checkListData.ExpireTime + ':00').toDate(),\n      taskStatusPanelOpen: false,\n      description: this.checkListData.Description === 'Description' ? '' : this.checkListData.Description,\n      selectedChecklistTask: this.checkListData.SubTaskList || [],\n      id: this.checkListData.ID,\n      currentStatus: this.checkListData.CurrentStatus,\n      itemsComplete: this.checkListData.ItemsComplete,\n      itemsTotal: this.checkListData.ItemsTotal,\n      assignedRoles: this.checkListData.AssignedRoles,\n    };\n\n    this.taskDatePickerFormGroup = new FormGroup({\n      taskDue: new FormControl(this.checklist.taskDue),\n      taskStart: new FormControl(this.checklist.taskStart),\n      taskEnd: new FormControl(this.checklist.taskEnd),\n    });\n\n    this.apiTaskTemplateService.getTaskTemplateByTemplateID(this.checkListData.TaskTemplateID).subscribe((fullTemplate) => {\n      this.checklistTemplate = fullTemplate;\n    });\n\n    if (!this.sideNav.opened) this.sideNav.toggle();\n  }\n}\n","<mat-drawer #drawer class=\"sidenav\" mode=\"side\" position=\"end\">\n  <div *ngIf=\"checkListData\">\n    <div fxLayoutAlign=\"space-between center\" class=\"p-3\">\n      <mat-icon (click)=\"closeChecklistPanel(true)\" class=\"clickable\">close</mat-icon>\n      <span>\n        <mat-icon class=\"clickable\" (click)=\"markTaskComplete()\">check</mat-icon>\n        <mat-icon [matMenuTriggerFor]=\"menu\" class=\"ml-3 color-gray clickable\">more_vert</mat-icon>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item (click)=\"editTemplate()\">{{ checklistTemplate ? 'Repeat Task' : 'Create Template' }}</button>\n          <button mat-menu-item (click)=\"deleteTask()\">Delete</button>\n        </mat-menu>\n      </span>\n    </div>\n    <mat-form-field class=\"task-name text-subtitle1 w-100 px-3 form-line-gray\" floatLabel=\"never\">\n      <textarea\n        class=\"overflow-hidden\"\n        cdkTextareaAutosize\n        #autosize=\"cdkTextareaAutosize\"\n        matInput\n        [(ngModel)]=\"checklist.name\"\n        (keyup.enter)=\"updateTask()\"\n        (blur)=\"updateTask()\"\n        placeholder=\"Untitled Task\"\n      ></textarea>\n    </mat-form-field>\n    <div fxLayoutAlign=\"start center\" class=\"ml-4 mt--10px mb-1\" fxLayout=\"row wrap\">\n      <div *ngIf=\"checklist.currentStatus !== ''\" class=\"status text-center mb-2\" [ngClass]=\"checklist.currentStatus.toLowerCase()\">\n        <span *ngIf=\"checklist.currentStatus.toLowerCase() === 'scheduled'\">Scheduled</span>\n        <span *ngIf=\"checklist.currentStatus.toLowerCase() === 'complete'\">Complete</span>\n        <span *ngIf=\"checklist.currentStatus.toLowerCase() === 'open'\">Open</span>\n        <span *ngIf=\"checklist.currentStatus.toLowerCase() === 'overdue'\">Overdue</span>\n        <span *ngIf=\"checklist.currentStatus.toLowerCase() === 'expired'\">Expired</span>\n      </div>\n      <div class=\"status text-center mx-2 mb-2\" [ngClass]=\"checklist.currentStatus.toLowerCase()\" *ngIf=\"checklist.itemsTotal\">\n        <span>{{ getTaskCompletionPercentage() }}%</span>\n      </div>\n      <div class=\"status text-center mr-2 mb-2\" [ngClass]=\"checklist.currentStatus.toLowerCase()\" *ngFor=\"let role of checklist.assignedRoles\">\n        <span>{{ role.Name }}</span>\n      </div>\n    </div>\n\n    <form [formGroup]=\"taskDatePickerFormGroup\">\n      <mat-accordion>\n        <mat-expansion-panel (opened)=\"checklist.taskStatusPanelOpen = true\" (closed)=\"checklist.taskStatusPanelOpen = false\">\n          <mat-expansion-panel-header class=\"pl-0\">\n            <mat-panel-description fxLayoutAlign=\"start center\">\n              <mat-icon class=\"color-gray mr-2 ml-3\">event</mat-icon>\n              <mat-form-field (click)=\"$event.stopPropagation()\" (click)=\"taskStart.open()\" class=\"mat-form-field-alternate color-black mt-15px\">\n                <mat-label class=\"text-caption2\">Task Start</mat-label>\n                <input class=\"text-body1\" matInput [readonly]=\"true\" [ngxMatDatetimePicker]=\"taskStart\" formControlName=\"taskStart\" (blur)=\"updateTask()\" />\n                <ngx-mat-datetime-picker\n                  #taskStart\n                  [enableMeridian]=\"true\"\n                  [showSpinners]=\"true\"\n                  [showSeconds]=\"false\"\n                  [stepHour]=\"1\"\n                  [stepMinute]=\"1\"\n                  [stepSecond]=\"1\"\n                  [touchUi]=\"true\"\n                  [color]=\"'primary'\"\n                >\n                </ngx-mat-datetime-picker>\n              </mat-form-field>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div fxLayout=\"column\">\n            <mat-form-field (click)=\"$event.stopPropagation()\" (click)=\"taskDuePicker.open()\" class=\"mat-form-field-alternate ml-50px\">\n              <mat-label class=\"text-caption2\">Task Due</mat-label>\n              <input class=\"text-body1\" matInput [readonly]=\"true\" [ngxMatDatetimePicker]=\"taskDuePicker\" formControlName=\"taskDue\" (blur)=\"updateTask()\" />\n              <ngx-mat-datetime-picker\n                #taskDuePicker\n                [enableMeridian]=\"true\"\n                [showSpinners]=\"true\"\n                [showSeconds]=\"false\"\n                [stepHour]=\"1\"\n                [stepMinute]=\"1\"\n                [stepSecond]=\"1\"\n                [touchUi]=\"true\"\n                [color]=\"'primary'\"\n              >\n              </ngx-mat-datetime-picker>\n            </mat-form-field>\n            <mat-form-field (click)=\"$event.stopPropagation()\" (click)=\"taskEnd.open()\" class=\"mat-form-field-alternate ml-50px mt--10px\">\n              <mat-label class=\"text-caption2\">Task End</mat-label>\n              <input class=\"text-body1\" matInput [readonly]=\"true\" [ngxMatDatetimePicker]=\"taskEnd\" formControlName=\"taskEnd\" (blur)=\"updateTask()\" />\n              <ngx-mat-datetime-picker\n                #taskEnd\n                [enableMeridian]=\"true\"\n                [showSpinners]=\"true\"\n                [showSeconds]=\"false\"\n                [stepHour]=\"1\"\n                [stepMinute]=\"1\"\n                [stepSecond]=\"1\"\n                [touchUi]=\"true\"\n                [color]=\"'primary'\"\n              >\n              </ngx-mat-datetime-picker>\n            </mat-form-field>\n          </div>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </form>\n\n    <mat-divider></mat-divider>\n\n    <div fxLayoutAlign=\"start center\">\n      <mat-icon matPrefix class=\"color-gray mr-2 ml-3\">notes</mat-icon>\n      <mat-form-field class=\"w-100 mt-2 mat-form-field-alternate\" floatLabel=\"never\">\n        <textarea\n          class=\"overflow-hidden pb-3\"\n          cdkTextareaAutosize\n          #autosize=\"cdkTextareaAutosize\"\n          matInput\n          [(ngModel)]=\"checklist.description\"\n          (keyup.enter)=\"updateTask()\"\n          (blur)=\"updateTask()\"\n          placeholder=\"Description\"\n        ></textarea>\n      </mat-form-field>\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"p-0 text-left w-100 mx-3 my-2 clickable\" (click)=\"addAssignedUser()\" fxLayoutAlign=\"start center\">\n      <mat-icon class=\"mr-2\">person_add_alt</mat-icon>\n      <p class=\"mb-0 text-body1\" *ngIf=\"checkListData.AssignedUsers && checkListData.AssignedUsers.length <= 0; else users\">Assign Users</p>\n      <ng-template #users>\n        <div fxLayout=\"row\">\n          <span class=\"status complete mr-1\" *ngFor=\"let user of checkListData.AssignedUsers\">\n            {{ user.FirstName + ' ' + user.LastName.charAt(0) + '.' }}\n          </span>\n        </div></ng-template\n      >\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"mb-37px\">\n      <xenon-checklist-panel-subtask-list\n        [subtaskList]=\"checklist.selectedChecklistTask\"\n        [taskID]=\"checklist.id\"\n        (refresh)=\"refresh.next()\"\n      ></xenon-checklist-panel-subtask-list>\n    </div>\n  </div>\n</mat-drawer>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { DriveItem, BaseResponse, ApiDriveService } from '@xenon/api';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TextFileComponent } from '../text-file/text-file.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PermissionsHelperService } from '@xenon/auth';\nimport { RenameDriveItemModal } from '../../../features/client/drive/drive-explorer/rename-drive-item.modal';\n\nexport type DriveMenuItems = 'edit' | 'copy' | 'rename' | 'starred' | 'permissions' | 'download' | 'delete';\n\n@Component({\n  selector: 'xenon-drive-vert-menu',\n  template: `\n    <button\n      mat-menu-item\n      *ngIf=\"item.details.ContentType === 2 && !hideItems.includes('edit') && permissionsHelperService.hasPermissionByName('editFiles')\"\n      (click)=\"editTextFile(item)\"\n    >\n      <mat-icon fontSet=\"material-icons-outlined\">insert_drive_file</mat-icon>\n      <span>Edit File</span>\n    </button>\n    <button mat-menu-item *ngIf=\"!hideItems.includes('copy')\" (click)=\"makeCopy(item)\" disabled>\n      <mat-icon>content_copy</mat-icon>\n      <span>Make a copy</span>\n    </button>\n    <button mat-menu-item *ngIf=\"!hideItems.includes('rename') && permissionsHelperService.hasPermissionByName('editFiles')\" (click)=\"rename(item)\">\n      <mat-icon>create</mat-icon>\n      <span>Rename</span>\n    </button>\n    <button mat-menu-item *ngIf=\"!hideItems.includes('starred')\" (click)=\"addToStarred(item)\" disabled>\n      <mat-icon>star</mat-icon>\n      <span>Add to Starred</span>\n    </button>\n    <button mat-menu-item *ngIf=\"!hideItems.includes('permissions')\" (click)=\"managePermissions(item)\" disabled>\n      <mat-icon>people_alt</mat-icon>\n      <span>Manage Permissions</span>\n    </button>\n    <button mat-menu-item *ngIf=\"!hideItems.includes('download')\" (click)=\"downloadFile(item)\" [hidden]=\"item?.details?.ContentType == 1\">\n      <mat-icon>get_app</mat-icon>\n      <span>Download</span>\n    </button>\n    <button mat-menu-item *ngIf=\"!hideItems.includes('delete') && permissionsHelperService.hasPermissionByName('deleteFiles')\" (click)=\"deleteDriveItem(item)\">\n      <mat-icon>delete_outline</mat-icon>\n      <span>Delete</span>\n    </button>\n  `,\n  styleUrls: ['./drive-vert-menu.component.scss'],\n})\nexport class DriveVertMenuComponent {\n  @Input() item: DriveItem;\n  @Input() hideItems: DriveMenuItems[] = [];\n  @Output() refresh = new EventEmitter<string>(); //getdriveitems\n\n  constructor(\n    private driveService: ApiDriveService,\n    private dialog: MatDialog,\n    private snackbar: MatSnackBar,\n    public permissionsHelperService: PermissionsHelperService\n  ) {}\n\n  public editTextFile(item: DriveItem) {\n    const dialogRef = this.dialog.open(TextFileComponent, {\n      data: { driveItem: item, editFile: true },\n      panelClass: 'full-page-dialog',\n    });\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.refresh.emit('editClosed');\n    });\n  }\n\n  public rename(item: DriveItem) {\n    const dialogRef = this.dialog.open(RenameDriveItemModal, {\n      data: { newName: '' },\n    });\n\n    dialogRef.afterClosed().subscribe((newName) => {\n      // note: new name will be undefined if the user doesn't click 'SAVE'\n      if (newName) {\n        this.renameDriveItem({ id: item.id, name: newName });\n      }\n    });\n  }\n\n  public deleteDriveItem(item: DriveItem) {\n    this.driveService\n      .deleteDriveItem(item.id)\n      .then((_) => {\n        this.refresh.emit('delete');\n      })\n      .catch((_) => {\n        this.snackbar.open('Error deleting drive item', 'Close', { duration: 5000 });\n      });\n  }\n\n  public downloadFile(item: DriveItem) {\n    this.driveService\n      .downloadFile(item.details.ContentPath)\n      .then((response: Blob) => {\n        const blob: any = new Blob([response], {\n          type: 'text/json; charset=utf-8',\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.setAttribute('target', '_self');\n        link.setAttribute('href', url);\n        link.setAttribute('download', item.name);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      })\n      .catch((_) => {\n        this.snackbar.open('Error downloading file', 'Close', { duration: 5000 });\n      });\n  }\n\n  private renameDriveItem(info: { id: number; name: string }) {\n    this.driveService\n      .renameDriveItem(info.id, info.name)\n      .then((_) => {\n        this.refresh.emit('rename');\n      })\n      .catch((_) => {\n        this.snackbar.open('Error renaming drive item', 'Close', { duration: 5000 });\n      });\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-leave-app-dialog',\n  template: `\n    <h6 mat-dialog-title>You will be leaving the app</h6>\n    <div mat-dialog-actions>\n      <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n      <button mat-button (click)=\"onOkClick()\">Ok</button>\n    </div>\n  `,\n})\nexport class LeaveAppDialogComponent {\n  constructor(public dialogRef: MatDialogRef<LeaveAppDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: { agreed: boolean }) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick() {\n    this.dialogRef.close({ agreed: true });\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiTaskService, ApiUserService, BaseResponse, Task, UpdateTaskRequest, User } from '@xenon/api';\nimport { UiListSelectDialogService } from '@xenon/ui';\nimport { UtilDateToolsService, UtilMomentService } from '@xenon/utils';\nimport * as moment from 'moment';\nimport { BehaviorSubject } from 'rxjs';\nimport { TaskByDateService } from './task-by-date.service';\n\n@Component({\n  selector: 'xenon-task-by-date',\n  styleUrls: ['./task-by-date.component.scss'],\n  template: `\n    <div *ngIf=\"!hideTask\" class=\"task-by-date\" fxLayout=\"row\">\n      <div fxLayoutAlign=\"start center\" fxLayout=\"column\" class=\"w-100\" (click)=\"selectedTask()\">\n        <p class=\"text-body2 m-0 w-100 pl-3 pt-2\">{{ task.Name }}</p>\n        <div class=\"w-100 pl-3 py-1\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n          <div fxLayoutAlign=\"start center\">\n            <div *ngIf=\"task.CurrentStatus !== ''\" class=\"status text-center\" [ngClass]=\"task.CurrentStatus.toLowerCase()\">\n              <span *ngIf=\"task.CurrentStatus.toLowerCase() === 'scheduled'\">Scheduled</span>\n              <span *ngIf=\"task.CurrentStatus.toLowerCase() === 'complete'\">Complete</span>\n              <span *ngIf=\"task.CurrentStatus.toLowerCase() === 'open'\">Open</span>\n              <span *ngIf=\"task.CurrentStatus.toLowerCase() === 'overdue'\">Overdue</span>\n              <span *ngIf=\"task.CurrentStatus.toLowerCase() === 'expired'\">Expired</span>\n            </div>\n            <div class=\"status text-center ml-2\" *ngIf=\"getTaskCompletionPercentage() != ''\" [ngClass]=\"task.CurrentStatus.toLowerCase()\">\n              <span>{{ getTaskCompletionPercentage() }}%</span>\n            </div>\n            <div class=\"status text-center ml-2\" [ngClass]=\"task.CurrentStatus.toLowerCase()\">\n              <span>{{ getAvailableTime() }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <span fxLayoutAlign=\"start center\">\n        <span (click)=\"addAssignedUser()\" *ngIf=\"task.AssignedUsers && task.AssignedUsers.length > 0; else empty\">\n          <xenon-ui-user-photo [userArray]=\"task.AssignedUsers\"></xenon-ui-user-photo>\n        </span>\n        <ng-template #empty><mat-icon (click)=\"addAssignedUser()\" class=\"color-gray\">person_add_alt</mat-icon></ng-template>\n        <mat-icon [matMenuTriggerFor]=\"menu\" class=\"mx-3 color-gray\">more_vert</mat-icon>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item (click)=\"deleteTask()\">Delete Task</button>\n        </mat-menu>\n      </span>\n    </div>\n  `,\n})\nexport class TaskByDateComponent implements OnChanges {\n  @Output() clickedItem = new EventEmitter();\n  @Input() task: Task;\n  today = moment().toDate();\n  dueDate: BehaviorSubject<Date> = new BehaviorSubject<Date>(null);\n  hideTask = false;\n\n  constructor(\n    private taskByDateService: TaskByDateService,\n    private apiTaskService: ApiTaskService,\n    private _snackBar: MatSnackBar,\n    private apiUserService: ApiUserService,\n    private uiListSelectService: UiListSelectDialogService<User>\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.task.currentValue) {\n      const task = changes.task.currentValue;\n      this.dueDate.next(UtilMomentService.utcToLocal(task.DueDate));\n    }\n  }\n\n  addAssignedUser(): void {\n    this.apiUserService.getUsersByOrganization(this.task.OrgID).subscribe((userList: User[]) => {\n      this.uiListSelectService.open({\n        inputList: userList,\n        currentSelectedList: this.task.AssignedUsers,\n        primaryValueSelector1: 'FirstName',\n        primaryValueSelector2: 'LastName',\n        secondaryValueSelector: 'JobTitle',\n        compareValueBy: 'ID',\n        displayUserImage: true,\n      });\n\n      this.uiListSelectService.closed().subscribe((selectedUsers) => {\n        if (!selectedUsers) return;\n        const assignUsers = selectedUsers.filter((selectedUser) => {\n          return !this.task.AssignedUsers.includes(selectedUser);\n        });\n        const removeUsers = this.task.AssignedUsers.filter((assignedUser) => {\n          return !selectedUsers.includes(assignedUser);\n        });\n\n        assignUsers.forEach((user) => {\n          this.apiTaskService.assignTaskUser({ taskId: this.task.ID, userID: user.ID }).then((response: BaseResponse) => {});\n        });\n\n        removeUsers.forEach((user) => {\n          this.apiTaskService.removeTaskUser({ taskId: this.task.ID, userID: user.ID }).then((response: BaseResponse) => {});\n        });\n        this.task.AssignedUsers = selectedUsers;\n      });\n    });\n  }\n\n  deleteTask(): void {\n    this.hideTask = true;\n    const snackBarRef = this._snackBar.open('Task Deleted', 'Undo', {\n      duration: 4000,\n    });\n    snackBarRef.afterDismissed().subscribe((info) => {\n      if (!info.dismissedByAction) {\n        this.apiTaskService.deleteTask(this.task.ID).subscribe(() => {});\n      }\n    });\n    snackBarRef.onAction().subscribe(() => {\n      this.hideTask = false;\n    });\n  }\n\n  changeTaskVisibility(newVal: boolean): void {\n    this.hideTask = newVal;\n  }\n\n  getTaskCompletionPercentage(): string {\n    const calculation = Math.floor((this.task.ItemsComplete / this.task.ItemsTotal) * 100);\n    return calculation >= 0 ? calculation.toString() : '';\n  }\n\n  getAvailableTime(): string {\n    const hours = parseInt(this.task.AvailableTime.substr(0, this.task.AvailableTime.indexOf(':')), 10);\n    const minutes = parseInt(this.task.AvailableTime.substr(this.task.AvailableTime.indexOf(':') + 1, this.task.AvailableTime.indexOf(':')), 10);\n    return `${hours % 12 || 12}:${minutes < 10 ? minutes + '0' : minutes} ${hours >= 12 ? 'PM' : 'AM'}`;\n  }\n\n  isPast(): boolean {\n    const yesterday = moment(\n      moment()\n        .toDate()\n        .setDate(moment().toDate().getDate() - 1)\n    ).toDate();\n    return yesterday < UtilDateToolsService.utcToLocal(this.task.AvailableDate);\n  }\n\n  selectedTask(): void {\n    this.taskByDateService.nextTask(this.task);\n    this.clickedItem.emit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Task } from '@xenon/api';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskByDateService {\n  taskSelected: BehaviorSubject<Task> = new BehaviorSubject(null);\n  nextTask(task: Task) {\n    this.taskSelected.next(task);\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Task } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-task-list',\n  styleUrls: ['./task-list.component.scss'],\n  template: `\n    <table mat-table [dataSource]=\"tasks\" class=\"mat-elevation-z0\" class=\"task-list-table\">\n      <ng-container *ngFor=\"let colName of displayedColumns\" matColumnDef=\"{{ colName }}\">\n        <th mat-header-cell *matHeaderCellDef>{{ columnTitles[colName] }}</th>\n        <td class=\"clickable\" mat-cell *matCellDef=\"let element\" (click)=\"clickedItem(element)\">\n          {{ element[colName] }}\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  `,\n})\nexport class TaskListComponent {\n  displayedColumns: string[] = ['Name', 'ItemsComplete', 'ItemsCompletedLate', 'ItemsRemaining', 'ItemsExpired'];\n  columnTitles = {\n    Name: 'Name',\n    ItemsComplete: 'Items Completed',\n    ItemsCompletedLate: 'Items Completed Late',\n    ItemsRemaining: 'Remaining Items',\n    ItemsExpired: 'Missed Items',\n  };\n\n  @Input() tasks: Task[] = [];\n  @Output() itemClicked = new EventEmitter<Task>();\n\n  clickedItem(item: Task) {\n    this.itemClicked.emit(item);\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'xenon-tasks-calender-filter',\n  styleUrls: ['./tasks-calender-filter.component.scss'],\n  template: ` <xenon-ui-calendar-datepicker [selectedDate]=\"selectedDate\" (dateChange)=\"changeDate($event)\"></xenon-ui-calendar-datepicker> `,\n})\nexport class TasksCalenderFilterComponent {\n  @Input() selectedDate: NgbDateStruct;\n  @Output() dateChange = new EventEmitter<NgbDateStruct>();\n\n  changeDate($event): void {\n    this.dateChange.emit($event);\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ApiRoleService, ApiUserService, Role, User, LoggedInUser } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\nexport interface TaskFilterItem {\n  active: boolean;\n  label: string;\n  value: string;\n}\n\n@Component({\n  selector: 'xenon-tasks-filter',\n  styleUrls: ['./tasks-filter.component.scss'],\n  templateUrl: './tasks-filter.component.html',\n})\nexport class TasksFilterComponent {\n  @Input() items: TaskFilterItem[];\n  @Output() filterChange = new EventEmitter<TaskFilterItem[]>();\n  public showPhoto: boolean;\n  generalForm: FormGroup;\n  teamForm: FormGroup;\n  roleForm: FormGroup;\n  loggedInUser: LoggedInUser;\n  allTeam: User[];\n  allRoles: Role[];\n  organizationId: number;\n  locationId: number;\n  localFilterArray: TaskFilterItem[];\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private userService: ApiUserService,\n    public localStorage: UtilLocalStorageService,\n    private apiRoleService: ApiRoleService\n  ) {\n    this.localFilterArray = this.localStorage.getItem('tasksFilterItems');\n    this.loggedInUser = this.localStorage.getItem('user');\n    this.showPhoto = this.loggedInUser.CurrentUser?.PhotoURL?.trim()?.length > 0;\n    this.createTeamForm();\n    this.createRolesForm();\n    this.createGeneralForm();\n  }\n\n  public hidePhoto() {\n    this.showPhoto = false;\n  }\n\n  changeFilter(): void {\n    const filter = { ...this.generalForm.value, ...this.teamForm.value, ...this.roleForm.value };\n    this.items.forEach((item) => (item.active = filter[item.value] ? filter[item.value] : false));\n    const newItems = Object.entries(filter).map(([k, v]) => ({ active: v, label: k, value: k })) as TaskFilterItem[];\n    const newItemArray = this.items.concat(newItems.filter((newItem) => !this.items.some((item) => item.value === newItem.value)));\n    this.filterChange.emit(newItemArray);\n    this.localStorage.setItem('tasksFilterItems', newItemArray);\n  }\n\n  createGeneralForm(): void {\n    this.generalForm = this.formBuilder.group({\n      scheduled: [this.checkFilterStatus('scheduled', true)],\n      open: [this.checkFilterStatus('open', true)],\n      overdue: [this.checkFilterStatus('overdue', true)],\n      complete: [this.checkFilterStatus('complete', true)],\n      expired: [this.checkFilterStatus('expired', true)],\n      'unassigned-tasks': [this.checkFilterStatus('unassigned-tasks', false)],\n      'my-tasks': [this.checkFilterStatus('my-tasks', false)],\n    });\n    this.generalForm.valueChanges.subscribe(() => {\n      this.changeFilter();\n    });\n  }\n\n  createTeamForm(): void {\n    this.loggedInUser = this.localStorage.getItem('user');\n    this.organizationId = this.loggedInUser.CurrentOrg.ID;\n    this.userService.getUsersByOrganization(this.organizationId).subscribe((value) => {\n      this.allTeam = value;\n      const teamGroup: any = {};\n      value.forEach((user) => {\n        teamGroup['_teamID' + user.ID] = new FormControl(this.checkFilterStatus('_teamID' + user.ID, false));\n      });\n      this.teamForm = new FormGroup(teamGroup);\n      this.teamForm.valueChanges.subscribe(() => {\n        this.changeFilter();\n      });\n    });\n  }\n\n  createRolesForm(): void {\n    this.apiRoleService.getRolesByOrg(this.loggedInUser.CurrentOrg.ID).subscribe((response) => {\n      this.allRoles = response.OrgRoleList;\n      const roleGroup: any = {};\n      roleGroup['none'] = new FormControl(false);\n      if (response.OrgRoleList) {\n        response.OrgRoleList.forEach((role) => {\n          roleGroup['_roleID' + role.ID] = new FormControl(this.checkFilterStatus('_roleID' + role.ID, false));\n        });\n      }\n      this.roleForm = new FormGroup(roleGroup);\n      this.roleForm.valueChanges.subscribe(() => {\n        this.changeFilter();\n      });\n    });\n  }\n\n  private checkFilterStatus(value: string, defaultValue: boolean): boolean {\n    if (!this.localFilterArray) {\n      return defaultValue;\n    }\n    return this.localFilterArray.find((localArray) => localArray.value === value).active;\n  }\n}\n","<mat-accordion multi>\n  <form [formGroup]=\"generalForm\" *ngIf=\"generalForm\">\n    <mat-expansion-panel class=\"m-0\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          STATUS\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div fxLayout=\"column\" class=\"px-4\">\n        <mat-checkbox formControlName=\"scheduled\">Scheduled</mat-checkbox>\n        <mat-checkbox formControlName=\"open\">Open</mat-checkbox>\n        <mat-checkbox formControlName=\"overdue\">Overdue</mat-checkbox>\n        <mat-checkbox formControlName=\"complete\">Complete</mat-checkbox>\n        <mat-checkbox formControlName=\"expired\">Expired</mat-checkbox>\n      </div>\n    </mat-expansion-panel>\n    <mat-expansion-panel class=\"m-0\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          MY ASSIGNMENTS\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div fxLayout=\"column\" class=\"px-4\">\n        <mat-checkbox formControlName=\"unassigned-tasks\">Unassigned Tasks</mat-checkbox>\n        <mat-checkbox formControlName=\"my-tasks\">My Tasks</mat-checkbox>\n      </div>\n    </mat-expansion-panel>\n  </form>\n  <form [formGroup]=\"teamForm\" *ngIf=\"teamForm\">\n    <mat-expansion-panel class=\"m-0\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          TEAM ASSIGNMENTS\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div fxLayout=\"column\">\n        <div *ngFor=\"let user of allTeam\" fxLayout=\"row\" fxLayoutAlign=\"space-between\" class=\"px-4\">\n          <mat-checkbox [formControlName]=\"'_teamID' + user.ID\">{{ user.FirstName + ' ' + user.LastName }}</mat-checkbox>\n          <img *ngIf=\"showPhoto\" src=\"{{ user.PhotoURL }}\" alt=\"user\" (error)=\"hidePhoto()\" class=\"profile-pic\" />\n          <span *ngIf=\"!showPhoto\" class=\"profile-initials color-primary-dark background-primary-light\">{{ user.FirstName[0] }}{{ user.LastName[0] }}</span>\n        </div>\n      </div>\n    </mat-expansion-panel>\n  </form>\n  <form [formGroup]=\"roleForm\" *ngIf=\"roleForm\">\n    <mat-expansion-panel class=\"m-0\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          ROLE ASSIGNMENTS\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div fxLayout=\"column\" class=\"px-4\">\n        <mat-checkbox formControlName=\"none\">None</mat-checkbox>\n        <mat-checkbox *ngFor=\"let role of allRoles\" [formControlName]=\"'_roleID' + role.ID\">{{ role.Name }}</mat-checkbox>\n      </div>\n    </mat-expansion-panel>\n  </form>\n</mat-accordion>\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'xenon-tasks-search',\n  template: ` <xenon-ui-string-search [label]=\"'Search'\" (searchChange)=\"changeSearch($event)\"></xenon-ui-string-search> `,\n})\nexport class TasksSearchComponent {\n  @Output() searchChange = new EventEmitter<string>();\n\n  searchString: string;\n\n  constructor() {}\n\n  changeSearch($event): void {\n    this.searchChange.emit($event);\n  }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'xenon-teams-search',\n  template: ` <xenon-ui-string-search [label]=\"'Search'\" (searchChange)=\"changeSearch($event)\"></xenon-ui-string-search> `,\n})\nexport class TeamsSearchComponent {\n  @Output() searchChange = new EventEmitter<string>();\n\n  searchString: string;\n\n  constructor() {}\n\n  changeSearch($event): void {\n    this.searchChange.emit($event);\n  }\n}\n","import { Component, Inject, OnInit, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AddContentRequest, ApiDriveService, DriveItem } from '@xenon/api';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'xenon-text-document',\n  template: ` <div *ngIf=\"driveItem | async as driveItem\">\n    <div class=\"w-100 px-3 space-title\" fxLayoutAlign=\"space-between center\">\n      <h6 class=\"m-0 w-100\" fxLayoutAlign=\"start center\">\n        <button class=\"mr-2\" mat-icon-button (click)=\"close()\">\n          <mat-icon>arrow_back</mat-icon>\n        </button>\n        <xenon-ui-expanding-input\n          [startValue]=\"data.driveItem.details.Name\"\n          [minWidth]=\"200\"\n          [formFieldClasses]=\"['mat-form-field-alternate', 'mb--7']\"\n          [disabled]=\"viewMode | async\"\n          placeholder=\"Untitled Document\"\n          floatLabel=\"never\"\n          (fieldValue)=\"data.driveItem.details.Name = $event\"\n        ></xenon-ui-expanding-input>\n        <!-- <mat-form-field floatLabel=\"never\" class=\"mat-form-field-alternate mb--7\" fxFlex=\"50%\">\n          <input autocomplete=\"off\" [disabled]=\"viewMode | async\" matInput [(ngModel)]=\"driveItem.details.Name\" placeholder=\"Untitled Document\" />\n        </mat-form-field> -->\n      </h6>\n      <span fxLayout=\"row\">\n        <button *ngIf=\"viewMode | async; else edit\" color=\"primary\" class=\"p-2 mx-2\" mat-stroked-button (click)=\"editClicked()\">Edit</button>\n        <ng-template #edit> <button color=\"primary\" class=\"p-2 mx-2\" mat-stroked-button (click)=\"saveClicked()\">Save</button></ng-template>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\"><mat-icon>more_vert</mat-icon></button>\n        <mat-menu #menu=\"matMenu\">\n          <xenon-drive-vert-menu [item]=\"driveItem\" [hideItems]=\"['edit', 'rename']\" (refresh)=\"handleRefresh($event)\"></xenon-drive-vert-menu>\n        </mat-menu>\n      </span>\n    </div>\n    <mat-divider></mat-divider>\n    <div class=\"task-container page-height\" fxLayout=\"row\">\n      <div class=\"sidebar overflow-hidden\"></div>\n      <div class=\"main-form-container text-center w-100 pt-5 h-100\">\n        <mat-card class=\"main-form background-white h-100\">\n          <mat-form-field class=\"task-name text-subtitle1 mat-form-field-alternate w-100 h-100 px-3 form-line-gray\" floatLabel=\"never\">\n            <textarea autocomplete=\"off\" [disabled]=\"viewMode | async\" class=\"h-100 text-body1\" matInput [(ngModel)]=\"driveItem.details.Content\"></textarea>\n          </mat-form-field>\n        </mat-card>\n      </div>\n      <div class=\"sidebar overflow-hidden\"></div>\n    </div>\n  </div>`,\n  styleUrls: ['./text-file.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TextFileComponent implements OnInit {\n  public driveItem: BehaviorSubject<DriveItem> = new BehaviorSubject(null);\n  public viewMode: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { driveItem?: DriveItem; addContentRequest?: AddContentRequest; editFile?: boolean },\n    public dialogRef: MatDialogRef<TextFileComponent>,\n    private apiDriveService: ApiDriveService\n  ) {\n    if (data.driveItem) {\n      data.driveItem.details.Name = data.driveItem.details.Name === 'Untitled Document' ? '' : data.driveItem.details.Name;\n    }\n  }\n\n  public ngOnInit(): void {\n    this.viewMode.next(!this.data.editFile);\n    if (this.data.addContentRequest) {\n      this.apiDriveService.saveContentInfo(this.data.addContentRequest).then((newDriveFileID) => {\n        this.apiDriveService\n          .getDriveFileByID(newDriveFileID.NewDrive)\n          .pipe(\n            filter((drive) => !!drive),\n            take(1)\n          )\n          .subscribe((drive) => {\n            console.log(drive);\n            const driveItem: DriveItem = {\n              id: drive.ID,\n              name: drive.Name,\n              active: false,\n              icon: null,\n              starred: drive.StarredInd,\n              details: drive,\n            };\n            this.data.driveItem = driveItem;\n            this.driveItem.next(driveItem);\n          });\n      });\n    } else if (this.data.driveItem) {\n      this.driveItem.next(this.data.driveItem);\n    }\n  }\n\n  public handleRefresh(event: string): void {\n    if (event === 'delete') {\n      this.close();\n    }\n  }\n\n  public close(save = false): void {\n    if ((save && !this.driveItem.value.details.Content && !this.driveItem.value.details.Name) || (!save && this.data.addContentRequest)) {\n      this.apiDriveService.deleteDriveItem(this.driveItem.value.id).then((_) => {\n        this.dialogRef.close();\n      });\n    }\n    this.dialogRef.close();\n  }\n\n  public saveClicked(): void {\n    console.log(this.driveItem);\n    this.apiDriveService.updateDriveItem(this.driveItem.value.id, {\n      Name: !!this.driveItem.value.details.Name ? this.driveItem.value.details.Name : 'Untitled Document',\n      Content: this.driveItem.value.details.Content,\n    });\n    this.close(true);\n  }\n\n  public editClicked(): void {\n    this.viewMode.next(false);\n  }\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\n\nimport * as _moment from 'moment';\n// @ts-ignore\nimport { default as _rollupMoment, Moment, MomentFormatSpecification, MomentInput } from 'moment';\nimport { NgxMatDateAdapter } from '@angular-material-components/datetime-picker';\n\nconst moment = _rollupMoment || _moment;\n\nexport interface NgxMatMomentDateAdapterOptions {\n  strict?: boolean;\n\n  useUtc?: boolean;\n}\n\nexport const MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<NgxMatMomentDateAdapterOptions>('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY,\n});\n\nexport function MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): NgxMatMomentDateAdapterOptions {\n  return {\n    useUtc: false,\n  };\n}\n\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n@Injectable()\nexport class CustomNgxDatetimeAdapter extends NgxMatDateAdapter<Moment> {\n  private _localeData: {\n    firstDayOfWeek: number;\n    longMonths: string[];\n    shortMonths: string[];\n    dates: string[];\n    longDaysOfWeek: string[];\n    shortDaysOfWeek: string[];\n    narrowDaysOfWeek: string[];\n  };\n\n  constructor(\n    @Optional() @Inject(MAT_DATE_LOCALE) dateLocale: string,\n    @Optional()\n    @Inject(MAT_MOMENT_DATE_ADAPTER_OPTIONS)\n    private _options?: NgxMatMomentDateAdapterOptions\n  ) {\n    super();\n    this.setLocale(dateLocale || moment.locale());\n  }\n\n  setLocale(locale: string) {\n    super.setLocale(locale);\n\n    const momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n    };\n  }\n\n  getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n    return style === 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n  }\n\n  getDateNames(): string[] {\n    return this._localeData.dates;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (style === 'long') {\n      return this._localeData.longDaysOfWeek;\n    }\n    if (style === 'short') {\n      return this._localeData.shortDaysOfWeek;\n    }\n    return this._localeData.narrowDaysOfWeek;\n  }\n\n  getYearName(date: Moment): string {\n    return this.clone(date).format('YYYY');\n  }\n\n  getFirstDayOfWeek(): number {\n    return this._localeData.firstDayOfWeek;\n  }\n\n  getNumDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  createDate(year: number, month: number, date: number): Moment {\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    const result = this._createMoment({ year, month, date }).locale(this.locale);\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Moment {\n    // @ts-ignore\n    return this._createMoment().locale(this.locale);\n  }\n\n  parse(value: any, parseFormat: string | string[]): Moment | null {\n    if (value && typeof value === 'string') {\n      return this._createMoment(value, parseFormat, this.locale);\n    }\n    return value ? this._createMoment(value).locale(this.locale) : null;\n  }\n\n  format(date: Moment, displayFormat: string): string {\n    date = this.clone(date);\n    if (!this.isValid(date)) {\n      throw Error('MomentDateAdapter: Cannot format invalid date.');\n    }\n    return date.format(displayFormat);\n  }\n\n  addCalendarYears(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  addCalendarMonths(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  addCalendarDays(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  toIso8601(date: Moment): string {\n    return this.clone(date).format();\n  }\n\n  deserialize(value: any): Moment | null {\n    let date;\n    if (value instanceof Date) {\n      date = this._createMoment(value).locale(this.locale);\n    } else if (this.isDateInstance(value)) {\n      return this.clone(value);\n    }\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n    }\n    if (date && this.isValid(date)) {\n      return this._createMoment(date).locale(this.locale);\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any): boolean {\n    return moment.isMoment(obj);\n  }\n\n  isValid(date: Moment): boolean {\n    return this.clone(date).isValid();\n  }\n\n  invalid(): Moment {\n    return moment.invalid();\n  }\n\n  getHour(date: _moment.Moment): number {\n    return date.hours();\n  }\n  getMinute(date: _moment.Moment): number {\n    return date.minutes();\n  }\n  getSecond(date: _moment.Moment): number {\n    return date.seconds();\n  }\n  setHour(date: _moment.Moment, value: number): void {\n    date.hours(value);\n  }\n  setMinute(date: _moment.Moment, value: number): void {\n    date.minutes(value);\n  }\n  setSecond(date: _moment.Moment, value: number): void {\n    date.seconds(value);\n  }\n\n  private _createMoment(date: MomentInput, format?: MomentFormatSpecification, locale?: string): Moment {\n    const { strict, useUtc }: NgxMatMomentDateAdapterOptions = this._options || {};\n\n    return useUtc ? moment.utc(date, format, locale, strict) : moment(date, format, locale, strict);\n  }\n}\n","import { FormGroup } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { ApiFormService, Form, FormItem, User } from '@xenon/api';\nimport { UtilLocalStorageService, UtilMomentService } from '@xenon/utils';\n\nexport class TaskFormBase {\n  currentUser: User;\n  form: FormGroup;\n\n  protected formService: ApiFormService;\n  private localStorageService: UtilLocalStorageService;\n\n  constructor(formService, localStorageService) {\n    this.localStorageService = localStorageService;\n    this.formService = formService;\n    this.currentUser = this.localStorageService.getItem('user').CurrentUser;\n  }\n\n  protected submitPatch(value, formItem): Observable<any> {\n    const targetItem = this.buildPatch(value, formItem);\n    return this.formService.update(targetItem.ID, targetItem);\n  }\n\n  protected buildPatch(value: string, formItem: FormItem): FormItem {\n    formItem.Response = value;\n    formItem.Completed = !!value;\n\n    formItem.CompletedBy = this.currentUser.ID;\n    formItem.CompletedAt = UtilMomentService.new().utc().toISOString();\n\n    return formItem;\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-checkbox',\n  styleUrls: ['./task-form-field-checkbox.component.scss'],\n  template: `\n    <form [formGroup]=\"form\">\n      <label>{{ formItem.Label }}</label>\n      <section>\n        <ul>\n          <li *ngFor=\"let option of formItem.FormItemOptions\">\n            <mat-checkbox formControlName=\"{{ buildPropertyName(option.Label) }}\">\n              {{ option.Label }}\n            </mat-checkbox>\n          </li>\n        </ul>\n      </section>\n    </form>\n  `,\n})\nexport class TaskFormFieldCheckboxComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({});\n    this.formItem.FormItemOptions.forEach((option) => {\n      const prop = this.buildPropertyName(option.Label);\n      const initValue = this.formItem.Response.indexOf(option.Label) > -1;\n      this.form.addControl(prop, new FormControl(initValue, Validators.required));\n    });\n\n    this.form.valueChanges.subscribe((v) => {\n      const newValue = [];\n      this.formItem.FormItemOptions.forEach((i) => {\n        const prop = this.buildPropertyName(i.Label);\n        if (v[prop] === true) {\n          newValue.push(i.Label);\n        }\n      });\n      this.submitPatch(newValue.join(','), this.formItem).subscribe((response: { Message: string; formItem: FormItem }) => {\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n    });\n  }\n\n  buildPropertyName(label: string): string {\n    return label.toLowerCase().split(' ').join('_');\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService, UtilMomentService, UtilStringService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-date-range',\n  styleUrls: ['./task-form-field-date-range.component.scss'],\n  template: `\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ formItem.Label }}</mat-label>\n        <mat-date-range-input [rangePicker]=\"picker\">\n          <input matStartDate placeholder=\"Start date\" formControlName=\"startDate\" />\n          <input matEndDate placeholder=\"End date\" formControlName=\"endDate\" />\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n      </mat-form-field>\n    </form>\n  `,\n})\nexport class TaskFormFieldDateRangeComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    const value =\n      this.formItem.Response && UtilStringService.isJson(this.formItem.Response) ? JSON.parse(this.formItem.Response) : { start: undefined, end: undefined };\n    const start = value.start ? UtilMomentService.new(value.start, 'YYYY-MM-DD').toDate() : undefined;\n    const end = value.end ? UtilMomentService.new(value.end, 'YYYY-MM-DD').toDate() : undefined;\n    this.form = new FormGroup({\n      startDate: new FormControl(start, Validators.required),\n      endDate: new FormControl(end, Validators.required),\n    });\n\n    this.form.valueChanges.subscribe((v) => {\n      if (v && v.startDate && v.endDate && v.endDate > v.startDate) {\n        const range: { start: string; end: string } = {\n          start: null,\n          end: null,\n        };\n        range.start = UtilMomentService.new(v.startDate).format('YYYY-MM-DD');\n        range.end = UtilMomentService.new(v.endDate).format('YYYY-MM-DD');\n        this.submitPatch(JSON.stringify(range), this.formItem).subscribe((response: { Message: string; formItem: FormItem }) => {\n          this.formItem = response.formItem;\n          this.cd.detectChanges();\n        });\n      }\n    });\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService, UtilMomentService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-date',\n  styleUrls: ['./task-form-field-date.component.scss'],\n  template: `\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ formItem.Label }}</mat-label>\n        <input matInput [matDatepicker]=\"picker\" formControlName=\"inputItem\" />\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n    </form>\n  `,\n})\nexport class TaskFormFieldDateComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    const initDate = UtilMomentService.new(this.formItem.Response, 'YYYY-MM-DD').toDate();\n    this.form = new FormGroup({\n      inputItem: new FormControl(initDate, Validators.required),\n    });\n\n    this.form.valueChanges.pipe(debounceTime(500)).subscribe((v) => {\n      const date = UtilMomentService.new(v.inputItem).format('YYYY-MM-DD');\n      this.submitPatch(date, this.formItem).subscribe((response: { Message: string; formItem: FormItem }) => {\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n    });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-datetime-range',\n  styleUrls: ['./task-form-field-datetime-range.component.scss'],\n  template: ` <h5>{{ formItem.Label }}</h5> `,\n})\nexport class TaskFormFieldDatetimeRangeComponent extends TaskFormBase {\n  @Input() formData: Form;\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService) {\n    super(formService, localStorageService);\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService, UtilMomentService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-datetime',\n  styleUrls: ['./task-form-field-datetime.component.scss'],\n  template: `\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ formItem.Label }}</mat-label>\n        <input matInput [ngxMatDatetimePicker]=\"picker\" formControlName=\"inputItem\" />\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker\n          #picker\n          [showSpinners]=\"true\"\n          [showSeconds]=\"false\"\n          [stepHour]=\"1\"\n          [stepMinute]=\"1\"\n          [stepSecond]=\"1\"\n          [touchUi]=\"true\"\n          [color]=\"'primary'\"\n        >\n        </ngx-mat-datetime-picker>\n      </mat-form-field>\n    </form>\n  `,\n})\nexport class TaskFormFieldDatetimeComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    const initDate = UtilMomentService.new(this.formItem.Response).toDate();\n    this.form = new FormGroup({\n      inputItem: new FormControl(initDate, Validators.required),\n    });\n\n    this.form.valueChanges.pipe(debounceTime(500)).subscribe((v) => {\n      const date = UtilMomentService.new(v.inputItem).toISOString();\n      this.submitPatch(date, this.formItem).subscribe((response: { Message: string; formItem: FormItem }) => {\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n    });\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService, UtilStringService } from '@xenon/utils';\n\nexport interface TargetFile {\n  data: any;\n  inProgress: boolean;\n  progress: number;\n  url?: string;\n}\n\n@Component({\n  selector: 'xenon-task-form-field-file',\n  styleUrls: ['./task-form-field-file.component.scss'],\n  template: `\n    <div>\n      <div>{{ formItem.Label }}</div>\n\n      <button mat-button (click)=\"onClick()\">\n        <mat-icon>file_upload</mat-icon>\n        Upload\n      </button>\n\n      <ul>\n        <li *ngFor=\"let fileUrl of uploadedFiles\">\n          <a href=\"{{ fileUrl }}\" target=\"_blank\"> {{ fileUrl }} </a>\n        </li>\n      </ul>\n\n      <ul>\n        <li *ngFor=\"let file of files\" [class.display-none]=\"file.progress === 100\">\n          <mat-progress-bar [value]=\"file.progress\"></mat-progress-bar>\n          <span id=\"file-label\">{{ file.data.name }} {{ file.progress }}</span>\n        </li>\n      </ul>\n\n      <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" style=\"display:none;\" />\n    </div>\n  `,\n})\nexport class TaskFormFieldFileComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  @ViewChild('fileUpload', { static: false }) fileUpload: ElementRef;\n\n  uploadedFiles: string[] = [];\n  files: TargetFile[] = [];\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    const files = UtilStringService.isJson(this.formItem.Response) ? JSON.parse(this.formItem.Response) : undefined;\n    this.uploadedFiles = files ? files : [];\n  }\n\n  onClick() {\n    this.files = [];\n    const fileUpload = this.fileUpload.nativeElement;\n    fileUpload.onchange = () => {\n      for (let index = 0; index < fileUpload.files.length; index++) {\n        const file = fileUpload.files[index];\n        this.files.push({ data: file, inProgress: false, progress: 0 });\n      }\n      this.uploadFiles();\n    };\n    fileUpload.click();\n  }\n\n  uploadFile(file: TargetFile): Observable<string | { body: { Uploaded: string } }> {\n    const formData = new FormData();\n    formData.append('formItemFile', file.data);\n    file.inProgress = true;\n    return this.formService.upload(this.formItem.FormID, formData).pipe(\n      map((event) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          file.progress = Math.round((event.loaded * 100) / event.total);\n          this.cd.detectChanges();\n        }\n        return event;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        file.inProgress = false;\n        return of(`${file.data.name} upload failed.`);\n      })\n    );\n  }\n\n  private uploadFiles() {\n    this.cd.detectChanges();\n    this.fileUpload.nativeElement.value = '';\n    const queue = [];\n\n    this.files.forEach((file) => {\n      queue.push(\n        this.uploadFile(file).pipe(\n          map((response: string | { body: { Uploaded: string } }) => {\n            if (typeof response !== 'string' && response.body && response.body.Uploaded) {\n              file.url = response.body.Uploaded;\n              this.cd.detectChanges();\n            }\n            return response;\n          })\n        )\n      );\n    });\n\n    forkJoin(queue)\n      .pipe(\n        switchMap((response) => {\n          const filesList = [];\n          response.forEach((res: string | { body: { Uploaded: string } }) => {\n            if (typeof res !== 'string') {\n              filesList.push(res.body.Uploaded);\n            }\n          });\n          return this.submitPatch(JSON.stringify(filesList), this.formItem);\n        })\n      )\n      .subscribe((response: { Message: string; formItem: FormItem }) => {\n        const files = JSON.parse(response.formItem.Response);\n        this.uploadedFiles = files ? files : [];\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-input',\n  styleUrls: ['./task-form-field-input.component.scss'],\n  template: `\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"fill\" *ngIf=\"formItem\">\n        <mat-label>{{ formItem.Label }}</mat-label>\n        <input matInput formControlName=\"inputItem\" />\n      </mat-form-field>\n    </form>\n  `,\n})\nexport class TaskFormFieldInputComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      inputItem: new FormControl(this.formItem.Response, Validators.required),\n    });\n\n    this.form.valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap((v) => this.submitPatch(v.inputItem, this.formItem))\n      )\n      .subscribe((response: { Message: string; formItem: FormItem }) => {\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-number',\n  styleUrls: ['./task-form-field-number.component.scss'],\n  template: `\n    <form [formGroup]=\"form\" *ngIf=\"formItem\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ formItem.Label }}</mat-label>\n        <input matInput formControlName=\"inputItem\" />\n      </mat-form-field>\n    </form>\n  `,\n})\nexport class TaskFormFieldNumberComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      inputItem: new FormControl(this.formItem.Response, Validators.required),\n    });\n\n    this.form.valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap((v) => this.submitPatch(v.inputItem, this.formItem))\n      )\n      .subscribe((response: { Message: string; formItem: FormItem }) => {\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-radio',\n  styleUrls: ['./task-form-field-radio.component.scss'],\n  template: `\n    <form [formGroup]=\"form\">\n      <label>{{ formItem.Label }}</label>\n      <div>\n        <mat-radio-group aria-label=\"Select an option\" formControlName=\"inputItem\">\n          <mat-radio-button class=\"mr-3\" name=\"inputItem\" [value]=\"option.Label\" *ngFor=\"let option of formItem.FormItemOptions\">\n            {{ option.Label }}\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </form>\n  `,\n})\nexport class TaskFormFieldRadioComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      inputItem: new FormControl(this.formItem.Response, Validators.required),\n    });\n\n    this.form.valueChanges\n      .pipe(switchMap((v) => this.submitPatch(v.inputItem, this.formItem)))\n      .subscribe((response: { Message: string; formItem: FormItem }) => {\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-textbox',\n  styleUrls: ['./task-form-field-textbox.component.scss'],\n  template: `\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{ formItem.Label }}</mat-label>\n        <textarea matInput formControlName=\"inputItem\"></textarea>\n      </mat-form-field>\n    </form>\n  `,\n})\nexport class TaskFormFieldTextboxComponent extends TaskFormBase implements OnInit {\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService, private cd: ChangeDetectorRef) {\n    super(formService, localStorageService);\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      inputItem: new FormControl(this.formItem.Response, Validators.required),\n    });\n\n    this.form.valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap((v) => this.submitPatch(v.inputItem, this.formItem))\n      )\n      .subscribe((response: { Message: string; formItem: FormItem }) => {\n        this.formItem = response.formItem;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { UtilLocalStorageService } from '@xenon/utils';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-task-form-field-time-range',\n  styleUrls: ['./task-form-field-time-range.component.scss'],\n  template: ` <h5>{{ formItem.Label }}</h5> `,\n})\nexport class TaskFormFieldTimeRangeComponent extends TaskFormBase {\n  @Input() formData: Form;\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService) {\n    super(formService, localStorageService);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { TaskFormBase } from '../task-form-base';\nimport { ApiFormService, Form, FormItem } from '@xenon/api';\nimport { UtilLocalStorageService } from '@xenon/utils';\n\n@Component({\n  selector: 'xenon-task-form-field-time',\n  styleUrls: ['./task-form-field-time.component.scss'],\n  template: ` <h5>{{ formItem.Label }}</h5> `,\n})\nexport class TaskFormFieldTimeComponent extends TaskFormBase {\n  @Input() formData: Form;\n  @Input() formItem: FormItem;\n\n  constructor(formService: ApiFormService, localStorageService: UtilLocalStorageService) {\n    super(formService, localStorageService);\n  }\n}\n","export enum TaskFormItemType {\n  Checkbox = 3,\n  Date = 6,\n  DateRange = 10,\n  DateTime = 7,\n  DateTimeRange = 12,\n  File = 8,\n  Input = 1,\n  Number = 5,\n  Radio = 4,\n  TextBox = 2,\n  Time = 9,\n  TimeRange = 11,\n}\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { Form, FormItemType } from '@xenon/api';\nimport { TaskFormItemType } from './task-form-item-type';\n\n@Component({\n  selector: 'xenon-task-form',\n  styleUrls: ['./task-form.component.scss'],\n  template: `\n    <div *ngIf=\"data?.form?.FormItemList?.length\">\n      <h6>{{ data.form.Name }}</h6>\n      <div *ngFor=\"let formItem of data.form.FormItemList\">\n        <xenon-task-form-field-checkbox [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.Checkbox\"></xenon-task-form-field-checkbox>\n        <xenon-task-form-field-date [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.Date\"></xenon-task-form-field-date>\n        <xenon-task-form-field-date-range [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.DateRange\"></xenon-task-form-field-date-range>\n        <!--        <xenon-task-form-field-datetime-->\n        <!--          [formItem]=\"formItem\"-->\n        <!--          *ngIf=\"formItem.FormItemType === types.DateTime\"-->\n        <!--        ></xenon-task-form-field-datetime>-->\n        <!--      <xenon-task-form-field-datetime-range-->\n        <!--        [formItem]=\"formItem\"-->\n        <!--        *ngIf=\"formItem.FormItemType === types.DateTimeRange\"-->\n        <!--      ></xenon-task-form-field-datetime-range>-->\n        <xenon-task-form-field-file [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.File\"></xenon-task-form-field-file>\n        <xenon-task-form-field-input [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.Input\"></xenon-task-form-field-input>\n        <xenon-task-form-field-number [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.Number\"></xenon-task-form-field-number>\n        <xenon-task-form-field-radio [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.Radio\"></xenon-task-form-field-radio>\n        <xenon-task-form-field-textbox [formItem]=\"formItem\" *ngIf=\"formItem.FormItemType === types.TextBox\"></xenon-task-form-field-textbox>\n        <!--      <xenon-task-form-field-time-->\n        <!--        [formItem]=\"formItem\"-->\n        <!--        *ngIf=\"formItem.FormItemType === types.Time\"-->\n        <!--      ></xenon-task-form-field-time>-->\n        <!--      <xenon-task-form-field-time-range-->\n        <!--        [formItem]=\"formItem\"-->\n        <!--        *ngIf=\"formItem.FormItemType === types.TimeRange\"-->\n        <!--      ></xenon-task-form-field-time-range>-->\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TaskFormComponent {\n  types = TaskFormItemType;\n  formData: Form;\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA)\n    public data: { form: Form; formItemTypes: FormItemType[] }\n  ) {\n    this.formData = data.form;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TaskFormComponent } from './task-form.component';\nimport { TaskFormFieldInputComponent } from './task-form-field-input/task-form-field-input.component';\nimport { TaskFormFieldTextboxComponent } from './task-form-field-textbox/task-form-field-textbox.component';\nimport { TaskFormFieldCheckboxComponent } from './task-form-field-checkbox/task-form-field-checkbox.component';\nimport { TaskFormFieldRadioComponent } from './task-form-field-radio/task-form-field-radio.component';\nimport { TaskFormFieldNumberComponent } from './task-form-field-number/task-form-field-number.component';\nimport { TaskFormFieldDateComponent } from './task-form-field-date/task-form-field-date.component';\nimport { TaskFormFieldDatetimeComponent } from './task-form-field-datetime/task-form-field-datetime.component';\nimport { TaskFormFieldTimeComponent } from './task-form-field-time/task-form-field-time.component';\nimport { TaskFormFieldFileComponent } from './task-form-field-file/task-form-field-file.component';\nimport { TaskFormFieldDateRangeComponent } from './task-form-field-date-range/task-form-field-date-range.component';\nimport { TaskFormFieldTimeRangeComponent } from './task-form-field-time-range/task-form-field-time-range.component';\nimport { TaskFormFieldDatetimeRangeComponent } from './task-form-field-datetime-range/task-form-field-datetime-range.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgxMatDatetimePickerModule } from '@angular-material-components/datetime-picker';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    TaskFormComponent,\n    TaskFormFieldCheckboxComponent,\n    TaskFormFieldDateComponent,\n    TaskFormFieldDateRangeComponent,\n    TaskFormFieldDatetimeComponent,\n    TaskFormFieldDatetimeRangeComponent,\n    TaskFormFieldFileComponent,\n    TaskFormFieldInputComponent,\n    TaskFormFieldNumberComponent,\n    TaskFormFieldRadioComponent,\n    TaskFormFieldTextboxComponent,\n    TaskFormFieldTimeComponent,\n    TaskFormFieldTimeRangeComponent,\n  ],\n  exports: [TaskFormComponent],\n  imports: [\n    // Core Modules\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n\n    // Third Party Modules\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    NgxMatDatetimePickerModule,\n  ],\n})\nexport class TaskFormModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'daysOfWeek',\n})\nexport class DaysOfWeekPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    let dayOfWeekName = '';\n    switch (value) {\n      case 0:\n        dayOfWeekName = 'All';\n        break;\n\n      case 1:\n        dayOfWeekName = 'Sun';\n        break;\n\n      case 2:\n        dayOfWeekName = 'Mon';\n        break;\n\n      case 3:\n        dayOfWeekName = 'Tues';\n        break;\n\n      case 4:\n        dayOfWeekName = 'Wed';\n        break;\n\n      case 5:\n        dayOfWeekName = 'Thurs';\n        break;\n\n      case 6:\n        dayOfWeekName = 'Fri';\n        break;\n\n      case 7:\n        dayOfWeekName = 'Sat';\n        break;\n\n      default:\n        break;\n    }\n    return dayOfWeekName;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FormItemType, ItemTypes } from '@xenon/layouts';\n\n@Pipe({\n  name: 'formItemTypeDisplay',\n})\nexport class FormItemTypeDisplayPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    let formItemTypeValue = '';\n    switch (value) {\n      case 1:\n      case 2:\n        formItemTypeValue = ItemTypes.text.key;\n        break;\n\n      case 5:\n        formItemTypeValue = FormItemType.number.key;\n        break;\n\n      case 6:\n      case 7:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n        formItemTypeValue = FormItemType.dateTime.key;\n        break;\n\n      case 3:\n      case 4:\n        formItemTypeValue = ItemTypes.multipleChoice.key;\n        break;\n\n      case 8:\n        formItemTypeValue = ItemTypes.multimedia.key;\n        break;\n\n      default:\n        break;\n    }\n    return formItemTypeValue;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUnits',\n})\nexport class TimeUnitsPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    let timeUnitValue = '';\n    switch (value) {\n      case 1:\n        timeUnitValue = 'Minute(s)';\n        break;\n\n      case 2:\n        timeUnitValue = 'Hour(s)';\n        break;\n\n      case 3:\n        timeUnitValue = 'Day(s)';\n        break;\n\n      case 4:\n        timeUnitValue = 'Week(s)';\n        break;\n\n      case 5:\n        timeUnitValue = 'Months(s)';\n        break;\n\n      case 5:\n        timeUnitValue = 'Year(s)';\n        break;\n\n      default:\n        break;\n    }\n    return timeUnitValue;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MomentModule } from 'ngx-moment';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  NgxMatDatetimePickerModule,\n  NgxMatNativeDateModule,\n  NgxMatTimepickerModule,\n  NGX_MAT_DATE_FORMATS,\n  NgxMatDateFormats,\n  NgxMatDateAdapter,\n} from '@angular-material-components/datetime-picker';\nimport { ApiModule, TokenInterceptor } from '@xenon/api';\nimport { UtilsModule } from '@xenon/utils';\nimport { UiListSelectModule, UiModule, UiExpandingInputModule } from '@xenon/ui';\nimport { UiUserPhotoModule } from '@xenon/ui';\nimport { LeaveAppDialogComponent } from './components/leave-app-dialog/leave-app-dialog.component';\nimport { TeamsSearchComponent } from './components/teams-search/teams-search.component';\nimport { TaskListComponent } from './components/task-list/task-list.component';\nimport { TaskByDateComponent } from './components/task-by-date/task-by-date.component';\nimport { TasksCalenderFilterComponent } from './components/tasks-calender-filter/tasks-calender-filter.component';\nimport { TasksFilterComponent } from './components/tasks-filter/tasks-filter.component';\nimport { TasksSearchComponent } from './components/tasks-search/tasks-search.component';\nimport { TaskFormModule } from './modules/task-form/task-form.module';\nimport { ChecklistPanelComponent } from './components/checklist-panel/checklist-panel.component';\nimport { ChecklistPanelSubtaskListComponent } from './components/checklist-panel/checklist-panel-subtask-list/checklist-panel-subtask-list.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { TextFileComponent } from './components/text-file/text-file.component';\nimport { DriveVertMenuComponent } from './components/drive-vert-menu/drive-vert-menu.component';\nimport { CustomNgxDatetimeAdapter } from './customNGXDatetimeAdapter';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { DaysOfWeekPipe } from './pipes/days-of-week.pipe';\nimport { TimeUnitsPipe } from './pipes/time-units.pipe';\nimport { FormItemTypeDisplayPipe } from './pipes/form-item-type-display.pipe';\n\nconst CUSTOM_DATE_FORMATS: NgxMatDateFormats = {\n  parse: {\n    dateInput: 'l, LTS',\n  },\n  display: {\n    dateInput: 'MM/DD/YYYY, h:mm a',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  declarations: [\n    // Components\n    ChecklistPanelComponent,\n    ChecklistPanelSubtaskListComponent,\n    DriveVertMenuComponent,\n    LeaveAppDialogComponent,\n    TaskByDateComponent,\n    TaskListComponent,\n    TasksCalenderFilterComponent,\n    TasksFilterComponent,\n    TasksSearchComponent,\n    TeamsSearchComponent,\n    TextFileComponent,\n\n    // Pipes\n    DaysOfWeekPipe,\n    TimeUnitsPipe,\n    FormItemTypeDisplayPipe,\n  ],\n  exports: [\n    // Core Module\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n\n    // Third Party Modules\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSortModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatTableModule,\n    MatTreeModule,\n    MatToolbarModule,\n    MomentModule,\n    NgbDatepickerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatNativeDateModule,\n\n    // Library Modules\n    ApiModule,\n    UtilsModule,\n    UiModule,\n\n    // In House Modules\n    TaskFormModule,\n\n    // In House - Components\n    ChecklistPanelComponent,\n    ChecklistPanelSubtaskListComponent,\n    DriveVertMenuComponent,\n    LeaveAppDialogComponent,\n    TaskByDateComponent,\n    TaskListComponent,\n    TasksCalenderFilterComponent,\n    TasksFilterComponent,\n    TasksSearchComponent,\n    TeamsSearchComponent,\n    TextFileComponent,\n\n    // In House - Pipes\n    DaysOfWeekPipe,\n    TimeUnitsPipe,\n    FormItemTypeDisplayPipe,\n  ],\n  imports: [\n    // Core Module\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n\n    // Third Party Modules\n    FlexLayoutModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSortModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatTableModule,\n    MatTreeModule,\n    MatToolbarModule,\n    MomentModule,\n    NgbDatepickerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatNativeDateModule,\n\n    // Library Modules\n    ApiModule,\n    UtilsModule,\n    UiModule,\n    UiUserPhotoModule,\n    UiListSelectModule,\n    UiExpandingInputModule,\n\n    // In House Modules\n    TaskFormModule,\n  ],\n  providers: [\n    {\n      provide: NgxMatDateAdapter,\n      useClass: CustomNgxDatetimeAdapter,\n      deps: [MAT_DATE_LOCALE],\n    },\n    { provide: NGX_MAT_DATE_FORMATS, useValue: CUSTOM_DATE_FORMATS },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  local: true,\n  appUrls: {\n    client: '/#/client/',\n    admin: '/#/admin/',\n    formBuilder: '/#/admin/form-builder/',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}