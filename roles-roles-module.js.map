{"version":3,"sources":["./src/app/features/admin/roles/role-list/role-list.component.ts","./src/app/features/admin/roles/role-list/role-list.component.html","./src/app/features/admin/roles/role-permissions/role-permission-admin/role-permission-admin.component.ts","./src/app/features/admin/roles/role-permissions/role-permission-drive/role-permission-drive.component.ts","./src/app/features/admin/roles/role-permissions/role-permission-forms/role-permission-forms.component.ts","./src/app/features/admin/roles/role-permissions/role-permission-table/role-permission-table.component.ts","./src/app/features/admin/roles/role-permissions/role-permission-table/role-permission-table.component.html","./src/app/features/admin/roles/role-permissions/role-permission-tasks/role-permission-tasks.component.ts","./src/app/features/admin/roles/role-permissions/role-permission-team/role-permission-team.component.ts","./src/app/features/admin/roles/role-permissions/role-permissions.component.ts","./src/app/features/admin/roles/role-permissions/role-permissions.component.html","./src/app/features/admin/roles/roles-routing.module.ts","./src/app/features/admin/roles/roles.component.ts","./src/app/features/admin/roles/roles.module.ts"],"names":[],"mappings":"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","file":"roles-roles-module.js","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Role } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-role-list',\n  styleUrls: ['./role-list.component.scss'],\n  templateUrl: './role-list.component.html',\n})\nexport class RoleListComponent {\n  displayedColumns: string[] = ['Name', 'ID', 'Actions'];\n\n  @Input() roles: Role[] = [];\n  @Output() roleItemClick = new EventEmitter<Role>();\n  @Output() deleteRoleItemClick = new EventEmitter<Role>();\n\n  public clickRole(record: Role): void {\n    this.roleItemClick.emit(record);\n  }\n\n  public clickDeleteRole(record: Role): void {\n    this.deleteRoleItemClick.emit(record);\n  }\n}\n","<table mat-table [dataSource]=\"roles\" class=\"mat-elevation-z0\">\n  <ng-container matColumnDef=\"Name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td class=\"clickable\" mat-cell (click)=\"clickRole(element)\" *matCellDef=\"let element\">\n      {{ element.Name }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"ID\">\n    <th mat-header-cell class=\"text-right\" *matHeaderCellDef>Role ID</th>\n    <td mat-cell (click)=\"clickRole(element)\" *matCellDef=\"let element\" class=\"text-right clickable\">\n      {{ element.ID }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Actions\">\n    <th width=\"10\" mat-header-cell *matHeaderCellDef></th>\n    <td class=\"clickable\" width=\"10\" mat-cell *matCellDef=\"let element\">\n      <mat-icon color=\"primary\" (click)=\"clickDeleteRole(element)\">\n        delete\n      </mat-icon>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { RolePermission } from '@xenon/api';\nimport { BehaviorSubject } from 'rxjs';\n@Component({\n  selector: 'xenon-role-permission-admin',\n  styleUrls: ['./role-permission-admin.component.scss'],\n  template: `\n    <p class=\"p-0 text-caption2\">Choose Permissions to grant to this role</p>\n    <div *ngFor=\"let permission of permissions\" fxLayoutAlign=\"start center\">\n      <mat-checkbox\n        [checked]=\"permission.RoleHasPermission\"\n        [(ngModel)]=\"permission.RoleHasPermission\"\n        (change)=\"newPermissions.emit(permissions)\"\n        class=\"text-body1 w-100 pt-1\"\n        fxLayoutAlign=\"start center\"\n        >{{ permission.Description }}</mat-checkbox\n      >\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RolePermissionAdminComponent {\n  @Input() permissions: RolePermission[];\n  @Output() newPermissions = new EventEmitter<RolePermission[]>();\n}\n","import { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { RolePermission } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-role-permission-drive',\n  styleUrls: ['./role-permission-drive.component.scss'],\n  template: ` <p class=\"p-0 text-caption2\">Choose Permissions to grant to this role</p>\n    <div *ngFor=\"let permission of permissions\" fxLayoutAlign=\"start center\">\n      <mat-checkbox\n        [checked]=\"permission.RoleHasPermission\"\n        [(ngModel)]=\"permission.RoleHasPermission\"\n        (change)=\"newPermissions.emit(permissions)\"\n        class=\"text-body1 w-100 pt-1\"\n        fxLayoutAlign=\"start center\"\n        >{{ permission.Description }}</mat-checkbox\n      >\n    </div>`,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RolePermissionDriveComponent {\n  @Input() permissions: RolePermission;\n  @Output() newPermissions = new EventEmitter<RolePermission[]>();\n}\n","import { Component, Input, ViewEncapsulation, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ApiRoleService, FormTemplatePermission, TaskTemplatePermission } from '@xenon/api';\nimport { take } from 'rxjs/operators';\n@Component({\n  selector: 'xenon-role-permission-forms',\n  styleUrls: ['./role-permission-forms.component.scss'],\n  template: `\n    <xenon-role-permission-table\n      [displayedColumns]=\"displayedColumns\"\n      [dataSet]=\"defaultFormTemplatePermission\"\n      [dataSetOptions]=\"{ nameField: 'FormTemplateName' }\"\n      (newPermissions)=\"newDefaultPermission.emit($event)\"\n    ></xenon-role-permission-table>\n    <xenon-role-permission-table\n      [displayedColumns]=\"displayedColumns\"\n      [dataSet]=\"formTemplatePermissions\"\n      [dataSetOptions]=\"{ nameField: 'FormTemplateName' }\"\n      (newPermissions)=\"newPermissions.emit($event)\"\n    ></xenon-role-permission-table>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RolePermissionFormsComponent implements OnInit {\n  @Input() roleID: number;\n  @Output() newPermissions = new EventEmitter<FormTemplatePermission[]>();\n  @Output() newDefaultPermission = new EventEmitter<FormTemplatePermission>();\n\n  public defaultFormTemplatePermission: FormTemplatePermission[];\n  public formTemplatePermissions: FormTemplatePermission[];\n  public displayedColumns = ['name', 'all', 'create', 'view', 'viewOwn', 'edit', 'delete', 'admin'];\n  public allChecked: boolean;\n\n  constructor(private apiRoleService: ApiRoleService) {}\n\n  public ngOnInit(): void {\n    this.apiRoleService\n      .getFormTemplateRolePermissionsDefaultByRole(this.roleID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        const role = result.FormTemplateRoles as FormTemplatePermission;\n        if (role) {\n          this.defaultFormTemplatePermission = [role];\n        } else {\n          this.defaultFormTemplatePermission = [\n            {\n              RoleID: this.roleID,\n              Create: false,\n              View: false,\n              ViewOwn: false,\n              Edit: false,\n              EditOwn: false,\n              Delete: false,\n              DeleteOwn: false,\n              Admin: false,\n              FormTemplateID: 0,\n              FormTemplateName: 'Default',\n            },\n          ];\n        }\n      });\n    this.apiRoleService\n      .getFormTemplateRolePermissionsByRole(this.roleID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        this.formTemplatePermissions = result.FormTemplateRoles as FormTemplatePermission[];\n      });\n  }\n}\n","import { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { FormTemplatePermission, TaskTemplatePermission } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-role-permission-table',\n  styleUrls: ['./role-permission-table.component.scss'],\n  templateUrl: './role-permission-table.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RolePermissionTableComponent {\n  @Input() dataSet: TaskTemplatePermission[] | FormTemplatePermission[];\n  @Input() displayedColumns: string[];\n  @Input() dataSetOptions: { nameField: string };\n  @Output() newPermissions = new EventEmitter<TaskTemplatePermission[] | FormTemplatePermission[]>();\n\n  public name: string;\n  public allChecked: boolean;\n\n  public getName(template): string {\n    return template[this.dataSetOptions.nameField];\n  }\n\n  public isAllChecked(template): boolean {\n    let allChecked = true;\n    Object.entries(template).forEach(([key, value]) => {\n      if (!value && this.displayedColumns.some((column) => column.toLowerCase() === key.toLowerCase())) {\n        allChecked = false;\n      }\n    });\n    this.allChecked = allChecked;\n    return allChecked;\n  }\n\n  public togglePermission(template, newValue: boolean, key: string): void {\n    template[key] = newValue;\n    this.outputPermissions();\n  }\n\n  public toggleAll(template): void {\n    const allChecked = !this.isAllChecked(template);\n    Object.entries(template).forEach(([key, value]) => {\n      if (value === !!value) {\n        template[key] = allChecked;\n      }\n    });\n    this.outputPermissions();\n  }\n\n  private outputPermissions(): void {\n    this.newPermissions.emit(this.dataSet);\n  }\n}\n","<div *ngIf=\"dataSet\">\n  <table mat-table [dataSource]=\"dataSet\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-left'\">Task</th>\n      <td mat-cell *matCellDef=\"let element\" [ngClass]=\"'text-left'\">{{ getName(element) }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"all\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">All</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"isAllChecked(element)\" [(ngModel)]=\"allChecked\" (change)=\"toggleAll(element)\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"create\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">Create</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.Create\" (change)=\"togglePermission(element, $event.checked, 'Create')\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"view\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">View</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.View\" (change)=\"togglePermission(element, $event.checked, 'View')\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"viewOwn\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">View Own</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.ViewOwn\" (change)=\"togglePermission(element, $event.checked, 'ViewOwn')\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">Edit</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.Edit\" (change)=\"togglePermission(element, $event.checked, 'Edit')\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"editOwn\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">Edit Own</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.EditOwn\" (change)=\"togglePermission(element, $event.checked, 'EditOwn')\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"delete\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">Delete</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.Delete\" (change)=\"togglePermission(element, $event.checked, 'Delete')\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"deleteOwn\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">Delete Own</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.DeleteOwn\" (change)=\"togglePermission(element, $event.checked, 'DeleteOwn')\"></mat-checkbox>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"admin\">\n      <th mat-header-cell *matHeaderCellDef [ngClass]=\"'text-center checkbox-width'\">Admin</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox [checked]=\"element.Admin\" (change)=\"togglePermission(element, $event.checked, 'Admin')\"></mat-checkbox>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\" class=\"text-center\"></tr>\n  </table>\n</div>\n","import { Component, Input, ViewEncapsulation, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ApiRoleService, TaskTemplatePermission } from '@xenon/api';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'xenon-role-permission-tasks',\n  styleUrls: ['./role-permission-tasks.component.scss'],\n  template: `\n    <xenon-role-permission-table\n      [displayedColumns]=\"displayedColumns\"\n      [dataSet]=\"defaultTaskTemplatePermission\"\n      [dataSetOptions]=\"{ nameField: 'RoleName' }\"\n      (newPermissions)=\"newDefaultPermission.emit($event)\"\n    ></xenon-role-permission-table>\n    <xenon-role-permission-table\n      [displayedColumns]=\"displayedColumns\"\n      [dataSet]=\"taskTemplatePermissions\"\n      [dataSetOptions]=\"{ nameField: 'TaskTemplateName' }\"\n      (newPermissions)=\"newPermissions.emit($event)\"\n    ></xenon-role-permission-table>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RolePermissionTasksComponent implements OnInit {\n  @Input() roleID: number;\n  @Output() newPermissions = new EventEmitter<TaskTemplatePermission[]>();\n  @Output() newDefaultPermission = new EventEmitter<TaskTemplatePermission[]>();\n\n  public defaultTaskTemplatePermission: TaskTemplatePermission[];\n  public taskTemplatePermissions: TaskTemplatePermission[];\n  public displayedColumns = ['name', 'all', 'create', 'view', 'edit', 'delete', 'admin'];\n  public allChecked: boolean;\n\n  constructor(private apiRoleService: ApiRoleService) {}\n\n  public ngOnInit(): void {\n    this.apiRoleService\n      .getTaskTemplateRolePermissionsDefaultByRole(this.roleID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        const role = result.TaskTemplateRoles as TaskTemplatePermission;\n        if (role) {\n          this.defaultTaskTemplatePermission = [role];\n        } else {\n          this.defaultTaskTemplatePermission = [\n            {\n              RoleID: this.roleID,\n              Create: false,\n              View: false,\n              ViewOwn: false,\n              Edit: false,\n              EditOwn: false,\n              Delete: false,\n              DeleteOwn: false,\n              Admin: false,\n              TaskTemplateID: 0,\n              TaskTemplateName: 'Default',\n            },\n          ];\n        }\n      });\n    this.apiRoleService\n      .getTaskTemplateRolePermissionsByRole(this.roleID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        this.taskTemplatePermissions = result.TaskTemplateRoles as TaskTemplatePermission[];\n      });\n  }\n}\n","import { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { RolePermission } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-role-permission-team',\n  styleUrls: ['./role-permission-team.component.scss'],\n  template: ` <p class=\"p-0 text-caption2\">Choose Permissions to grant to this role</p>\n    <div *ngFor=\"let permission of permissions\" fxLayoutAlign=\"start center\">\n      <mat-checkbox\n        [checked]=\"permission.RoleHasPermission\"\n        [(ngModel)]=\"permission.RoleHasPermission\"\n        (change)=\"newPermissions.emit(permissions)\"\n        class=\"text-body1 w-100 pt-1\"\n        fxLayoutAlign=\"start center\"\n        >{{ permission.Description }}</mat-checkbox\n      >\n    </div>`,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RolePermissionTeamComponent {\n  @Input() permissions: RolePermission;\n  @Output() newPermissions = new EventEmitter<RolePermission[]>();\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { UiNotificationService, UiPromptService, NotificationType } from '@xenon/ui';\nimport { ApiRoleService, Role, RolePermission, TaskTemplatePermission, FormTemplatePermission } from '@xenon/api';\nimport { BehaviorSubject } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'xenon-role-permissions',\n  templateUrl: './role-permissions.component.html',\n  styleUrls: ['./role-permissions.component.scss'],\n})\nexport class RolePermissionsComponent {\n  public currentTab: BehaviorSubject<string> = new BehaviorSubject('admin');\n  public allRolePermissions: BehaviorSubject<RolePermission[]> = new BehaviorSubject(null);\n  public taskTemplatePermissions: TaskTemplatePermission[];\n  public taskDefaultTemplatePermission: TaskTemplatePermission[];\n  public formTemplatePermissions: FormTemplatePermission[];\n  public formDefaultTemplatePermission: FormTemplatePermission[];\n  public nameInput = new FormControl(this.data.role.Name);\n\n  public triggeredSaveTemplatePermissions = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: { role: Role; refresh: () => {} },\n    public uiPromptService: UiPromptService,\n    public notificationService: UiNotificationService,\n    private dialogRef: MatDialogRef<RolePermissionsComponent>,\n    private apiRoleService: ApiRoleService\n  ) {\n    this.apiRoleService\n      .getPermissionsByRole(data.role.ID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          this.allRolePermissions.next(result.RolePermissions);\n        } else {\n          this.notificationService.show(NotificationType.error, 'Close', result.Message, 5000);\n        }\n      });\n  }\n\n  public deleteRole(): void {\n    this.apiRoleService\n      .deleteRole(this.data.role.ID)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          this.notificationService.show(NotificationType.success, 'Close', 'Role Deleted', 5000);\n        } else {\n          this.notificationService.show(NotificationType.error, 'Close', result.Message, 5000);\n        }\n      });\n  }\n\n  public getPermissionByGroup(group: string): RolePermission[] {\n    return this.allRolePermissions.value.filter((permission) => permission.PermissionGroup === group);\n  }\n\n  public saveRole(): void {\n    let saveRoleSuccess = true;\n    this.triggeredSaveTemplatePermissions = true;\n    this.data.role.Name = this.nameInput.value;\n    const newPermissionList = this.getPermissionIdList();\n    if (newPermissionList.length > 0) {\n      this.apiRoleService\n        .setPermissionsByRole(this.data.role.ID, this.getPermissionIdList())\n        .pipe(take(1))\n        .subscribe((result) => {\n          if (result.Status !== 'success') {\n            saveRoleSuccess = false;\n          }\n        });\n    }\n\n    saveRoleSuccess = this.saveTaskPermissions(saveRoleSuccess);\n    saveRoleSuccess = this.saveFormPermissions(saveRoleSuccess);\n\n    this.apiRoleService\n      .updateRole(this.data.role)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status !== 'success') {\n          saveRoleSuccess = false;\n        }\n      });\n\n    if (saveRoleSuccess) {\n      this.notificationService.show(NotificationType.success, 'Close', 'Permissions Saved', 5000);\n      this.data.refresh();\n      this.dialogRef.close();\n    } else {\n      this.notificationService.show(NotificationType.error, 'Close', 'Something went wrong saving permissions', 5000);\n    }\n  }\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n\n  public updatePermissionList(newPermissions: RolePermission[]): void {\n    let newPermissionList: RolePermission[];\n    newPermissionList = this.allRolePermissions.value.map((permission) => {\n      if (newPermissions.some((newPermission) => newPermission.ID === permission.ID)) {\n        return newPermissions.find((newPermission) => newPermission.ID === permission.ID);\n      } else {\n        return permission;\n      }\n    });\n  }\n\n  private getPermissionIdList(): number[] {\n    return this.allRolePermissions.value.reduce((acc, cur) => {\n      if (!cur.RoleHasPermission) return acc;\n      if (acc.length > 0) {\n        return [...acc, cur.ID];\n      } else {\n        return [cur.ID];\n      }\n    }, []);\n  }\n\n  private saveTaskPermissions(saveRoleSuccess: boolean): boolean {\n    if (this.taskDefaultTemplatePermission) {\n      this.apiRoleService\n        .setDefaultTaskTemplateRolePermissionsByRole(this.taskDefaultTemplatePermission[0])\n        .pipe(take(1))\n        .subscribe((result) => {\n          if (result.Status !== 'success') {\n            saveRoleSuccess = false;\n          }\n        });\n    }\n\n    if (this.taskTemplatePermissions) {\n      this.apiRoleService\n        .setTaskTemplateRolePermissionsByRole(this.taskTemplatePermissions)\n        .pipe(take(1))\n        .subscribe((result) => {\n          if (result.Status !== 'success') {\n            saveRoleSuccess = false;\n          }\n        });\n    }\n    return saveRoleSuccess;\n  }\n\n  private saveFormPermissions(saveRoleSuccess: boolean): boolean {\n    if (this.formDefaultTemplatePermission) {\n      this.apiRoleService\n        .setDefaultFormTemplateRolePermissionsByRole(this.formDefaultTemplatePermission[0])\n        .pipe(take(1))\n        .subscribe((result) => {\n          if (result.Status !== 'success') {\n            saveRoleSuccess = false;\n          }\n        });\n    }\n\n    if (this.formTemplatePermissions) {\n      this.apiRoleService\n        .setFormTemplateRolePermissionsByRole(this.formTemplatePermissions)\n        .pipe(take(1))\n        .subscribe((result) => {\n          if (result.Status !== 'success') {\n            saveRoleSuccess = false;\n          }\n        });\n    }\n    return saveRoleSuccess;\n  }\n}\n","<div fxLayoutAlign=\"space-between center\" class=\"background-primary color-white w-100 py-2\">\n  <span fxLayoutAlign=\"start center\">\n    <button mat-icon-button class=\"mx-2\" (click)=\"close()\"><mat-icon>arrow_back</mat-icon></button>\n    <mat-form-field>\n      <input matInput [formControl]=\"nameInput\" />\n    </mat-form-field>\n  </span>\n  <span fxLayoutAlign=\"start center\">\n    <button mat-icon-button class=\"mx-2\" (click)=\"saveRole()\">SAVE</button>\n    <mat-icon [matMenuTriggerFor]=\"menu\" class=\"mx-3 clickable\">more_vert</mat-icon>\n    <mat-menu #menu=\"matMenu\">\n      <!-- <button mat-menu-item (click)=\"duplicateRole()\" [disabled]=\"true\"><mat-icon>Content Copy</mat-icon>Duplicate Role</button> -->\n      <button mat-menu-item (click)=\"deleteRole()\"><mat-icon>mode_edit</mat-icon>Delete Role</button>\n    </mat-menu>\n  </span>\n</div>\n\n<div fxLayout=\"row\" class=\"page-height overflow-y-auto background-white\" *ngIf=\"allRolePermissions | async\">\n  <div fxLayout=\"column\" fxFlex=\"15%\" class=\"h-100 side-nav\">\n    <mat-action-list class=\"pr-5\">\n      <button class=\"nav-button\" [ngClass]=\"{ 'selected-nav': currentTab.value === 'admin' }\" mat-list-item (click)=\"currentTab.next('admin')\">\n        <mat-icon class=\"mr-2 material-icons-outlined\">settings</mat-icon>Admin\n      </button>\n      <button class=\"nav-button\" [ngClass]=\"{ 'selected-nav': currentTab.value === 'tasks' }\" mat-list-item (click)=\"currentTab.next('tasks')\">\n        <mat-icon class=\"mr-2 material-icons-outlined\">check_box</mat-icon>Tasks\n      </button>\n      <button class=\"nav-button\" [ngClass]=\"{ 'selected-nav': currentTab.value === 'forms' }\" mat-list-item (click)=\"currentTab.next('forms')\">\n        <mat-icon class=\"mr-2 material-icons-outlined\">content_paste</mat-icon>Forms\n      </button>\n      <button class=\"nav-button\" [ngClass]=\"{ 'selected-nav': currentTab.value === 'drive' }\" mat-list-item (click)=\"currentTab.next('drive')\">\n        <mat-icon class=\"mr-2 material-icons-outlined\">folder</mat-icon>Drive\n      </button>\n      <button class=\"nav-button\" [ngClass]=\"{ 'selected-nav': currentTab.value === 'team' }\" mat-list-item (click)=\"currentTab.next('team')\">\n        <mat-icon class=\"mr-2 material-icons-outlined\">people_alt</mat-icon>Team\n      </button>\n    </mat-action-list>\n  </div>\n\n  <div *ngIf=\"(currentTab | async) === 'admin'\" class=\"w-100\">\n    <section>\n      <h6 class=\"mb-0\">Permissions</h6>\n      <xenon-role-permission-admin [permissions]=\"getPermissionByGroup('admin')\" (newPermissions)=\"updatePermissionList($event)\"></xenon-role-permission-admin>\n    </section>\n  </div>\n\n  <div *ngIf=\"(currentTab | async) === 'tasks'\" class=\"w-100\">\n    <section>\n      <h6 class=\"mb-0\">Task Permissions</h6>\n      <xenon-role-permission-tasks\n        [roleID]=\"data.role.ID\"\n        (newPermissions)=\"taskTemplatePermissions = $event\"\n        (newDefaultPermission)=\"taskDefaultTemplatePermission = $event\"\n      ></xenon-role-permission-tasks>\n    </section>\n  </div>\n  <div *ngIf=\"(currentTab | async) === 'forms'\" class=\"w-100\">\n    <section>\n      <h6 class=\"mb-0\">Form Permissions</h6>\n      <xenon-role-permission-forms\n        [roleID]=\"data.role.ID\"\n        (newPermissions)=\"formTemplatePermissions = $event\"\n        (newDefaultPermission)=\"formDefaultTemplatePermission = $event\"\n      ></xenon-role-permission-forms>\n    </section>\n  </div>\n  <div *ngIf=\"(currentTab | async) === 'drive'\" class=\"w-100\">\n    <section>\n      <h6 class=\"mb-0\">Permissions</h6>\n      <xenon-role-permission-drive [permissions]=\"getPermissionByGroup('drive')\" (newPermissions)=\"updatePermissionList($event)\"></xenon-role-permission-drive>\n    </section>\n  </div>\n  <div *ngIf=\"(currentTab | async) === 'team'\" class=\"w-100\">\n    <section>\n      <h6 class=\"mb-0\">Permissions</h6>\n      <xenon-role-permission-team [permissions]=\"getPermissionByGroup('team')\" (newPermissions)=\"updatePermissionList($event)\"></xenon-role-permission-team>\n    </section>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolesComponent } from './roles.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RolesComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RolesRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { ApiRoleService, Role, User } from '@xenon/api';\nimport { RolePermissionsComponent } from './role-permissions/role-permissions.component';\nimport { UtilLocalStorageService, SearchPipe } from '@xenon/utils';\nimport { AdminBase } from '../../../shared/admin-base';\nimport { flatMap, take } from 'rxjs/operators';\nimport { NotificationType, UiNotificationService, UiPromptService } from '@xenon/ui';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-roles',\n  styleUrls: ['./roles.component.scss'],\n  template: `\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <h6 class=\"title\">Roles</h6>\n      <xenon-ui-string-search [searchString]=\"search$ | async\" (searchChange)=\"searchChange($event)\" [label]=\"'Search Roles'\"> </xenon-ui-string-search>\n    </div>\n\n    <div class=\"page-body\">\n      <xenon-role-list [roles]=\"roles$ | async\" (roleItemClick)=\"openRoleForm($event)\" (deleteRoleItemClick)=\"deleteRole($event)\"></xenon-role-list>\n      <button mat-fab mat-flat-button (click)=\"createNewRole()\" class=\"add-button\" color=\"primary\" aria-label=\"Create new Location\">\n        <mat-icon>add</mat-icon>\n      </button>\n    </div>\n  `,\n})\nexport class RolesComponent extends AdminBase implements OnInit, OnDestroy {\n  public roles$: BehaviorSubject<Role[]> = new BehaviorSubject<Role[]>([]);\n  public search$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n  private cachedRoles: Role[] = [];\n  private columnsToSearchBy = ['Name', 'ID'];\n  private searchPipe: SearchPipe;\n\n  constructor(\n    public uiPromptService: UiPromptService,\n    public notificationService: UiNotificationService,\n    public dialog: MatDialog,\n    private apiRoleService: ApiRoleService,\n    private localStorageService: UtilLocalStorageService\n  ) {\n    super();\n    this.loggedInUser = this.localStorageService.getItem('user');\n    this.searchPipe = new SearchPipe();\n  }\n\n  ngOnInit(): void {\n    this.refreshData();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  public searchChange(searchInput: string): void {\n    const filteredRoles = this.searchPipe.transform(this.cachedRoles, searchInput, this.columnsToSearchBy);\n    this.roles$.next(filteredRoles);\n  }\n\n  public createNewRole(): void {\n    this.apiRoleService\n      .createRole({\n        OrgID: this.loggedInUser.CurrentOrg.ID,\n        LocationID: this.loggedInUser.CurrentOrg.ID,\n        Name: 'Untitled Role',\n      })\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          this.openRoleForm(result.Role);\n        } else {\n          this.notificationService.show(NotificationType.error, 'Close', result.Message, 5000);\n        }\n      });\n  }\n\n  public openRoleForm(role: Role): void {\n    this.dialog.open(RolePermissionsComponent, {\n      data: { role: role, refresh: this.refreshData.bind(this) },\n      panelClass: 'full-page-dialog',\n    });\n  }\n\n  public deleteRole(role: Role): void {\n    const sub = this.uiPromptService\n      .prompt(`Are you sure you sure you want to delete \"${role.Name}\"?`)\n      .afterClosed()\n      .pipe(\n        flatMap((r: { ok: boolean }) => {\n          return r.ok ? this.apiRoleService.deleteRole(role.ID) : of({ Status: 'empty' });\n        })\n      )\n      .subscribe((m) => {\n        if (m.Status === 'success') {\n          this.notificationService.show(NotificationType.success, 'Close', 'Deleted Role', 2500);\n          setTimeout(() => {\n            this.refreshData();\n          }, 2500);\n        } else {\n          this.notificationService.show(NotificationType.success, 'Close', 'Role failed to delete', 2500);\n        }\n      });\n    this.subscriptions.add(sub);\n  }\n\n  private refreshData(): void {\n    const sub = this.apiRoleService.getRolesByOrg(this.loggedInUser.CurrentOrg.ID).subscribe((res) => {\n      this.cachedRoles = res.OrgRoleList;\n      this.roles$.next(res.OrgRoleList);\n    });\n    this.subscriptions.add(sub);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RolesRoutingModule } from './roles-routing.module';\nimport { RolesComponent } from './roles.component';\nimport { RoleListComponent } from './role-list/role-list.component';\nimport { RolePermissionsComponent } from './role-permissions/role-permissions.component';\nimport { RolePermissionTeamComponent } from './role-permissions/role-permission-team/role-permission-team.component';\nimport { RolePermissionTasksComponent } from './role-permissions/role-permission-tasks/role-permission-tasks.component';\nimport { RolePermissionFormsComponent } from './role-permissions/role-permission-forms/role-permission-forms.component';\nimport { RolePermissionDriveComponent } from './role-permissions/role-permission-drive/role-permission-drive.component';\nimport { RolePermissionAdminComponent } from './role-permissions/role-permission-admin/role-permission-admin.component';\nimport { RolePermissionTableComponent } from './role-permissions/role-permission-table/role-permission-table.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { UiModule } from '@xenon/ui';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n@NgModule({\n  declarations: [\n    RolesComponent,\n    RoleListComponent,\n    RolePermissionsComponent,\n    RolePermissionTeamComponent,\n    RolePermissionTasksComponent,\n    RolePermissionFormsComponent,\n    RolePermissionDriveComponent,\n    RolePermissionAdminComponent,\n    RolePermissionTableComponent,\n  ],\n  imports: [\n    CommonModule,\n    RolesRoutingModule,\n    MatListModule,\n    UiModule,\n    MatTableModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n  ],\n})\nexport class RolesModule {}\n"],"sourceRoot":"webpack:///"}