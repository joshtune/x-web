{"version":3,"sources":["./src/app/features/admin/task-templates/task-template-list/task-template-list.component.ts","./src/app/features/admin/task-templates/task-template-list/task-template-list.component.html","./src/app/features/admin/task-templates/task-templates-routing.module.ts","./src/app/features/admin/task-templates/task-templates.component.ts","./src/app/features/admin/task-templates/task-templates.module.ts"],"names":[],"mappings":"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","file":"task-templates-task-templates-module.js","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TaskTemplate } from '@xenon/api';\n\n@Component({\n  selector: 'xenon-task-template-list',\n  templateUrl: './task-template-list.component.html',\n  styleUrls: ['./task-template-list.component.scss'],\n})\nexport class TaskTemplateListComponent {\n  displayedColumns: string[] = ['Name', 'Type', 'Location', 'Actions'];\n\n  @Input() taskTemplates: TaskTemplate[] = [];\n  @Output() taskTemplateItemClick = new EventEmitter<TaskTemplate>();\n  @Output() deleteTaskTemplateItemClick = new EventEmitter<TaskTemplate>();\n\n  public clickTaskTemplate(record: TaskTemplate): void {\n    this.taskTemplateItemClick.emit(record);\n  }\n\n  public clickDeleteTaskTemplate(record: TaskTemplate): void {\n    this.deleteTaskTemplateItemClick.emit(record);\n  }\n}\n","<table mat-table [dataSource]=\"taskTemplates\" class=\"mat-elevation-z0 overflow-y-auto\">\n  <ng-container matColumnDef=\"Name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td class=\"clickable\" mat-cell (click)=\"clickTaskTemplate(element)\" *matCellDef=\"let element\">\n      {{ element.Name }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Type\">\n    <th mat-header-cell *matHeaderCellDef>Type</th>\n    <td mat-cell (click)=\"clickTaskTemplate(element)\" *matCellDef=\"let element\" class=\"clickable\">\n      {{ element.TaskType === 1 ? 'Complete Form' : 'Complete Checklist' }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Location\">\n    <th mat-header-cell *matHeaderCellDef>Location</th>\n    <td mat-cell (click)=\"clickTaskTemplate(element)\" *matCellDef=\"let element\" class=\"clickable\">\n      {{ element.LocationID }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Actions\">\n    <th width=\"10\" mat-header-cell *matHeaderCellDef></th>\n    <td class=\"clickable\" width=\"10\" mat-cell *matCellDef=\"let element\">\n      <mat-icon color=\"primary\" (click)=\"clickDeleteTaskTemplate(element)\">\n        delete\n      </mat-icon>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskTemplatesComponent } from './task-templates.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskTemplatesComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskTemplatesRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ApiTaskTemplateService, TaskTemplate, User } from '@xenon/api';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { UtilLocalStorageService, SearchPipe } from '@xenon/utils';\nimport { AdminBase } from '../../../shared/admin-base';\nimport { EditTaskTemplateComponent, NotificationType, UiNotificationService, UiPromptService } from '@xenon/ui';\nimport { flatMap } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-task-templates',\n  styleUrls: ['./task-templates.component.scss'],\n  template: `\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <h6 class=\"title\">Task Templates</h6>\n      <xenon-ui-string-search [searchString]=\"search$ | async\" (searchChange)=\"searchChange($event)\" [label]=\"'Search Templates'\"> </xenon-ui-string-search>\n    </div>\n\n    <div class=\"page-body\">\n      <xenon-task-template-list\n        [taskTemplates]=\"taskTemplates$ | async\"\n        (taskTemplateItemClick)=\"openTaskTemplateTask($event)\"\n        (deleteTaskTemplateItemClick)=\"deleteTaskTemplate($event)\"\n      ></xenon-task-template-list>\n    </div>\n    <button mat-fab mat-flat-button (click)=\"createTaskTemplate()\" class=\"add-button\" color=\"primary\" aria-label=\"Create new Task Template\">\n      <mat-icon>add</mat-icon>\n    </button>\n  `,\n})\nexport class TaskTemplatesComponent extends AdminBase implements OnInit, OnDestroy {\n  taskTemplates$: BehaviorSubject<TaskTemplate[]> = new BehaviorSubject<TaskTemplate[]>([]);\n  search$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n  private cachedTemplates: TaskTemplate[];\n  private columnsToSearchBy = ['Name', 'Type', 'Location', 'Actions'];\n  private searchPipe: SearchPipe;\n\n  constructor(\n    public uiPromptService: UiPromptService,\n    public notificationService: UiNotificationService,\n    private apiTaskTemplateService: ApiTaskTemplateService,\n    private localStorageService: UtilLocalStorageService,\n    public dialog: MatDialog\n  ) {\n    super();\n    this.loggedInUser = this.localStorageService.getItem('user');\n    this.searchPipe = new SearchPipe();\n  }\n\n  ngOnInit(): void {\n    this.refreshData();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  public searchChange(searchInput: string): void {\n    const filteredTemplates: TaskTemplate[] = this.searchPipe.transform(this.cachedTemplates, searchInput, this.columnsToSearchBy);\n    this.taskTemplates$.next(filteredTemplates);\n  }\n\n  public openTaskTemplateTask(taskTemplate?: TaskTemplate): void {\n    this.apiTaskTemplateService.getTaskTemplateByTemplateID(taskTemplate.ID).subscribe((fullTemplate) => {\n      this.openDialog(fullTemplate);\n    });\n  }\n\n  public createTaskTemplate(): void {\n    if (!this.taskTemplates$.value) {\n      this.taskTemplates$.next([]);\n    }\n    this.openDialog(null, true);\n  }\n\n  public deleteTaskTemplate(taskTemplate?: TaskTemplate): void {\n    const sub = this.uiPromptService\n      .prompt(`Are you sure you sure you want to delete \"${taskTemplate.Name}\"?`)\n      .afterClosed()\n      .pipe(\n        flatMap((r: { ok: boolean }) => {\n          return r.ok ? this.apiTaskTemplateService.deleteTaskTemplate(taskTemplate.ID) : of({ Message: 'Delete not performed' });\n        })\n      )\n      .subscribe((m) => {\n        this.notificationService.show(NotificationType.success, 'Close', 'Deleted Task Template', 2500);\n        setTimeout(() => {\n          this.refreshData();\n        }, 2500);\n      });\n    this.subscriptions.add(sub);\n  }\n\n  private refreshData(): void {\n    const sub = this.apiTaskTemplateService.getTaskTemplatesByOrgID(this.loggedInUser.CurrentOrg.ID).subscribe((res) => {\n      this.cachedTemplates = res;\n      this.taskTemplates$.next(res);\n    });\n    this.subscriptions.add(sub);\n  }\n\n  private openDialog(fullTemplate?: TaskTemplate, newTask = false): void {\n    const dialogRef = this.dialog.open(EditTaskTemplateComponent, {\n      data: {\n        task: fullTemplate ? fullTemplate : 'new',\n        newTask: newTask,\n      },\n      panelClass: 'full-page-dialog',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (!result) {\n        return;\n      }\n      if (newTask) {\n        this.taskTemplates$.next(this.taskTemplates$.getValue().concat(result));\n      }\n      this.apiTaskTemplateService.updateTaskTemplateBatch(result).subscribe((newTemplate) => {\n        this.notificationService.show(NotificationType.success, 'Action done', 'Task saved', 2500);\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { TaskTemplatesRoutingModule } from './task-templates-routing.module';\nimport { TaskTemplatesComponent } from './task-templates.component';\nimport { TaskTemplateListComponent } from './task-template-list/task-template-list.component';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { UiTaskTemplatesModule } from '@xenon/ui';\n\n@NgModule({\n  declarations: [TaskTemplatesComponent, TaskTemplateListComponent],\n  imports: [SharedModule, TaskTemplatesRoutingModule, UiTaskTemplatesModule],\n})\nexport class TaskTemplatesModule {}\n"],"sourceRoot":"webpack:///"}