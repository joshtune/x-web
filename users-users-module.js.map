{"version":3,"sources":["./src/app/features/admin/users/new-user-form/new-user-form.component.ts","./src/app/features/admin/users/user-list/user-list.component.ts","./src/app/features/admin/users/user-list/user-list.component.html","./src/app/features/admin/users/users-routing.module.ts","./src/app/features/admin/users/users.component.ts","./src/app/features/admin/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["import { Component, Inject, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ApiRoleService, ApiUserService, Permissions, Role, User, Location, ApiLocationService, RoleLocations, LoggedInUser } from '@xenon/api';\nimport { NotificationType, UiListSelectDialogService, UiNotificationService } from '@xenon/ui';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'xenon-new-user-form',\n  styleUrls: ['./new-user-form.component.scss'],\n  template: `\n    <div fxLayoutAlign=\"space-between\" class=\"background-white nav-divider\">\n      <span fxLayoutAlign=\"start center\" class=\"ml-3\">\n        <button mat-icon-button (click)=\"close()\">\n          <mat-icon fontSet=\"material-icons-outlined\">close</mat-icon>\n        </button>\n        <h6 class=\"m-0\">Add New User</h6>\n      </span>\n      <button mat-stroked-button color=\"primary\" [disabled]=\"(formValid | async) !== true\" (click)=\"createNewUser()\" class=\"p-2 m-3\">ADD</button>\n    </div>\n    <div class=\"dialog-body\">\n      <mat-card>\n        <h6>User Account</h6>\n        <form [formGroup]=\"newUserForm\" fxLayout=\"column\">\n          <div fxLayoutAlign=\"space-between center\">\n            <mat-form-field appearance=\"outline\" fxFlex=\"50%\" class=\"mr-2\">\n              <mat-label>First Name</mat-label>\n              <input matInput formControlName=\"firstName\" (blur)=\"checkForm()\" />\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" fxFlex=\"50%\" class=\"ml-2\">\n              <mat-label>Last Name</mat-label>\n              <input matInput formControlName=\"lastName\" (blur)=\"checkForm()\" />\n            </mat-form-field>\n          </div>\n          <mat-form-field appearance=\"outline\" fxFlex=\"100%\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" (blur)=\"checkForm()\" />\n          </mat-form-field>\n        </form>\n        <mat-divider></mat-divider>\n        <div *ngIf=\"roleLocationObjects | async as roleLocationObjects\" class=\"mt-2\">\n          <div class=\"list-row\" fxLayoutAlign=\"space-between center\" *ngFor=\"let roleLocationObj of roleLocationObjects\">\n            <div fxLayoutAlign=\"start center\">\n              <mat-icon>person_outline</mat-icon>\n              <p class=\"mb-0 text-body1 ml-3\">{{ roleLocationObj.role.Name }}</p>\n            </div>\n            <span fxLayoutAlign=\"start center\">\n              <button mat-button (click)=\"openLocationDialog(roleLocationObj)\">{{ getLocationString(roleLocationObj.locations) }}</button>\n              <span class=\"set-size\">\n                <button class=\"remove-button\" (click)=\"removeRole(roleLocationObj.role)\" mat-icon-button>\n                  <mat-icon>cancel</mat-icon>\n                </button>\n              </span>\n            </span>\n          </div>\n        </div>\n        <button mat-button (click)=\"openRoleDialog()\" class=\"text-left color-primary mt-3 p-0\">\n          <mat-icon class=\"mr-3\">add_circle_outline</mat-icon>\n          Add Role\n        </button>\n      </mat-card>\n    </div>\n  `,\n})\nexport class NewUserFormComponent {\n  public newUserForm: FormGroup;\n  public selectedRoles: Role[];\n  public roleLocationObjects: BehaviorSubject<{ role: Role; locations: Location[] }[]> = new BehaviorSubject(null);\n  public formValid: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(\n    private apiRoleService: ApiRoleService,\n    private uiListSelectService: UiListSelectDialogService<Role | Location>,\n    @Inject(MAT_DIALOG_DATA) public data: LoggedInUser,\n    public dialogRef: MatDialogRef<NewUserFormComponent>,\n    public formBuilder: FormBuilder,\n    private apiLocationService: ApiLocationService,\n    private apiUserService: ApiUserService,\n    private notificationService: UiNotificationService\n  ) {\n    this.createForm();\n  }\n\n  public createNewUser(): void {\n    const newUser = {\n      FirstName: this.newUserForm.value.firstName,\n      LastName: this.newUserForm.value.lastName,\n      Email: this.newUserForm.value.email,\n      OrgID: this.data.CurrentOrg.ID,\n      Permission: Permissions.Viewer,\n      JobTitle: 'User',\n      CreatedBy: this.data.CurrentUser.ID,\n      RoleLocations: this.formatForUpdateOrgUser(),\n    };\n    this.apiUserService\n      .createOrgUser(newUser)\n      .pipe(take(1))\n      .subscribe((result) => {\n        if (result.Status === 'success') {\n          this.dialogRef.close();\n          this.notificationService.show(NotificationType.success, 'Close', `${newUser.FirstName} ${newUser.LastName} created`, 5000);\n        } else if (result.Status === 'error') {\n          this.notificationService.show(NotificationType.error, 'Close', `${result.Message}`, 5000);\n        }\n      });\n  }\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n\n  public openRoleDialog(): void {\n    this.apiRoleService.getRolesByOrg(this.data.CurrentOrg.ID).subscribe((response) => {\n      this.uiListSelectService.open({\n        inputList: response.OrgRoleList,\n        currentSelectedList: this.selectedRoles,\n        primaryValueSelector1: 'Name',\n        compareValueBy: 'ID',\n        iconClass: 'person_outline',\n      });\n\n      this.uiListSelectService.closed().subscribe((selectedRoles: Role[]) => {\n        if (selectedRoles.length <= 0) {\n          this.roleLocationObjects.next([]);\n          this.selectedRoles = [];\n          return;\n        }\n\n        let newSelectedRoles = selectedRoles;\n        let oldSelectedRoleLocations = [];\n        if (this.roleLocationObjects.value && this.roleLocationObjects.value.length > 0) {\n          newSelectedRoles = selectedRoles.filter((role) => {\n            return !this.roleLocationObjects.value.some((obj) => obj.role.ID === role.ID);\n          });\n          oldSelectedRoleLocations = this.roleLocationObjects.value.filter((obj) => {\n            return selectedRoles.some((role) => {\n              return obj.role.ID === role.ID;\n            });\n          });\n          selectedRoles.forEach((role) => {\n            this.roleLocationObjects.next(this.roleLocationObjects.value.filter((obj) => obj.role.ID === role.ID));\n          });\n        }\n        this.selectedRoles = selectedRoles;\n\n        if (newSelectedRoles.length > 0) {\n          this.apiLocationService.getLocationsByOrgId(this.data.CurrentOrg.ID).subscribe((locations) => {\n            this.uiListSelectService.open({\n              inputList: locations,\n              primaryValueSelector1: 'Name',\n              compareValueBy: 'ID',\n              iconClass: 'domain',\n            });\n\n            this.uiListSelectService.closed().subscribe((selectedLocations: Location[]) => {\n              if (!selectedLocations) return;\n\n              const newRoleLocations = [{ role: newSelectedRoles[0], locations: selectedLocations }];\n\n              newSelectedRoles.forEach((role) => {\n                if (newRoleLocations.some((obj) => obj.role.ID !== role.ID)) {\n                  newRoleLocations.push({ role: role, locations: selectedLocations });\n                }\n              });\n\n              this.roleLocationObjects.next(oldSelectedRoleLocations ? oldSelectedRoleLocations.concat(newRoleLocations) : newRoleLocations);\n              this.checkForm();\n            });\n          });\n        }\n      });\n    });\n  }\n\n  public openLocationDialog(roleLocationObj): void {\n    this.apiLocationService.getLocationsByOrgId(this.data.CurrentOrg.ID).subscribe((locations) => {\n      this.uiListSelectService.open({\n        inputList: locations,\n        currentSelectedList: roleLocationObj.locations,\n        primaryValueSelector1: 'Name',\n        compareValueBy: 'ID',\n        iconClass: 'domain',\n      });\n\n      this.uiListSelectService.closed().subscribe((selectedLocations: Location[]) => {\n        if (!selectedLocations) return;\n        this.roleLocationObjects.next(\n          this.roleLocationObjects.value.map((obj) => {\n            if (obj.role.ID === roleLocationObj.role.ID) {\n              return { role: roleLocationObj.role, locations: selectedLocations };\n            }\n            return obj;\n          })\n        );\n        this.checkForm();\n      });\n    });\n  }\n\n  public removeRole(role: Role) {\n    this.selectedRoles = this.selectedRoles.filter((selectedRole) => selectedRole.ID !== role.ID);\n    this.roleLocationObjects.next(this.roleLocationObjects.value.filter((roleLocation) => roleLocation.role.ID !== role.ID));\n    this.checkForm();\n  }\n\n  public checkForm(): void {\n    let formValid = true;\n    if (!this.newUserForm.valid || !this.roleLocationObjects.value) {\n      formValid = false; // not all fields finished.\n    } else {\n      this.roleLocationObjects.value.forEach((obj) => {\n        if (!obj.locations) {\n          formValid = false; // no locations\n        }\n      });\n    }\n    this.formValid.next(formValid);\n  }\n\n  public getLocationString(locations: Location[]): string {\n    if (!locations) return 'Add Location';\n    return locations.length <= 1 ? locations[0].Name : `${locations.length} Locations`;\n  }\n\n  private createForm(): void {\n    this.newUserForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  private formatForUpdateOrgUser(): [{ RoleID: number; LocationID: number }] {\n    let newFormattedArray = null;\n    this.roleLocationObjects.value.forEach((roleLocation) => {\n      roleLocation.locations.forEach((location) => {\n        if (newFormattedArray) {\n          newFormattedArray.push({ RoleID: roleLocation.role.ID, LocationID: location.ID });\n        } else {\n          newFormattedArray = [{ RoleID: roleLocation.role.ID, LocationID: location.ID }];\n        }\n      });\n    });\n    return newFormattedArray;\n  }\n\n  // private formatRoleLocations(): RoleLocations[] {\n  //   let roleLocations;\n  //   this.roleLocationObjects.value.forEach((data) => {\n  //     if (roleLocations) {\n  //       roleLocations.push({\n  //         OrgID: data.role.OrgID,\n  //         XenUserID: data.role.CreatedBy,\n  //         RoleID: data.role.ID,\n  //         RoleName: data.role.Name,\n  //         LocationList: data.locations,\n  //       });\n  //     } else {\n  //       roleLocations = [\n  //         { OrgID: data.role.OrgID, XenUserID: data.role.CreatedBy, RoleID: data.role.ID, RoleName: data.role.Name, LocationList: data.locations },\n  //       ];\n  //     }\n  //   });\n  //   return roleLocations;\n  // }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ApiOrganizationService, Organization, User } from '@xenon/api';\nimport * as _ from 'lodash-es';\nimport { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'xenon-user-list',\n  styleUrls: ['./user-list.component.scss'],\n  templateUrl: './user-list.component.html',\n})\nexport class UserListComponent implements OnChanges {\n  public columns: string[] = ['Name', 'Access', 'Email', 'Actions'];\n\n  @Input() users: User[] = [];\n  @Output() userItemClicked = new EventEmitter<User>();\n  @Output() deleteUserItemClick = new EventEmitter<User>();\n\n  organizationsAsObject: object;\n\n  constructor(private apiOrganizationService: ApiOrganizationService) {}\n\n  public clickUser(user: User): void {\n    this.userItemClicked.emit(user);\n  }\n\n  public clickDeleteUser(user: User): void {\n    this.deleteUserItemClick.emit(user);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.users.currentValue) {\n      const users = changes.users.currentValue;\n      const queue = [];\n      const orgIds = _.uniq(users.map((r) => r.OrgID));\n      orgIds.forEach((id: number) => queue.push(this.apiOrganizationService.getOrg(id)));\n      forkJoin(queue).pipe(\n        map((organizations: Organization[]) => {\n          this.organizationsAsObject = _.keyBy(organizations, 'ID');\n        })\n      );\n    }\n  }\n}\n","<table mat-table [dataSource]=\"users\" class=\"mat-elevation-z0\">\n  <ng-container matColumnDef=\"Name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td class=\"clickable\" mat-cell (click)=\"clickUser(element)\" *matCellDef=\"let element\">{{ element.FirstName }} {{ element.LastName }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Access\">\n    <th mat-header-cell class=\"text-right\" *matHeaderCellDef>Account Access</th>\n    <td mat-cell (click)=\"clickUser(element)\" *matCellDef=\"let element\" class=\"text-right clickable\">\n      {{ element.Permission }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Email\">\n    <th mat-header-cell *matHeaderCellDef>Email</th>\n    <td class=\"clickable\" mat-cell (click)=\"clickUser(element)\" *matCellDef=\"let element\">\n      {{ element.Email }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Actions\">\n    <th width=\"10\" mat-header-cell *matHeaderCellDef></th>\n    <td class=\"clickable\" width=\"10\" mat-cell *matCellDef=\"let element\">\n      <mat-icon color=\"primary\" (click)=\"clickDeleteUser(element)\">\n        delete\n      </mat-icon>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, of, Subject, throwError } from 'rxjs';\n\nimport { ApiLocationService, ApiRoleService, ApiUserService, GetRolesByOrgResponse, User } from '@xenon/api';\nimport { UtilLocalStorageService, SearchPipe } from '@xenon/utils';\nimport { catchError, flatMap, map, mergeMap, take, takeUntil } from 'rxjs/operators';\nimport { NotificationType, UiNotificationService, UiPromptService, UIUserFormComponent } from '@xenon/ui';\nimport { AdminBase } from '../../../shared/admin-base';\n\nimport { NewUserFormComponent } from './new-user-form/new-user-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'xenon-users',\n  styleUrls: ['./users.component.scss'],\n  template: `\n    <div class=\"page-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <h6 class=\"title\">Users</h6>\n      <xenon-ui-string-search [searchString]=\"search$ | async\" (searchChange)=\"searchChange($event)\" [label]=\"'Search Users'\"> </xenon-ui-string-search>\n    </div>\n\n    <div class=\"page-body\">\n      <xenon-user-list (userItemClicked)=\"openUserForm($event)\" (deleteUserItemClick)=\"deleteUser($event)\" [users]=\"users$\"> </xenon-user-list>\n\n      <button mat-fab mat-flat-button (click)=\"openNewUserForm()\" class=\"add-button\" color=\"primary\" aria-label=\"Create new Organization\">\n        <mat-icon>add</mat-icon>\n      </button>\n    </div>\n  `,\n})\nexport class UsersComponent extends AdminBase implements OnInit, OnDestroy {\n  public search$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n  users$: User[] = [];\n  cachedUsers: User[] = [];\n  private columnsToSearchBy = ['FirstName', 'LastName', 'FullName', 'Email', 'Org'];\n\n  private searchPipe: SearchPipe;\n\n  unsubscribe = new Subject<{}>();\n  orgLocations: Location[];\n\n  constructor(\n    public uiPromptService: UiPromptService,\n    public notificationService: UiNotificationService,\n    private apiUserService: ApiUserService,\n    private utilLocalStorageService: UtilLocalStorageService,\n    private apiRoleService: ApiRoleService,\n    private apiLocationService: ApiLocationService,\n    private dialog: MatDialog\n  ) {\n    super();\n    this.loggedInUser = this.utilLocalStorageService.getItem('user');\n    this.searchPipe = new SearchPipe();\n  }\n\n  ngOnInit(): void {\n    this.refreshData();\n\n    this.apiLocationService.getLocationsByOrgId(this.loggedInUser.CurrentOrg.ID).subscribe((response: any) => {\n      this.orgLocations = response;\n    });\n\n    this.apiUserService.cachedUsers.pipe(takeUntil(this.unsubscribe)).subscribe((users: User[]) => {\n      this.users$ = users;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  public deleteUser(user: User) {\n    const sub = this.uiPromptService\n      .prompt(`Are you sure you sure you want to delete \"${user.FirstName} ${user.LastName}\"?`)\n      .afterClosed()\n      .pipe(\n        flatMap((r: { ok: boolean }) => {\n          return r.ok ? this.apiUserService.deleteUser(this.loggedInUser.CurrentOrg.ID, user.ID) : of({ Status: 'empty' });\n        })\n      )\n      .subscribe((m) => {\n        if (m.Status === 'success') {\n          this.notificationService.show(NotificationType.success, 'Close', 'User Deleted', 2500);\n          setTimeout(() => {\n            this.refreshData();\n          }, 2500);\n        }\n      });\n\n    this.subscriptions.add(sub);\n  }\n\n  public openUserForm(user?: User): void {\n    if (!this.loggedInUser) {\n      this.loggedInUser = this.utilLocalStorageService.getItem('user');\n\n      if (!this.loggedInUser) {\n        this.notificationService.show(NotificationType.error, 'Error', 'Can not get current user data', 2500);\n        return;\n      }\n    }\n\n    this.apiUserService\n      .getUsersByOrganization(this.loggedInUser.CurrentOrg.ID)\n      .pipe(\n        takeUntil(this.unsubscribe),\n        map((response: User[]) => {\n          const foundUser = response.find((u) => u.ID === this.loggedInUser.CurrentUser.ID);\n          this.loggedInUser.CurrentUser.RoleLocations = foundUser.RoleLocations;\n          return foundUser;\n        }),\n        mergeMap((u) => this.apiRoleService.getRolesByOrg(this.loggedInUser.CurrentOrg.ID)),\n        catchError((err) => {\n          return throwError(err);\n        })\n      )\n      .subscribe((response: GetRolesByOrgResponse) => {\n        const formData = {\n          user: user ?? undefined,\n          refresh: this.refreshData.bind(this),\n          roles: response.OrgRoleList,\n          locations: this.orgLocations,\n        };\n        this.dialog.open(UIUserFormComponent, {\n          data: formData,\n          panelClass: 'full-page-dialog',\n        });\n      });\n  }\n\n  public openNewUserForm(): void {\n    const dialogRef = this.dialog.open(NewUserFormComponent, {\n      data: this.loggedInUser,\n      panelClass: 'full-page-dialog',\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((_) => {\n        this.refreshData();\n      });\n  }\n\n  public searchChange(searchInput: string): void {\n    const filteredUsers: User[] = this.searchPipe.transform(this.cachedUsers, searchInput, this.columnsToSearchBy);\n    this.apiUserService.setCachedUsers(filteredUsers);\n  }\n\n  private refreshData(): void {\n    this.apiUserService.getUsersByOrganization(this.loggedInUser.CurrentOrg.ID).subscribe((response: User[]) => {\n      this.cachedUsers = response;\n      this.apiUserService.setCachedUsers(response);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { UiListSelectModule } from '@xenon/ui';\nimport { NewUserFormComponent } from './new-user-form/new-user-form.component';\n\n@NgModule({\n  declarations: [UsersComponent, UserListComponent, NewUserFormComponent],\n  imports: [SharedModule, UsersRoutingModule, UiListSelectModule],\n})\nexport class UsersModule {}\n"],"sourceRoot":"webpack:///"}